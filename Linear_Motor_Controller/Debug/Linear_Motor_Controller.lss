
Linear_Motor_Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000154  00800100  00003406  0000349a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003406  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021e  00800254  00800254  000035ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000035ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000364c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  0000368c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003e6d  00000000  00000000  00003814  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f61  00000000  00000000  00007681  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001755  00000000  00000000  000085e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007e4  00000000  00000000  00009d38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a50  00000000  00000000  0000a51c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003e87  00000000  00000000  0000af6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000310  00000000  00000000  0000edf3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
       4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      1c:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__vector_7>
      20:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <__vector_8>
      24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      2c:	0c 94 14 0c 	jmp	0x1828	; 0x1828 <__vector_11>
      30:	0c 94 ac 0c 	jmp	0x1958	; 0x1958 <__vector_12>
      34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      38:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_14>
      3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      48:	0c 94 1e 09 	jmp	0x123c	; 0x123c <__vector_18>
      4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      54:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_21>
      58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	4e 41       	sbci	r20, 0x1E	; 30
      6a:	4e 49       	Address 0x0000006a is out of bounds.
.word	0xffff	; ????

0000006b <pstr_inity>:
      6b:	49 4e 49 54 59                                      INITY

00000070 <pstr_inf>:
      70:	49 4e 46                                            INF

00000073 <pwr_m10>:
      73:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      83:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000008b <pwr_p10>:
      8b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      9b:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000a4 <__ctors_end>:
      a4:	11 24       	eor	r1, r1
      a6:	1f be       	out	0x3f, r1	; 63
      a8:	cf ef       	ldi	r28, 0xFF	; 255
      aa:	d8 e0       	ldi	r29, 0x08	; 8
      ac:	de bf       	out	0x3e, r29	; 62
      ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
      b0:	12 e0       	ldi	r17, 0x02	; 2
      b2:	a0 e0       	ldi	r26, 0x00	; 0
      b4:	b1 e0       	ldi	r27, 0x01	; 1
      b6:	e6 e0       	ldi	r30, 0x06	; 6
      b8:	f4 e3       	ldi	r31, 0x34	; 52
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x10>
      bc:	05 90       	lpm	r0, Z+
      be:	0d 92       	st	X+, r0
      c0:	a4 35       	cpi	r26, 0x54	; 84
      c2:	b1 07       	cpc	r27, r17
      c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0xc>

000000c6 <__do_clear_bss>:
      c6:	24 e0       	ldi	r18, 0x04	; 4
      c8:	a4 e5       	ldi	r26, 0x54	; 84
      ca:	b2 e0       	ldi	r27, 0x02	; 2
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	a2 37       	cpi	r26, 0x72	; 114
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	0e 94 7d 09 	call	0x12fa	; 0x12fa <main>
      da:	0c 94 01 1a 	jmp	0x3402	; 0x3402 <_exit>

000000de <__bad_interrupt>:
      de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <adc_initiate>:
 void adc_start(float* operating_frequency){
 	OCR0A = (uint8_t)(F_CPU/(64.0 * (float)SAMPLING_SIZE * (*operating_frequency)));
	TIMSK0 |= (1 << OCIE0A);
	TCNT0 = 0;
	compA_count = 0;
	current_index = 0;
      e2:	ea e7       	ldi	r30, 0x7A	; 122
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	80 81       	ld	r24, Z
      e8:	86 60       	ori	r24, 0x06	; 6
      ea:	80 83       	st	Z, r24
      ec:	80 81       	ld	r24, Z
      ee:	80 68       	ori	r24, 0x80	; 128
      f0:	80 83       	st	Z, r24
      f2:	80 81       	ld	r24, Z
      f4:	88 60       	ori	r24, 0x08	; 8
      f6:	80 83       	st	Z, r24
      f8:	80 81       	ld	r24, Z
      fa:	80 62       	ori	r24, 0x20	; 32
      fc:	80 83       	st	Z, r24
      fe:	eb e7       	ldi	r30, 0x7B	; 123
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	80 81       	ld	r24, Z
     104:	83 60       	ori	r24, 0x03	; 3
     106:	80 83       	st	Z, r24
     108:	85 b5       	in	r24, 0x25	; 37
     10a:	83 60       	ori	r24, 0x03	; 3
     10c:	85 bd       	out	0x25, r24	; 37
     10e:	08 95       	ret

00000110 <__vector_14>:
 }

 //This ISR controls the timer used for ADC auto trigger
 ISR(TIMER0_COMPA_vect){
     110:	1f 92       	push	r1
     112:	0f 92       	push	r0
     114:	0f b6       	in	r0, 0x3f	; 63
     116:	0f 92       	push	r0
     118:	11 24       	eor	r1, r1
     11a:	8f 93       	push	r24
	compA_count++;
     11c:	80 91 cb 03 	lds	r24, 0x03CB	; 0x8003cb <compA_count>
     120:	8f 5f       	subi	r24, 0xFF	; 255
     122:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <compA_count>
	TCNT0 = 0;
     126:	16 bc       	out	0x26, r1	; 38
 }
     128:	8f 91       	pop	r24
     12a:	0f 90       	pop	r0
     12c:	0f be       	out	0x3f, r0	; 63
     12e:	0f 90       	pop	r0
     130:	1f 90       	pop	r1
     132:	18 95       	reti

00000134 <__vector_21>:

 //This ISR controls the storing of ADC values in their appropriate arrays

 ISR(ADC_vect){
     134:	1f 92       	push	r1
     136:	0f 92       	push	r0
     138:	0f b6       	in	r0, 0x3f	; 63
     13a:	0f 92       	push	r0
     13c:	11 24       	eor	r1, r1
     13e:	8f 92       	push	r8
     140:	9f 92       	push	r9
     142:	af 92       	push	r10
     144:	bf 92       	push	r11
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	2f 93       	push	r18
     154:	3f 93       	push	r19
     156:	4f 93       	push	r20
     158:	5f 93       	push	r21
     15a:	6f 93       	push	r22
     15c:	7f 93       	push	r23
     15e:	8f 93       	push	r24
     160:	9f 93       	push	r25
     162:	af 93       	push	r26
     164:	bf 93       	push	r27
     166:	ef 93       	push	r30
     168:	ff 93       	push	r31
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	cd b7       	in	r28, 0x3d	; 61
     170:	de b7       	in	r29, 0x3e	; 62
     172:	25 97       	sbiw	r28, 0x05	; 5
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61
	if(current_index != SAMPLING_SIZE){
     178:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <current_index>
     17c:	86 39       	cpi	r24, 0x96	; 150
     17e:	99 f0       	breq	.+38     	; 0x1a6 <__vector_21+0x72>
		current_values[current_index] = ADC;//*5*0.78/3.8/0.25/1024;
     180:	e0 91 cc 03 	lds	r30, 0x03CC	; 0x8003cc <current_index>
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     18a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     18e:	ee 0f       	add	r30, r30
     190:	ff 1f       	adc	r31, r31
     192:	e8 56       	subi	r30, 0x68	; 104
     194:	fd 4f       	sbci	r31, 0xFD	; 253
     196:	91 83       	std	Z+1, r25	; 0x01
     198:	80 83       	st	Z, r24
		current_index++;
     19a:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <current_index>
     19e:	8f 5f       	subi	r24, 0xFF	; 255
     1a0:	80 93 cc 03 	sts	0x03CC, r24	; 0x8003cc <current_index>
     1a4:	6b c0       	rjmp	.+214    	; 0x27c <__vector_21+0x148>
	}
	else{
		current_index = 0;
     1a6:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <current_index>
		uart_transmit("START OF CYCLE\n\r");
     1aa:	8a e0       	ldi	r24, 0x0A	; 10
     1ac:	91 e0       	ldi	r25, 0x01	; 1
     1ae:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
		for(unsigned int i = 0; i < SAMPLING_SIZE; i++){
     1b2:	00 e0       	ldi	r16, 0x00	; 0
     1b4:	10 e0       	ldi	r17, 0x00	; 0
				uint8_t hundreds = (((uint8_t)current_values[i]%1000)/100) + 48;
				uint8_t tens = ((((uint8_t)current_values[i]%1000)%100)/10) + 48;
				uint8_t ones = (((((uint8_t)current_values[i]%1000)%100)%10)) + 48;
				char array[5];
				array[0] = thousands;
				array[1] = hundreds;
     1b6:	0f 2e       	mov	r0, r31
     1b8:	f8 ee       	ldi	r31, 0xE8	; 232
     1ba:	cf 2e       	mov	r12, r31
     1bc:	f3 e0       	ldi	r31, 0x03	; 3
     1be:	df 2e       	mov	r13, r31
     1c0:	f0 2d       	mov	r31, r0
     1c2:	0f 2e       	mov	r0, r31
     1c4:	f4 e6       	ldi	r31, 0x64	; 100
     1c6:	ef 2e       	mov	r14, r31
     1c8:	f1 2c       	mov	r15, r1
     1ca:	f0 2d       	mov	r31, r0
				array[2] = tens;
     1cc:	0f 2e       	mov	r0, r31
     1ce:	fa e0       	ldi	r31, 0x0A	; 10
     1d0:	af 2e       	mov	r10, r31
     1d2:	b1 2c       	mov	r11, r1
     1d4:	f0 2d       	mov	r31, r0
	}
	else{
		current_index = 0;
		uart_transmit("START OF CYCLE\n\r");
		for(unsigned int i = 0; i < SAMPLING_SIZE; i++){
				uint8_t thousands = (current_values[i]/1000) + 48;
     1d6:	f8 01       	movw	r30, r16
     1d8:	ee 0f       	add	r30, r30
     1da:	ff 1f       	adc	r31, r31
     1dc:	e8 56       	subi	r30, 0x68	; 104
     1de:	fd 4f       	sbci	r31, 0xFD	; 253
     1e0:	20 81       	ld	r18, Z
     1e2:	31 81       	ldd	r19, Z+1	; 0x01
				uint8_t hundreds = (((uint8_t)current_values[i]%1000)/100) + 48;
     1e4:	40 81       	ld	r20, Z
     1e6:	51 81       	ldd	r21, Z+1	; 0x01
				uint8_t tens = ((((uint8_t)current_values[i]%1000)%100)/10) + 48;
     1e8:	80 80       	ld	r8, Z
     1ea:	91 80       	ldd	r9, Z+1	; 0x01
				uint8_t ones = (((((uint8_t)current_values[i]%1000)%100)%10)) + 48;
     1ec:	01 90       	ld	r0, Z+
     1ee:	f0 81       	ld	r31, Z
     1f0:	e0 2d       	mov	r30, r0
				char array[5];
				array[0] = thousands;
     1f2:	36 95       	lsr	r19
     1f4:	27 95       	ror	r18
     1f6:	36 95       	lsr	r19
     1f8:	27 95       	ror	r18
     1fa:	36 95       	lsr	r19
     1fc:	27 95       	ror	r18
     1fe:	a5 ec       	ldi	r26, 0xC5	; 197
     200:	b0 e2       	ldi	r27, 0x20	; 32
     202:	0e 94 bd 11 	call	0x237a	; 0x237a <__umulhisi3>
     206:	92 95       	swap	r25
     208:	82 95       	swap	r24
     20a:	8f 70       	andi	r24, 0x0F	; 15
     20c:	89 27       	eor	r24, r25
     20e:	9f 70       	andi	r25, 0x0F	; 15
     210:	89 27       	eor	r24, r25
     212:	80 5d       	subi	r24, 0xD0	; 208
     214:	89 83       	std	Y+1, r24	; 0x01
				array[1] = hundreds;
     216:	ca 01       	movw	r24, r20
     218:	99 27       	eor	r25, r25
     21a:	b6 01       	movw	r22, r12
     21c:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     220:	b7 01       	movw	r22, r14
     222:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     226:	60 5d       	subi	r22, 0xD0	; 208
     228:	6a 83       	std	Y+2, r22	; 0x02
				array[2] = tens;
     22a:	c4 01       	movw	r24, r8
     22c:	99 27       	eor	r25, r25
     22e:	b6 01       	movw	r22, r12
     230:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     234:	b7 01       	movw	r22, r14
     236:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     23a:	b5 01       	movw	r22, r10
     23c:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     240:	60 5d       	subi	r22, 0xD0	; 208
     242:	6b 83       	std	Y+3, r22	; 0x03
				array[3] = ones;
     244:	cf 01       	movw	r24, r30
     246:	99 27       	eor	r25, r25
     248:	b6 01       	movw	r22, r12
     24a:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     24e:	b7 01       	movw	r22, r14
     250:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     254:	b5 01       	movw	r22, r10
     256:	0e 94 a9 11 	call	0x2352	; 0x2352 <__divmodhi4>
     25a:	80 5d       	subi	r24, 0xD0	; 208
     25c:	8c 83       	std	Y+4, r24	; 0x04
				array[4] = '\0';
     25e:	1d 82       	std	Y+5, r1	; 0x05
				uart_transmit(array);
     260:	ce 01       	movw	r24, r28
     262:	01 96       	adiw	r24, 0x01	; 1
     264:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
				uart_transmit("\n\r");
     268:	88 e1       	ldi	r24, 0x18	; 24
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
		current_index++;
	}
	else{
		current_index = 0;
		uart_transmit("START OF CYCLE\n\r");
		for(unsigned int i = 0; i < SAMPLING_SIZE; i++){
     270:	0f 5f       	subi	r16, 0xFF	; 255
     272:	1f 4f       	sbci	r17, 0xFF	; 255
     274:	06 39       	cpi	r16, 0x96	; 150
     276:	11 05       	cpc	r17, r1
     278:	09 f0       	breq	.+2      	; 0x27c <__vector_21+0x148>
     27a:	ad cf       	rjmp	.-166    	; 0x1d6 <__vector_21+0xa2>
				array[4] = '\0';
				uart_transmit(array);
				uart_transmit("\n\r");
		}
	}
}
     27c:	0f 90       	pop	r0
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	ff 91       	pop	r31
     28c:	ef 91       	pop	r30
     28e:	bf 91       	pop	r27
     290:	af 91       	pop	r26
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	7f 91       	pop	r23
     298:	6f 91       	pop	r22
     29a:	5f 91       	pop	r21
     29c:	4f 91       	pop	r20
     29e:	3f 91       	pop	r19
     2a0:	2f 91       	pop	r18
     2a2:	1f 91       	pop	r17
     2a4:	0f 91       	pop	r16
     2a6:	ff 90       	pop	r15
     2a8:	ef 90       	pop	r14
     2aa:	df 90       	pop	r13
     2ac:	cf 90       	pop	r12
     2ae:	bf 90       	pop	r11
     2b0:	af 90       	pop	r10
     2b2:	9f 90       	pop	r9
     2b4:	8f 90       	pop	r8
     2b6:	0f 90       	pop	r0
     2b8:	0f be       	out	0x3f, r0	; 63
     2ba:	0f 90       	pop	r0
     2bc:	1f 90       	pop	r1
     2be:	18 95       	reti

000002c0 <mjson_pass_string>:
  }
}

int mjson_print_file(struct mjson_out *out, const char *ptr, int len) {
  return fwrite(ptr, 1, len, out->u.fp);
}
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	dc 01       	movw	r26, r24
     2ca:	16 16       	cp	r1, r22
     2cc:	17 06       	cpc	r1, r23
     2ce:	1c f0       	brlt	.+6      	; 0x2d6 <mjson_pass_string+0x16>
     2d0:	8f ef       	ldi	r24, 0xFF	; 255
     2d2:	9f ef       	ldi	r25, 0xFF	; 255
     2d4:	45 c0       	rjmp	.+138    	; 0x360 <mjson_pass_string+0xa0>
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	cb e1       	ldi	r28, 0x1B	; 27
     2dc:	d1 e0       	ldi	r29, 0x01	; 1
     2de:	fd 01       	movw	r30, r26
     2e0:	e2 0f       	add	r30, r18
     2e2:	f3 1f       	adc	r31, r19
     2e4:	90 81       	ld	r25, Z
     2e6:	9c 35       	cpi	r25, 0x5C	; 92
     2e8:	09 f5       	brne	.+66     	; 0x32c <mjson_pass_string+0x6c>
     2ea:	89 01       	movw	r16, r18
     2ec:	0f 5f       	subi	r16, 0xFF	; 255
     2ee:	1f 4f       	sbci	r17, 0xFF	; 255
     2f0:	06 17       	cp	r16, r22
     2f2:	17 07       	cpc	r17, r23
     2f4:	4c f5       	brge	.+82     	; 0x348 <mjson_pass_string+0x88>
     2f6:	fd 01       	movw	r30, r26
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	81 81       	ldd	r24, Z+1	; 0x01
     2fe:	88 30       	cpi	r24, 0x08	; 8
     300:	71 f4       	brne	.+28     	; 0x31e <mjson_pass_string+0x5e>
     302:	03 c0       	rjmp	.+6      	; 0x30a <mjson_pass_string+0x4a>
     304:	89 13       	cpse	r24, r25
     306:	0d c0       	rjmp	.+26     	; 0x322 <mjson_pass_string+0x62>
     308:	01 c0       	rjmp	.+2      	; 0x30c <mjson_pass_string+0x4c>
     30a:	ae 01       	movw	r20, r28
     30c:	4b 51       	subi	r20, 0x1B	; 27
     30e:	51 40       	sbci	r21, 0x01	; 1
     310:	fa 01       	movw	r30, r20
     312:	ec 5d       	subi	r30, 0xDC	; 220
     314:	fe 4f       	sbci	r31, 0xFE	; 254
     316:	80 81       	ld	r24, Z
     318:	81 11       	cpse	r24, r1
     31a:	0d c0       	rjmp	.+26     	; 0x336 <mjson_pass_string+0x76>
     31c:	1e c0       	rjmp	.+60     	; 0x35a <mjson_pass_string+0x9a>
     31e:	ec e1       	ldi	r30, 0x1C	; 28
     320:	f1 e0       	ldi	r31, 0x01	; 1
     322:	af 01       	movw	r20, r30
     324:	91 91       	ld	r25, Z+
     326:	91 11       	cpse	r25, r1
     328:	ed cf       	rjmp	.-38     	; 0x304 <mjson_pass_string+0x44>
     32a:	17 c0       	rjmp	.+46     	; 0x35a <mjson_pass_string+0x9a>
     32c:	99 23       	and	r25, r25
     32e:	79 f0       	breq	.+30     	; 0x34e <mjson_pass_string+0x8e>
     330:	92 32       	cpi	r25, 0x22	; 34
     332:	11 f4       	brne	.+4      	; 0x338 <mjson_pass_string+0x78>
     334:	0f c0       	rjmp	.+30     	; 0x354 <mjson_pass_string+0x94>
     336:	98 01       	movw	r18, r16
     338:	2f 5f       	subi	r18, 0xFF	; 255
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	26 17       	cp	r18, r22
     33e:	37 07       	cpc	r19, r23
     340:	74 f2       	brlt	.-100    	; 0x2de <mjson_pass_string+0x1e>
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	9f ef       	ldi	r25, 0xFF	; 255
     346:	0c c0       	rjmp	.+24     	; 0x360 <mjson_pass_string+0xa0>
     348:	8f ef       	ldi	r24, 0xFF	; 255
     34a:	9f ef       	ldi	r25, 0xFF	; 255
     34c:	09 c0       	rjmp	.+18     	; 0x360 <mjson_pass_string+0xa0>
     34e:	8f ef       	ldi	r24, 0xFF	; 255
     350:	9f ef       	ldi	r25, 0xFF	; 255
     352:	06 c0       	rjmp	.+12     	; 0x360 <mjson_pass_string+0xa0>
     354:	82 2f       	mov	r24, r18
     356:	93 2f       	mov	r25, r19
     358:	03 c0       	rjmp	.+6      	; 0x360 <mjson_pass_string+0xa0>
     35a:	2f 5f       	subi	r18, 0xFF	; 255
     35c:	3f 4f       	sbci	r19, 0xFF	; 255
     35e:	bf cf       	rjmp	.-130    	; 0x2de <mjson_pass_string+0x1e>
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	1f 91       	pop	r17
     366:	0f 91       	pop	r16
     368:	08 95       	ret

0000036a <mjson_find_cb>:
     36a:	af 92       	push	r10
     36c:	bf 92       	push	r11
     36e:	cf 92       	push	r12
     370:	df 92       	push	r13
     372:	ef 92       	push	r14
     374:	ff 92       	push	r15
     376:	0f 93       	push	r16
     378:	1f 93       	push	r17
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
     37e:	d8 01       	movw	r26, r16
     380:	52 96       	adiw	r26, 0x12	; 18
     382:	ed 91       	ld	r30, X+
     384:	fc 91       	ld	r31, X
     386:	53 97       	sbiw	r26, 0x13	; 19
     388:	ef 2b       	or	r30, r31
     38a:	09 f0       	breq	.+2      	; 0x38e <mjson_find_cb+0x24>
     38c:	3e c1       	rjmp	.+636    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     38e:	8b 37       	cpi	r24, 0x7B	; 123
     390:	91 05       	cpc	r25, r1
     392:	11 f5       	brne	.+68     	; 0x3d8 <mjson_find_cb+0x6e>
     394:	ed 91       	ld	r30, X+
     396:	fc 91       	ld	r31, X
     398:	11 97       	sbiw	r26, 0x01	; 1
     39a:	12 96       	adiw	r26, 0x02	; 2
     39c:	8d 91       	ld	r24, X+
     39e:	9c 91       	ld	r25, X
     3a0:	13 97       	sbiw	r26, 0x03	; 3
     3a2:	e8 0f       	add	r30, r24
     3a4:	f9 1f       	adc	r31, r25
     3a6:	80 81       	ld	r24, Z
     3a8:	81 11       	cpse	r24, r1
     3aa:	0f c0       	rjmp	.+30     	; 0x3ca <mjson_find_cb+0x60>
     3ac:	14 96       	adiw	r26, 0x04	; 4
     3ae:	2d 91       	ld	r18, X+
     3b0:	3c 91       	ld	r19, X
     3b2:	15 97       	sbiw	r26, 0x05	; 5
     3b4:	16 96       	adiw	r26, 0x06	; 6
     3b6:	8d 91       	ld	r24, X+
     3b8:	9c 91       	ld	r25, X
     3ba:	17 97       	sbiw	r26, 0x07	; 7
     3bc:	28 17       	cp	r18, r24
     3be:	39 07       	cpc	r19, r25
     3c0:	21 f4       	brne	.+8      	; 0x3ca <mjson_find_cb+0x60>
     3c2:	1d 96       	adiw	r26, 0x0d	; 13
     3c4:	5c 93       	st	X, r21
     3c6:	4e 93       	st	-X, r20
     3c8:	1c 97       	sbiw	r26, 0x0c	; 12
     3ca:	f8 01       	movw	r30, r16
     3cc:	84 81       	ldd	r24, Z+4	; 0x04
     3ce:	95 81       	ldd	r25, Z+5	; 0x05
     3d0:	01 96       	adiw	r24, 0x01	; 1
     3d2:	95 83       	std	Z+5, r25	; 0x05
     3d4:	84 83       	std	Z+4, r24	; 0x04
     3d6:	19 c1       	rjmp	.+562    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     3d8:	e8 01       	movw	r28, r16
     3da:	89 01       	movw	r16, r18
     3dc:	7a 01       	movw	r14, r20
     3de:	9b 01       	movw	r18, r22
     3e0:	8b 35       	cpi	r24, 0x5B	; 91
     3e2:	91 05       	cpc	r25, r1
     3e4:	09 f0       	breq	.+2      	; 0x3e8 <mjson_find_cb+0x7e>
     3e6:	47 c0       	rjmp	.+142    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     3e8:	2c 81       	ldd	r18, Y+4	; 0x04
     3ea:	3d 81       	ldd	r19, Y+5	; 0x05
     3ec:	8e 81       	ldd	r24, Y+6	; 0x06
     3ee:	9f 81       	ldd	r25, Y+7	; 0x07
     3f0:	28 17       	cp	r18, r24
     3f2:	39 07       	cpc	r19, r25
     3f4:	d1 f5       	brne	.+116    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     3f6:	48 81       	ld	r20, Y
     3f8:	59 81       	ldd	r21, Y+1	; 0x01
     3fa:	2a 81       	ldd	r18, Y+2	; 0x02
     3fc:	3b 81       	ldd	r19, Y+3	; 0x03
     3fe:	fa 01       	movw	r30, r20
     400:	e2 0f       	add	r30, r18
     402:	f3 1f       	adc	r31, r19
     404:	90 81       	ld	r25, Z
     406:	9b 35       	cpi	r25, 0x5B	; 91
     408:	09 f0       	breq	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40a:	fb c0       	rjmp	.+502    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     40c:	19 86       	std	Y+9, r1	; 0x09
     40e:	18 86       	std	Y+8, r1	; 0x08
     410:	c9 01       	movw	r24, r18
     412:	01 96       	adiw	r24, 0x01	; 1
     414:	60 e0       	ldi	r22, 0x00	; 0
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	84 0f       	add	r24, r20
     41a:	95 1f       	adc	r25, r21
     41c:	0e 94 c7 13 	call	0x278e	; 0x278e <strtod>
     420:	0e 94 78 10 	call	0x20f0	; 0x20f0 <__fixsfsi>
     424:	7b 87       	std	Y+11, r23	; 0x0b
     426:	6a 87       	std	Y+10, r22	; 0x0a
     428:	28 85       	ldd	r18, Y+8	; 0x08
     42a:	39 85       	ldd	r19, Y+9	; 0x09
     42c:	26 17       	cp	r18, r22
     42e:	37 07       	cpc	r19, r23
     430:	51 f4       	brne	.+20     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     432:	8e 81       	ldd	r24, Y+6	; 0x06
     434:	9f 81       	ldd	r25, Y+7	; 0x07
     436:	01 96       	adiw	r24, 0x01	; 1
     438:	9f 83       	std	Y+7, r25	; 0x07
     43a:	8e 83       	std	Y+6, r24	; 0x06
     43c:	8a 81       	ldd	r24, Y+2	; 0x02
     43e:	9b 81       	ldd	r25, Y+3	; 0x03
     440:	03 96       	adiw	r24, 0x03	; 3
     442:	9b 83       	std	Y+3, r25	; 0x03
     444:	8a 83       	std	Y+2, r24	; 0x02
     446:	e8 81       	ld	r30, Y
     448:	f9 81       	ldd	r31, Y+1	; 0x01
     44a:	8a 81       	ldd	r24, Y+2	; 0x02
     44c:	9b 81       	ldd	r25, Y+3	; 0x03
     44e:	e8 0f       	add	r30, r24
     450:	f9 1f       	adc	r31, r25
     452:	80 81       	ld	r24, Z
     454:	81 11       	cpse	r24, r1
     456:	09 c0       	rjmp	.+18     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     458:	2c 81       	ldd	r18, Y+4	; 0x04
     45a:	3d 81       	ldd	r19, Y+5	; 0x05
     45c:	8e 81       	ldd	r24, Y+6	; 0x06
     45e:	9f 81       	ldd	r25, Y+7	; 0x07
     460:	28 17       	cp	r18, r24
     462:	39 07       	cpc	r19, r25
     464:	11 f4       	brne	.+4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     466:	fd 86       	std	Y+13, r15	; 0x0d
     468:	ec 86       	std	Y+12, r14	; 0x0c
     46a:	8c 81       	ldd	r24, Y+4	; 0x04
     46c:	9d 81       	ldd	r25, Y+5	; 0x05
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	9d 83       	std	Y+5, r25	; 0x05
     472:	8c 83       	std	Y+4, r24	; 0x04
     474:	ca c0       	rjmp	.+404    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     476:	8c 32       	cpi	r24, 0x2C	; 44
     478:	91 05       	cpc	r25, r1
     47a:	79 f5       	brne	.+94     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     47c:	4c 81       	ldd	r20, Y+4	; 0x04
     47e:	5d 81       	ldd	r21, Y+5	; 0x05
     480:	8e 81       	ldd	r24, Y+6	; 0x06
     482:	9f 81       	ldd	r25, Y+7	; 0x07
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	48 17       	cp	r20, r24
     488:	59 07       	cpc	r21, r25
     48a:	09 f0       	breq	.+2      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     48c:	be c0       	rjmp	.+380    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     48e:	88 85       	ldd	r24, Y+8	; 0x08
     490:	99 85       	ldd	r25, Y+9	; 0x09
     492:	01 96       	adiw	r24, 0x01	; 1
     494:	99 87       	std	Y+9, r25	; 0x09
     496:	88 87       	std	Y+8, r24	; 0x08
     498:	2a 85       	ldd	r18, Y+10	; 0x0a
     49a:	3b 85       	ldd	r19, Y+11	; 0x0b
     49c:	82 17       	cp	r24, r18
     49e:	93 07       	cpc	r25, r19
     4a0:	09 f0       	breq	.+2      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     4a2:	b3 c0       	rjmp	.+358    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     4a4:	e8 81       	ld	r30, Y
     4a6:	f9 81       	ldd	r31, Y+1	; 0x01
     4a8:	8a 81       	ldd	r24, Y+2	; 0x02
     4aa:	9b 81       	ldd	r25, Y+3	; 0x03
     4ac:	df 01       	movw	r26, r30
     4ae:	a8 0f       	add	r26, r24
     4b0:	b9 1f       	adc	r27, r25
     4b2:	2c 91       	ld	r18, X
     4b4:	2d 35       	cpi	r18, 0x5D	; 93
     4b6:	59 f0       	breq	.+22     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4b8:	9c 01       	movw	r18, r24
     4ba:	2f 5f       	subi	r18, 0xFF	; 255
     4bc:	3f 4f       	sbci	r19, 0xFF	; 255
     4be:	e2 0f       	add	r30, r18
     4c0:	f3 1f       	adc	r31, r19
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	9b 83       	std	Y+3, r25	; 0x03
     4c6:	8a 83       	std	Y+2, r24	; 0x02
     4c8:	21 91       	ld	r18, Z+
     4ca:	2d 35       	cpi	r18, 0x5D	; 93
     4cc:	d1 f7       	brne	.-12     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     4ce:	01 96       	adiw	r24, 0x01	; 1
     4d0:	9b 83       	std	Y+3, r25	; 0x03
     4d2:	8a 83       	std	Y+2, r24	; 0x02
     4d4:	5f 83       	std	Y+7, r21	; 0x07
     4d6:	4e 83       	std	Y+6, r20	; 0x06
     4d8:	98 c0       	rjmp	.+304    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     4da:	81 30       	cpi	r24, 0x01	; 1
     4dc:	91 05       	cpc	r25, r1
     4de:	79 f5       	brne	.+94     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
     4e0:	cc 80       	ldd	r12, Y+4	; 0x04
     4e2:	dd 80       	ldd	r13, Y+5	; 0x05
     4e4:	8e 81       	ldd	r24, Y+6	; 0x06
     4e6:	9f 81       	ldd	r25, Y+7	; 0x07
     4e8:	01 96       	adiw	r24, 0x01	; 1
     4ea:	c8 16       	cp	r12, r24
     4ec:	d9 06       	cpc	r13, r25
     4ee:	09 f0       	breq	.+2      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4f0:	8c c0       	rjmp	.+280    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     4f2:	88 81       	ld	r24, Y
     4f4:	99 81       	ldd	r25, Y+1	; 0x01
     4f6:	aa 80       	ldd	r10, Y+2	; 0x02
     4f8:	bb 80       	ldd	r11, Y+3	; 0x03
     4fa:	fc 01       	movw	r30, r24
     4fc:	ea 0d       	add	r30, r10
     4fe:	fb 1d       	adc	r31, r11
     500:	40 81       	ld	r20, Z
     502:	4e 32       	cpi	r20, 0x2E	; 46
     504:	09 f0       	breq	.+2      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     506:	81 c0       	rjmp	.+258    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     508:	b5 01       	movw	r22, r10
     50a:	6f 5f       	subi	r22, 0xFF	; 255
     50c:	7f 4f       	sbci	r23, 0xFF	; 255
     50e:	68 0f       	add	r22, r24
     510:	79 1f       	adc	r23, r25
     512:	c7 01       	movw	r24, r14
     514:	01 96       	adiw	r24, 0x01	; 1
     516:	a8 01       	movw	r20, r16
     518:	42 50       	subi	r20, 0x02	; 2
     51a:	51 09       	sbc	r21, r1
     51c:	82 0f       	add	r24, r18
     51e:	93 1f       	adc	r25, r19
     520:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
     524:	89 2b       	or	r24, r25
     526:	09 f0       	breq	.+2      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     528:	70 c0       	rjmp	.+224    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     52a:	df 82       	std	Y+7, r13	; 0x07
     52c:	ce 82       	std	Y+6, r12	; 0x06
     52e:	98 01       	movw	r18, r16
     530:	21 50       	subi	r18, 0x01	; 1
     532:	31 09       	sbc	r19, r1
     534:	a2 0e       	add	r10, r18
     536:	b3 1e       	adc	r11, r19
     538:	bb 82       	std	Y+3, r11	; 0x03
     53a:	aa 82       	std	Y+2, r10	; 0x02
     53c:	66 c0       	rjmp	.+204    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     53e:	ac 01       	movw	r20, r24
     540:	4f 7d       	andi	r20, 0xDF	; 223
     542:	4d 35       	cpi	r20, 0x5D	; 93
     544:	51 05       	cpc	r21, r1
     546:	a9 f5       	brne	.+106    	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
     548:	4c 81       	ldd	r20, Y+4	; 0x04
     54a:	5d 81       	ldd	r21, Y+5	; 0x05
     54c:	41 50       	subi	r20, 0x01	; 1
     54e:	51 09       	sbc	r21, r1
     550:	5d 83       	std	Y+5, r21	; 0x05
     552:	4c 83       	std	Y+4, r20	; 0x04
     554:	e8 81       	ld	r30, Y
     556:	f9 81       	ldd	r31, Y+1	; 0x01
     558:	6a 81       	ldd	r22, Y+2	; 0x02
     55a:	7b 81       	ldd	r23, Y+3	; 0x03
     55c:	e6 0f       	add	r30, r22
     55e:	f7 1f       	adc	r31, r23
     560:	60 81       	ld	r22, Z
     562:	61 11       	cpse	r22, r1
     564:	52 c0       	rjmp	.+164    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     566:	6e 81       	ldd	r22, Y+6	; 0x06
     568:	7f 81       	ldd	r23, Y+7	; 0x07
     56a:	46 17       	cp	r20, r22
     56c:	57 07       	cpc	r21, r23
     56e:	09 f0       	breq	.+2      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     570:	4c c0       	rjmp	.+152    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     572:	6c 85       	ldd	r22, Y+12	; 0x0c
     574:	7d 85       	ldd	r23, Y+13	; 0x0d
     576:	6f 3f       	cpi	r22, 0xFF	; 255
     578:	ff ef       	ldi	r31, 0xFF	; 255
     57a:	7f 07       	cpc	r23, r31
     57c:	09 f4       	brne	.+2      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
     57e:	45 c0       	rjmp	.+138    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     580:	02 97       	sbiw	r24, 0x02	; 2
     582:	9b 8b       	std	Y+19, r25	; 0x13
     584:	8a 8b       	std	Y+18, r24	; 0x12
     586:	ee 85       	ldd	r30, Y+14	; 0x0e
     588:	ff 85       	ldd	r31, Y+15	; 0x0f
     58a:	30 97       	sbiw	r30, 0x00	; 0
     58c:	21 f0       	breq	.+8      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
     58e:	62 0f       	add	r22, r18
     590:	73 1f       	adc	r23, r19
     592:	71 83       	std	Z+1, r23	; 0x01
     594:	60 83       	st	Z, r22
     596:	e8 89       	ldd	r30, Y+16	; 0x10
     598:	f9 89       	ldd	r31, Y+17	; 0x11
     59a:	30 97       	sbiw	r30, 0x00	; 0
     59c:	b1 f1       	breq	.+108    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     59e:	8c 85       	ldd	r24, Y+12	; 0x0c
     5a0:	9d 85       	ldd	r25, Y+13	; 0x0d
     5a2:	e8 1a       	sub	r14, r24
     5a4:	f9 0a       	sbc	r15, r25
     5a6:	4f ef       	ldi	r20, 0xFF	; 255
     5a8:	e4 1a       	sub	r14, r20
     5aa:	f4 0a       	sbc	r15, r20
     5ac:	f1 82       	std	Z+1, r15	; 0x01
     5ae:	e0 82       	st	Z, r14
     5b0:	2c c0       	rjmp	.+88     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     5b2:	ac 01       	movw	r20, r24
     5b4:	4b 50       	subi	r20, 0x0B	; 11
     5b6:	51 09       	sbc	r21, r1
     5b8:	49 30       	cpi	r20, 0x09	; 9
     5ba:	51 05       	cpc	r21, r1
     5bc:	30 f5       	brcc	.+76     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     5be:	6c 81       	ldd	r22, Y+4	; 0x04
     5c0:	7d 81       	ldd	r23, Y+5	; 0x05
     5c2:	4e 81       	ldd	r20, Y+6	; 0x06
     5c4:	5f 81       	ldd	r21, Y+7	; 0x07
     5c6:	64 17       	cp	r22, r20
     5c8:	75 07       	cpc	r23, r21
     5ca:	f9 f4       	brne	.+62     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     5cc:	e8 81       	ld	r30, Y
     5ce:	f9 81       	ldd	r31, Y+1	; 0x01
     5d0:	4a 81       	ldd	r20, Y+2	; 0x02
     5d2:	5b 81       	ldd	r21, Y+3	; 0x03
     5d4:	e4 0f       	add	r30, r20
     5d6:	f5 1f       	adc	r31, r21
     5d8:	40 81       	ld	r20, Z
     5da:	41 11       	cpse	r20, r1
     5dc:	16 c0       	rjmp	.+44     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     5de:	9b 8b       	std	Y+19, r25	; 0x13
     5e0:	8a 8b       	std	Y+18, r24	; 0x12
     5e2:	ee 85       	ldd	r30, Y+14	; 0x0e
     5e4:	ff 85       	ldd	r31, Y+15	; 0x0f
     5e6:	30 97       	sbiw	r30, 0x00	; 0
     5e8:	29 f0       	breq	.+10     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
     5ea:	a9 01       	movw	r20, r18
     5ec:	4e 0d       	add	r20, r14
     5ee:	5f 1d       	adc	r21, r15
     5f0:	51 83       	std	Z+1, r21	; 0x01
     5f2:	40 83       	st	Z, r20
     5f4:	e8 89       	ldd	r30, Y+16	; 0x10
     5f6:	f9 89       	ldd	r31, Y+17	; 0x11
     5f8:	30 97       	sbiw	r30, 0x00	; 0
     5fa:	39 f0       	breq	.+14     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     5fc:	11 83       	std	Z+1, r17	; 0x01
     5fe:	00 83       	st	Z, r16
     600:	04 c0       	rjmp	.+8      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     602:	99 23       	and	r25, r25
     604:	09 f4       	brne	.+2      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
     606:	2f cf       	rjmp	.-418    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     608:	30 cf       	rjmp	.-416    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	1f 91       	pop	r17
     610:	0f 91       	pop	r16
     612:	ff 90       	pop	r15
     614:	ef 90       	pop	r14
     616:	df 90       	pop	r13
     618:	cf 90       	pop	r12
     61a:	bf 90       	pop	r11
     61c:	af 90       	pop	r10
     61e:	08 95       	ret

00000620 <mjson_print_dynamic_buf>:
     620:	8f 92       	push	r8
     622:	9f 92       	push	r9
     624:	af 92       	push	r10
     626:	bf 92       	push	r11
     628:	cf 92       	push	r12
     62a:	df 92       	push	r13
     62c:	ef 92       	push	r14
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	6c 01       	movw	r12, r24
     63a:	5b 01       	movw	r10, r22
     63c:	8a 01       	movw	r16, r20
     63e:	dc 01       	movw	r26, r24
     640:	12 96       	adiw	r26, 0x02	; 2
     642:	ed 91       	ld	r30, X+
     644:	fc 91       	ld	r31, X
     646:	13 97       	sbiw	r26, 0x03	; 3
     648:	80 81       	ld	r24, Z
     64a:	91 81       	ldd	r25, Z+1	; 0x01
     64c:	00 97       	sbiw	r24, 0x00	; 0
     64e:	41 f0       	breq	.+16     	; 0x660 <mjson_print_dynamic_buf+0x40>
     650:	ec 01       	movw	r28, r24
     652:	09 90       	ld	r0, Y+
     654:	00 20       	and	r0, r0
     656:	e9 f7       	brne	.-6      	; 0x652 <mjson_print_dynamic_buf+0x32>
     658:	21 97       	sbiw	r28, 0x01	; 1
     65a:	c8 1b       	sub	r28, r24
     65c:	d9 0b       	sbc	r29, r25
     65e:	02 c0       	rjmp	.+4      	; 0x664 <mjson_print_dynamic_buf+0x44>
     660:	c0 e0       	ldi	r28, 0x00	; 0
     662:	d0 e0       	ldi	r29, 0x00	; 0
     664:	7e 01       	movw	r14, r28
     666:	e0 0e       	add	r14, r16
     668:	f1 1e       	adc	r15, r17
     66a:	b7 01       	movw	r22, r14
     66c:	6f 5f       	subi	r22, 0xFF	; 255
     66e:	7f 4f       	sbci	r23, 0xFF	; 255
     670:	0e 94 01 13 	call	0x2602	; 0x2602 <realloc>
     674:	4c 01       	movw	r8, r24
     676:	00 97       	sbiw	r24, 0x00	; 0
     678:	a1 f0       	breq	.+40     	; 0x6a2 <mjson_print_dynamic_buf+0x82>
     67a:	a8 01       	movw	r20, r16
     67c:	b5 01       	movw	r22, r10
     67e:	8c 0f       	add	r24, r28
     680:	9d 1f       	adc	r25, r29
     682:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <memcpy>
     686:	f4 01       	movw	r30, r8
     688:	ee 0d       	add	r30, r14
     68a:	ff 1d       	adc	r31, r15
     68c:	10 82       	st	Z, r1
     68e:	d6 01       	movw	r26, r12
     690:	12 96       	adiw	r26, 0x02	; 2
     692:	ed 91       	ld	r30, X+
     694:	fc 91       	ld	r31, X
     696:	13 97       	sbiw	r26, 0x03	; 3
     698:	91 82       	std	Z+1, r9	; 0x01
     69a:	80 82       	st	Z, r8
     69c:	80 2f       	mov	r24, r16
     69e:	91 2f       	mov	r25, r17
     6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <mjson_print_dynamic_buf+0x86>
     6a2:	80 e0       	ldi	r24, 0x00	; 0
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	1f 91       	pop	r17
     6ac:	0f 91       	pop	r16
     6ae:	ff 90       	pop	r15
     6b0:	ef 90       	pop	r14
     6b2:	df 90       	pop	r13
     6b4:	cf 90       	pop	r12
     6b6:	bf 90       	pop	r11
     6b8:	af 90       	pop	r10
     6ba:	9f 90       	pop	r9
     6bc:	8f 90       	pop	r8
     6be:	08 95       	ret

000006c0 <mjson_find>:
     6c0:	2f 92       	push	r2
     6c2:	3f 92       	push	r3
     6c4:	4f 92       	push	r4
     6c6:	5f 92       	push	r5
     6c8:	6f 92       	push	r6
     6ca:	7f 92       	push	r7
     6cc:	8f 92       	push	r8
     6ce:	9f 92       	push	r9
     6d0:	af 92       	push	r10
     6d2:	bf 92       	push	r11
     6d4:	cf 92       	push	r12
     6d6:	df 92       	push	r13
     6d8:	ef 92       	push	r14
     6da:	ff 92       	push	r15
     6dc:	0f 93       	push	r16
     6de:	1f 93       	push	r17
     6e0:	cf 93       	push	r28
     6e2:	df 93       	push	r29
     6e4:	cd b7       	in	r28, 0x3d	; 61
     6e6:	de b7       	in	r29, 0x3e	; 62
     6e8:	aa 97       	sbiw	r28, 0x2a	; 42
     6ea:	0f b6       	in	r0, 0x3f	; 63
     6ec:	f8 94       	cli
     6ee:	de bf       	out	0x3e, r29	; 62
     6f0:	0f be       	out	0x3f, r0	; 63
     6f2:	cd bf       	out	0x3d, r28	; 61
     6f4:	6c 01       	movw	r12, r24
     6f6:	5a 83       	std	Y+2, r21	; 0x02
     6f8:	49 83       	std	Y+1, r20	; 0x01
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	9c 83       	std	Y+4, r25	; 0x04
     700:	8b 83       	std	Y+3, r24	; 0x03
     702:	1e 82       	std	Y+6, r1	; 0x06
     704:	1d 82       	std	Y+5, r1	; 0x05
     706:	18 86       	std	Y+8, r1	; 0x08
     708:	1f 82       	std	Y+7, r1	; 0x07
     70a:	1a 86       	std	Y+10, r1	; 0x0a
     70c:	19 86       	std	Y+9, r1	; 0x09
     70e:	1c 86       	std	Y+12, r1	; 0x0c
     710:	1b 86       	std	Y+11, r1	; 0x0b
     712:	ef ef       	ldi	r30, 0xFF	; 255
     714:	ff ef       	ldi	r31, 0xFF	; 255
     716:	fe 87       	std	Y+14, r31	; 0x0e
     718:	ed 87       	std	Y+13, r30	; 0x0d
     71a:	38 8b       	std	Y+16, r19	; 0x10
     71c:	2f 87       	std	Y+15, r18	; 0x0f
     71e:	1a 8b       	std	Y+18, r17	; 0x12
     720:	09 8b       	std	Y+17, r16	; 0x11
     722:	1c 8a       	std	Y+20, r1	; 0x14
     724:	1b 8a       	std	Y+19, r1	; 0x13
     726:	fa 01       	movw	r30, r20
     728:	90 81       	ld	r25, Z
     72a:	94 32       	cpi	r25, 0x24	; 36
     72c:	09 f0       	breq	.+2      	; 0x730 <mjson_find+0x70>
     72e:	b5 c1       	rjmp	.+874    	; 0xa9a <__stack+0x19b>
     730:	16 16       	cp	r1, r22
     732:	17 06       	cpc	r1, r23
     734:	0c f0       	brlt	.+2      	; 0x738 <mjson_find+0x78>
     736:	b5 c1       	rjmp	.+874    	; 0xaa2 <__stack+0x1a3>
     738:	5b 01       	movw	r10, r22
     73a:	61 2c       	mov	r6, r1
     73c:	71 2c       	mov	r7, r1
     73e:	51 2c       	mov	r5, r1
     740:	e1 2c       	mov	r14, r1
     742:	f1 2c       	mov	r15, r1
     744:	0f 2e       	mov	r0, r31
     746:	f3 e0       	ldi	r31, 0x03	; 3
     748:	4f 2e       	mov	r4, r31
     74a:	f0 2d       	mov	r31, r0
     74c:	31 2c       	mov	r3, r1
     74e:	21 2c       	mov	r2, r1
     750:	86 01       	movw	r16, r12
     752:	0e 0d       	add	r16, r14
     754:	1f 1d       	adc	r17, r15
     756:	f8 01       	movw	r30, r16
     758:	90 81       	ld	r25, Z
     75a:	90 32       	cpi	r25, 0x20	; 32
     75c:	09 f4       	brne	.+2      	; 0x760 <mjson_find+0xa0>
     75e:	91 c1       	rjmp	.+802    	; 0xa82 <__stack+0x183>
     760:	27 ef       	ldi	r18, 0xF7	; 247
     762:	29 0f       	add	r18, r25
     764:	22 30       	cpi	r18, 0x02	; 2
     766:	08 f4       	brcc	.+2      	; 0x76a <mjson_find+0xaa>
     768:	8c c1       	rjmp	.+792    	; 0xa82 <__stack+0x183>
     76a:	9d 30       	cpi	r25, 0x0D	; 13
     76c:	09 f4       	brne	.+2      	; 0x770 <mjson_find+0xb0>
     76e:	89 c1       	rjmp	.+786    	; 0xa82 <__stack+0x183>
     770:	e9 2f       	mov	r30, r25
     772:	f0 e0       	ldi	r31, 0x00	; 0
     774:	21 e0       	ldi	r18, 0x01	; 1
     776:	52 16       	cp	r5, r18
     778:	09 f4       	brne	.+2      	; 0x77c <mjson_find+0xbc>
     77a:	ec c0       	rjmp	.+472    	; 0x954 <__stack+0x55>
     77c:	52 16       	cp	r5, r18
     77e:	48 f0       	brcs	.+18     	; 0x792 <mjson_find+0xd2>
     780:	82 e0       	ldi	r24, 0x02	; 2
     782:	58 16       	cp	r5, r24
     784:	09 f4       	brne	.+2      	; 0x788 <mjson_find+0xc8>
     786:	25 c1       	rjmp	.+586    	; 0x9d2 <__stack+0xd3>
     788:	23 e0       	ldi	r18, 0x03	; 3
     78a:	52 16       	cp	r5, r18
     78c:	09 f4       	brne	.+2      	; 0x790 <mjson_find+0xd0>
     78e:	25 c1       	rjmp	.+586    	; 0x9da <__stack+0xdb>
     790:	5c c1       	rjmp	.+696    	; 0xa4a <__stack+0x14b>
     792:	9b 37       	cpi	r25, 0x7B	; 123
     794:	a1 f4       	brne	.+40     	; 0x7be <mjson_find+0xfe>
     796:	84 e1       	ldi	r24, 0x14	; 20
     798:	68 16       	cp	r6, r24
     79a:	71 04       	cpc	r7, r1
     79c:	0c f0       	brlt	.+2      	; 0x7a0 <mjson_find+0xe0>
     79e:	81 c1       	rjmp	.+770    	; 0xaa2 <__stack+0x1a3>
     7a0:	a5 e1       	ldi	r26, 0x15	; 21
     7a2:	b0 e0       	ldi	r27, 0x00	; 0
     7a4:	ac 0f       	add	r26, r28
     7a6:	bd 1f       	adc	r27, r29
     7a8:	a6 0d       	add	r26, r6
     7aa:	b7 1d       	adc	r27, r7
     7ac:	8b e7       	ldi	r24, 0x7B	; 123
     7ae:	8c 93       	st	X, r24
     7b0:	c3 01       	movw	r24, r6
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	3c 01       	movw	r6, r24
     7b6:	47 01       	movw	r8, r14
     7b8:	55 24       	eor	r5, r5
     7ba:	53 94       	inc	r5
     7bc:	54 c1       	rjmp	.+680    	; 0xa66 <__stack+0x167>
     7be:	9b 35       	cpi	r25, 0x5B	; 91
     7c0:	91 f4       	brne	.+36     	; 0x7e6 <mjson_find+0x126>
     7c2:	94 e1       	ldi	r25, 0x14	; 20
     7c4:	69 16       	cp	r6, r25
     7c6:	71 04       	cpc	r7, r1
     7c8:	0c f0       	brlt	.+2      	; 0x7cc <mjson_find+0x10c>
     7ca:	6b c1       	rjmp	.+726    	; 0xaa2 <__stack+0x1a3>
     7cc:	a5 e1       	ldi	r26, 0x15	; 21
     7ce:	b0 e0       	ldi	r27, 0x00	; 0
     7d0:	ac 0f       	add	r26, r28
     7d2:	bd 1f       	adc	r27, r29
     7d4:	a6 0d       	add	r26, r6
     7d6:	b7 1d       	adc	r27, r7
     7d8:	2b e5       	ldi	r18, 0x5B	; 91
     7da:	2c 93       	st	X, r18
     7dc:	c3 01       	movw	r24, r6
     7de:	01 96       	adiw	r24, 0x01	; 1
     7e0:	3c 01       	movw	r6, r24
     7e2:	47 01       	movw	r8, r14
     7e4:	40 c1       	rjmp	.+640    	; 0xa66 <__stack+0x167>
     7e6:	9d 35       	cpi	r25, 0x5D	; 93
     7e8:	11 f5       	brne	.+68     	; 0x82e <mjson_find+0x16e>
     7ea:	91 e0       	ldi	r25, 0x01	; 1
     7ec:	69 1a       	sub	r6, r25
     7ee:	71 08       	sbc	r7, r1
     7f0:	a5 e1       	ldi	r26, 0x15	; 21
     7f2:	b0 e0       	ldi	r27, 0x00	; 0
     7f4:	ac 0f       	add	r26, r28
     7f6:	bd 1f       	adc	r27, r29
     7f8:	a6 0d       	add	r26, r6
     7fa:	b7 1d       	adc	r27, r7
     7fc:	8c 91       	ld	r24, X
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	02 96       	adiw	r24, 0x02	; 2
     802:	e8 17       	cp	r30, r24
     804:	f9 07       	cpc	r31, r25
     806:	09 f0       	breq	.+2      	; 0x80a <mjson_find+0x14a>
     808:	4c c1       	rjmp	.+664    	; 0xaa2 <__stack+0x1a3>
     80a:	61 14       	cp	r6, r1
     80c:	71 04       	cpc	r7, r1
     80e:	09 f0       	breq	.+2      	; 0x812 <mjson_find+0x152>
     810:	1e c1       	rjmp	.+572    	; 0xa4e <__stack+0x14f>
     812:	8e 01       	movw	r16, r28
     814:	0f 5f       	subi	r16, 0xFF	; 255
     816:	1f 4f       	sbci	r17, 0xFF	; 255
     818:	21 e0       	ldi	r18, 0x01	; 1
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	a7 01       	movw	r20, r14
     81e:	b6 01       	movw	r22, r12
     820:	cf 01       	movw	r24, r30
     822:	0e 94 b5 01 	call	0x36a	; 0x36a <mjson_find_cb>
     826:	ef ef       	ldi	r30, 0xFF	; 255
     828:	ee 1a       	sub	r14, r30
     82a:	fe 0a       	sbc	r15, r30
     82c:	32 c1       	rjmp	.+612    	; 0xa92 <__stack+0x193>
     82e:	94 37       	cpi	r25, 0x74	; 116
     830:	99 f4       	brne	.+38     	; 0x858 <mjson_find+0x198>
     832:	47 01       	movw	r8, r14
     834:	f3 e0       	ldi	r31, 0x03	; 3
     836:	8f 0e       	add	r8, r31
     838:	91 1c       	adc	r9, r1
     83a:	8a 14       	cp	r8, r10
     83c:	9b 04       	cpc	r9, r11
     83e:	0c f0       	brlt	.+2      	; 0x842 <mjson_find+0x182>
     840:	30 c1       	rjmp	.+608    	; 0xaa2 <__stack+0x1a3>
     842:	44 e0       	ldi	r20, 0x04	; 4
     844:	50 e0       	ldi	r21, 0x00	; 0
     846:	6d e2       	ldi	r22, 0x2D	; 45
     848:	71 e0       	ldi	r23, 0x01	; 1
     84a:	c8 01       	movw	r24, r16
     84c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
     850:	89 2b       	or	r24, r25
     852:	09 f4       	brne	.+2      	; 0x856 <mjson_find+0x196>
     854:	61 c0       	rjmp	.+194    	; 0x918 <__stack+0x19>
     856:	25 c1       	rjmp	.+586    	; 0xaa2 <__stack+0x1a3>
     858:	9e 36       	cpi	r25, 0x6E	; 110
     85a:	99 f4       	brne	.+38     	; 0x882 <mjson_find+0x1c2>
     85c:	47 01       	movw	r8, r14
     85e:	23 e0       	ldi	r18, 0x03	; 3
     860:	82 0e       	add	r8, r18
     862:	91 1c       	adc	r9, r1
     864:	8a 14       	cp	r8, r10
     866:	9b 04       	cpc	r9, r11
     868:	0c f0       	brlt	.+2      	; 0x86c <mjson_find+0x1ac>
     86a:	1b c1       	rjmp	.+566    	; 0xaa2 <__stack+0x1a3>
     86c:	44 e0       	ldi	r20, 0x04	; 4
     86e:	50 e0       	ldi	r21, 0x00	; 0
     870:	62 e3       	ldi	r22, 0x32	; 50
     872:	71 e0       	ldi	r23, 0x01	; 1
     874:	c8 01       	movw	r24, r16
     876:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
     87a:	89 2b       	or	r24, r25
     87c:	09 f4       	brne	.+2      	; 0x880 <mjson_find+0x1c0>
     87e:	4f c0       	rjmp	.+158    	; 0x91e <__stack+0x1f>
     880:	10 c1       	rjmp	.+544    	; 0xaa2 <__stack+0x1a3>
     882:	96 36       	cpi	r25, 0x66	; 102
     884:	91 f4       	brne	.+36     	; 0x8aa <mjson_find+0x1ea>
     886:	47 01       	movw	r8, r14
     888:	84 e0       	ldi	r24, 0x04	; 4
     88a:	88 0e       	add	r8, r24
     88c:	91 1c       	adc	r9, r1
     88e:	8a 14       	cp	r8, r10
     890:	9b 04       	cpc	r9, r11
     892:	0c f0       	brlt	.+2      	; 0x896 <mjson_find+0x1d6>
     894:	06 c1       	rjmp	.+524    	; 0xaa2 <__stack+0x1a3>
     896:	45 e0       	ldi	r20, 0x05	; 5
     898:	50 e0       	ldi	r21, 0x00	; 0
     89a:	67 e3       	ldi	r22, 0x37	; 55
     89c:	71 e0       	ldi	r23, 0x01	; 1
     89e:	c8 01       	movw	r24, r16
     8a0:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
     8a4:	89 2b       	or	r24, r25
     8a6:	f1 f1       	breq	.+124    	; 0x924 <__stack+0x25>
     8a8:	fc c0       	rjmp	.+504    	; 0xaa2 <__stack+0x1a3>
     8aa:	9d 32       	cpi	r25, 0x2D	; 45
     8ac:	21 f0       	breq	.+8      	; 0x8b6 <mjson_find+0x1f6>
     8ae:	80 ed       	ldi	r24, 0xD0	; 208
     8b0:	89 0f       	add	r24, r25
     8b2:	8a 30       	cpi	r24, 0x0A	; 10
     8b4:	c8 f4       	brcc	.+50     	; 0x8e8 <mjson_find+0x228>
     8b6:	1a a6       	std	Y+42, r1	; 0x2a
     8b8:	19 a6       	std	Y+41, r1	; 0x29
     8ba:	be 01       	movw	r22, r28
     8bc:	67 5d       	subi	r22, 0xD7	; 215
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	c8 01       	movw	r24, r16
     8c2:	0e 94 c7 13 	call	0x278e	; 0x278e <strtod>
     8c6:	89 a5       	ldd	r24, Y+41	; 0x29
     8c8:	9a a5       	ldd	r25, Y+42	; 0x2a
     8ca:	00 97       	sbiw	r24, 0x00	; 0
     8cc:	49 f0       	breq	.+18     	; 0x8e0 <mjson_find+0x220>
     8ce:	80 1b       	sub	r24, r16
     8d0:	91 0b       	sbc	r25, r17
     8d2:	4c 01       	movw	r8, r24
     8d4:	e1 e0       	ldi	r30, 0x01	; 1
     8d6:	8e 1a       	sub	r8, r30
     8d8:	91 08       	sbc	r9, r1
     8da:	8e 0c       	add	r8, r14
     8dc:	9f 1c       	adc	r9, r15
     8de:	01 c0       	rjmp	.+2      	; 0x8e2 <mjson_find+0x222>
     8e0:	47 01       	movw	r8, r14
     8e2:	ec e0       	ldi	r30, 0x0C	; 12
     8e4:	f2 2d       	mov	r31, r2
     8e6:	20 c0       	rjmp	.+64     	; 0x928 <__stack+0x29>
     8e8:	92 32       	cpi	r25, 0x22	; 34
     8ea:	09 f0       	breq	.+2      	; 0x8ee <mjson_find+0x22e>
     8ec:	da c0       	rjmp	.+436    	; 0xaa2 <__stack+0x1a3>
     8ee:	b5 01       	movw	r22, r10
     8f0:	6e 19       	sub	r22, r14
     8f2:	7f 09       	sbc	r23, r15
     8f4:	61 50       	subi	r22, 0x01	; 1
     8f6:	71 09       	sbc	r23, r1
     8f8:	c7 01       	movw	r24, r14
     8fa:	01 96       	adiw	r24, 0x01	; 1
     8fc:	8c 0d       	add	r24, r12
     8fe:	9d 1d       	adc	r25, r13
     900:	0e 94 60 01 	call	0x2c0	; 0x2c0 <mjson_pass_string>
     904:	99 23       	and	r25, r25
     906:	0c f4       	brge	.+2      	; 0x90a <__stack+0xb>
     908:	cc c0       	rjmp	.+408    	; 0xaa2 <__stack+0x1a3>
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	4c 01       	movw	r8, r24
     90e:	8e 0c       	add	r8, r14
     910:	9f 1c       	adc	r9, r15
     912:	eb e0       	ldi	r30, 0x0B	; 11
     914:	f0 e0       	ldi	r31, 0x00	; 0
     916:	08 c0       	rjmp	.+16     	; 0x928 <__stack+0x29>
     918:	ed e0       	ldi	r30, 0x0D	; 13
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	05 c0       	rjmp	.+10     	; 0x928 <__stack+0x29>
     91e:	ef e0       	ldi	r30, 0x0F	; 15
     920:	f0 e0       	ldi	r31, 0x00	; 0
     922:	02 c0       	rjmp	.+4      	; 0x928 <__stack+0x29>
     924:	ee e0       	ldi	r30, 0x0E	; 14
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	61 14       	cp	r6, r1
     92a:	71 04       	cpc	r7, r1
     92c:	09 f0       	breq	.+2      	; 0x930 <__stack+0x31>
     92e:	92 c0       	rjmp	.+292    	; 0xa54 <__stack+0x155>
     930:	94 01       	movw	r18, r8
     932:	2e 19       	sub	r18, r14
     934:	3f 09       	sbc	r19, r15
     936:	2f 5f       	subi	r18, 0xFF	; 255
     938:	3f 4f       	sbci	r19, 0xFF	; 255
     93a:	8e 01       	movw	r16, r28
     93c:	0f 5f       	subi	r16, 0xFF	; 255
     93e:	1f 4f       	sbci	r17, 0xFF	; 255
     940:	a7 01       	movw	r20, r14
     942:	b6 01       	movw	r22, r12
     944:	cf 01       	movw	r24, r30
     946:	0e 94 b5 01 	call	0x36a	; 0x36a <mjson_find_cb>
     94a:	74 01       	movw	r14, r8
     94c:	ff ef       	ldi	r31, 0xFF	; 255
     94e:	ef 1a       	sub	r14, r31
     950:	ff 0a       	sbc	r15, r31
     952:	9f c0       	rjmp	.+318    	; 0xa92 <__stack+0x193>
     954:	92 32       	cpi	r25, 0x22	; 34
     956:	c1 f4       	brne	.+48     	; 0x988 <__stack+0x89>
     958:	b5 01       	movw	r22, r10
     95a:	6e 19       	sub	r22, r14
     95c:	7f 09       	sbc	r23, r15
     95e:	61 50       	subi	r22, 0x01	; 1
     960:	71 09       	sbc	r23, r1
     962:	c7 01       	movw	r24, r14
     964:	01 96       	adiw	r24, 0x01	; 1
     966:	8c 0d       	add	r24, r12
     968:	9d 1d       	adc	r25, r13
     96a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <mjson_pass_string>
     96e:	99 23       	and	r25, r25
     970:	0c f4       	brge	.+2      	; 0x974 <__stack+0x75>
     972:	97 c0       	rjmp	.+302    	; 0xaa2 <__stack+0x1a3>
     974:	01 96       	adiw	r24, 0x01	; 1
     976:	4c 01       	movw	r8, r24
     978:	8e 0c       	add	r8, r14
     97a:	9f 1c       	adc	r9, r15
     97c:	e1 e0       	ldi	r30, 0x01	; 1
     97e:	f3 2d       	mov	r31, r3
     980:	68 94       	set
     982:	55 24       	eor	r5, r5
     984:	51 f8       	bld	r5, 1
     986:	6f c0       	rjmp	.+222    	; 0xa66 <__stack+0x167>
     988:	9d 37       	cpi	r25, 0x7D	; 125
     98a:	09 f0       	breq	.+2      	; 0x98e <__stack+0x8f>
     98c:	8a c0       	rjmp	.+276    	; 0xaa2 <__stack+0x1a3>
     98e:	21 e0       	ldi	r18, 0x01	; 1
     990:	62 1a       	sub	r6, r18
     992:	71 08       	sbc	r7, r1
     994:	a5 e1       	ldi	r26, 0x15	; 21
     996:	b0 e0       	ldi	r27, 0x00	; 0
     998:	ac 0f       	add	r26, r28
     99a:	bd 1f       	adc	r27, r29
     99c:	a6 0d       	add	r26, r6
     99e:	b7 1d       	adc	r27, r7
     9a0:	8c 91       	ld	r24, X
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	02 96       	adiw	r24, 0x02	; 2
     9a6:	e8 17       	cp	r30, r24
     9a8:	f9 07       	cpc	r31, r25
     9aa:	09 f0       	breq	.+2      	; 0x9ae <__stack+0xaf>
     9ac:	7a c0       	rjmp	.+244    	; 0xaa2 <__stack+0x1a3>
     9ae:	61 14       	cp	r6, r1
     9b0:	71 04       	cpc	r7, r1
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <__stack+0xb7>
     9b4:	51 c0       	rjmp	.+162    	; 0xa58 <__stack+0x159>
     9b6:	8e 01       	movw	r16, r28
     9b8:	0f 5f       	subi	r16, 0xFF	; 255
     9ba:	1f 4f       	sbci	r17, 0xFF	; 255
     9bc:	21 e0       	ldi	r18, 0x01	; 1
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	a7 01       	movw	r20, r14
     9c2:	b6 01       	movw	r22, r12
     9c4:	cf 01       	movw	r24, r30
     9c6:	0e 94 b5 01 	call	0x36a	; 0x36a <mjson_find_cb>
     9ca:	8f ef       	ldi	r24, 0xFF	; 255
     9cc:	e8 1a       	sub	r14, r24
     9ce:	f8 0a       	sbc	r15, r24
     9d0:	60 c0       	rjmp	.+192    	; 0xa92 <__stack+0x193>
     9d2:	9a 33       	cpi	r25, 0x3A	; 58
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <__stack+0xd9>
     9d6:	43 c0       	rjmp	.+134    	; 0xa5e <__stack+0x15f>
     9d8:	64 c0       	rjmp	.+200    	; 0xaa2 <__stack+0x1a3>
     9da:	16 14       	cp	r1, r6
     9dc:	17 04       	cpc	r1, r7
     9de:	0c f0       	brlt	.+2      	; 0x9e2 <__stack+0xe3>
     9e0:	60 c0       	rjmp	.+192    	; 0xaa2 <__stack+0x1a3>
     9e2:	9c 32       	cpi	r25, 0x2C	; 44
     9e4:	71 f4       	brne	.+28     	; 0xa02 <__stack+0x103>
     9e6:	55 24       	eor	r5, r5
     9e8:	53 94       	inc	r5
     9ea:	a4 e1       	ldi	r26, 0x14	; 20
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	ac 0f       	add	r26, r28
     9f0:	bd 1f       	adc	r27, r29
     9f2:	a6 0d       	add	r26, r6
     9f4:	b7 1d       	adc	r27, r7
     9f6:	8c 91       	ld	r24, X
     9f8:	8b 37       	cpi	r24, 0x7B	; 123
     9fa:	09 f0       	breq	.+2      	; 0x9fe <__stack+0xff>
     9fc:	51 2c       	mov	r5, r1
     9fe:	47 01       	movw	r8, r14
     a00:	32 c0       	rjmp	.+100    	; 0xa66 <__stack+0x167>
     a02:	9f 7d       	andi	r25, 0xDF	; 223
     a04:	9d 35       	cpi	r25, 0x5D	; 93
     a06:	09 f0       	breq	.+2      	; 0xa0a <__stack+0x10b>
     a08:	4c c0       	rjmp	.+152    	; 0xaa2 <__stack+0x1a3>
     a0a:	91 e0       	ldi	r25, 0x01	; 1
     a0c:	69 1a       	sub	r6, r25
     a0e:	71 08       	sbc	r7, r1
     a10:	a5 e1       	ldi	r26, 0x15	; 21
     a12:	b0 e0       	ldi	r27, 0x00	; 0
     a14:	ac 0f       	add	r26, r28
     a16:	bd 1f       	adc	r27, r29
     a18:	a6 0d       	add	r26, r6
     a1a:	b7 1d       	adc	r27, r7
     a1c:	8c 91       	ld	r24, X
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	02 96       	adiw	r24, 0x02	; 2
     a22:	e8 17       	cp	r30, r24
     a24:	f9 07       	cpc	r31, r25
     a26:	e9 f5       	brne	.+122    	; 0xaa2 <__stack+0x1a3>
     a28:	61 14       	cp	r6, r1
     a2a:	71 04       	cpc	r7, r1
     a2c:	d9 f4       	brne	.+54     	; 0xa64 <__stack+0x165>
     a2e:	8e 01       	movw	r16, r28
     a30:	0f 5f       	subi	r16, 0xFF	; 255
     a32:	1f 4f       	sbci	r17, 0xFF	; 255
     a34:	21 e0       	ldi	r18, 0x01	; 1
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	a7 01       	movw	r20, r14
     a3a:	b6 01       	movw	r22, r12
     a3c:	cf 01       	movw	r24, r30
     a3e:	0e 94 b5 01 	call	0x36a	; 0x36a <mjson_find_cb>
     a42:	ef ef       	ldi	r30, 0xFF	; 255
     a44:	ee 1a       	sub	r14, r30
     a46:	fe 0a       	sbc	r15, r30
     a48:	24 c0       	rjmp	.+72     	; 0xa92 <__stack+0x193>
     a4a:	47 01       	movw	r8, r14
     a4c:	0c c0       	rjmp	.+24     	; 0xa66 <__stack+0x167>
     a4e:	47 01       	movw	r8, r14
     a50:	54 2c       	mov	r5, r4
     a52:	09 c0       	rjmp	.+18     	; 0xa66 <__stack+0x167>
     a54:	54 2c       	mov	r5, r4
     a56:	07 c0       	rjmp	.+14     	; 0xa66 <__stack+0x167>
     a58:	47 01       	movw	r8, r14
     a5a:	54 2c       	mov	r5, r4
     a5c:	04 c0       	rjmp	.+8      	; 0xa66 <__stack+0x167>
     a5e:	47 01       	movw	r8, r14
     a60:	51 2c       	mov	r5, r1
     a62:	01 c0       	rjmp	.+2      	; 0xa66 <__stack+0x167>
     a64:	47 01       	movw	r8, r14
     a66:	94 01       	movw	r18, r8
     a68:	2e 19       	sub	r18, r14
     a6a:	3f 09       	sbc	r19, r15
     a6c:	2f 5f       	subi	r18, 0xFF	; 255
     a6e:	3f 4f       	sbci	r19, 0xFF	; 255
     a70:	8e 01       	movw	r16, r28
     a72:	0f 5f       	subi	r16, 0xFF	; 255
     a74:	1f 4f       	sbci	r17, 0xFF	; 255
     a76:	a7 01       	movw	r20, r14
     a78:	b6 01       	movw	r22, r12
     a7a:	cf 01       	movw	r24, r30
     a7c:	0e 94 b5 01 	call	0x36a	; 0x36a <mjson_find_cb>
     a80:	74 01       	movw	r14, r8
     a82:	ff ef       	ldi	r31, 0xFF	; 255
     a84:	ef 1a       	sub	r14, r31
     a86:	ff 0a       	sbc	r15, r31
     a88:	ea 14       	cp	r14, r10
     a8a:	fb 04       	cpc	r15, r11
     a8c:	0c f4       	brge	.+2      	; 0xa90 <__stack+0x191>
     a8e:	60 ce       	rjmp	.-832    	; 0x750 <mjson_find+0x90>
     a90:	08 c0       	rjmp	.+16     	; 0xaa2 <__stack+0x1a3>
     a92:	ff 20       	and	r15, r15
     a94:	24 f0       	brlt	.+8      	; 0xa9e <__stack+0x19f>
     a96:	8b 89       	ldd	r24, Y+19	; 0x13
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__stack+0x1a5>
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	03 c0       	rjmp	.+6      	; 0xaa4 <__stack+0x1a5>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	01 c0       	rjmp	.+2      	; 0xaa4 <__stack+0x1a5>
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	aa 96       	adiw	r28, 0x2a	; 42
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	f8 94       	cli
     aaa:	de bf       	out	0x3e, r29	; 62
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	cd bf       	out	0x3d, r28	; 61
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	ef 90       	pop	r14
     abc:	df 90       	pop	r13
     abe:	cf 90       	pop	r12
     ac0:	bf 90       	pop	r11
     ac2:	af 90       	pop	r10
     ac4:	9f 90       	pop	r9
     ac6:	8f 90       	pop	r8
     ac8:	7f 90       	pop	r7
     aca:	6f 90       	pop	r6
     acc:	5f 90       	pop	r5
     ace:	4f 90       	pop	r4
     ad0:	3f 90       	pop	r3
     ad2:	2f 90       	pop	r2
     ad4:	08 95       	ret

00000ad6 <mjson_find_string>:
     ad6:	8f 92       	push	r8
     ad8:	9f 92       	push	r9
     ada:	af 92       	push	r10
     adc:	bf 92       	push	r11
     ade:	cf 92       	push	r12
     ae0:	df 92       	push	r13
     ae2:	ef 92       	push	r14
     ae4:	ff 92       	push	r15
     ae6:	0f 93       	push	r16
     ae8:	1f 93       	push	r17
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	00 d0       	rcall	.+0      	; 0xaf0 <mjson_find_string+0x1a>
     af0:	00 d0       	rcall	.+0      	; 0xaf2 <mjson_find_string+0x1c>
     af2:	cd b7       	in	r28, 0x3d	; 61
     af4:	de b7       	in	r29, 0x3e	; 62
     af6:	69 01       	movw	r12, r18
     af8:	78 01       	movw	r14, r16
     afa:	8e 01       	movw	r16, r28
     afc:	0d 5f       	subi	r16, 0xFD	; 253
     afe:	1f 4f       	sbci	r17, 0xFF	; 255
     b00:	9e 01       	movw	r18, r28
     b02:	2f 5f       	subi	r18, 0xFF	; 255
     b04:	3f 4f       	sbci	r19, 0xFF	; 255
     b06:	0e 94 60 03 	call	0x6c0	; 0x6c0 <mjson_find>
     b0a:	8b 30       	cpi	r24, 0x0B	; 11
     b0c:	09 f0       	breq	.+2      	; 0xb10 <mjson_find_string+0x3a>
     b0e:	61 c0       	rjmp	.+194    	; 0xbd2 <mjson_find_string+0xfc>
     b10:	2b 81       	ldd	r18, Y+3	; 0x03
     b12:	3c 81       	ldd	r19, Y+4	; 0x04
     b14:	22 50       	subi	r18, 0x02	; 2
     b16:	31 09       	sbc	r19, r1
     b18:	69 81       	ldd	r22, Y+1	; 0x01
     b1a:	7a 81       	ldd	r23, Y+2	; 0x02
     b1c:	6f 5f       	subi	r22, 0xFF	; 255
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	12 16       	cp	r1, r18
     b22:	13 06       	cpc	r1, r19
     b24:	0c f0       	brlt	.+2      	; 0xb28 <mjson_find_string+0x52>
     b26:	49 c0       	rjmp	.+146    	; 0xbba <mjson_find_string+0xe4>
     b28:	1e 14       	cp	r1, r14
     b2a:	1f 04       	cpc	r1, r15
     b2c:	0c f0       	brlt	.+2      	; 0xb30 <mjson_find_string+0x5a>
     b2e:	5d c0       	rjmp	.+186    	; 0xbea <mjson_find_string+0x114>
     b30:	f6 01       	movw	r30, r12
     b32:	40 e0       	ldi	r20, 0x00	; 0
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0f 2e       	mov	r0, r31
     b3c:	f4 e2       	ldi	r31, 0x24	; 36
     b3e:	af 2e       	mov	r10, r31
     b40:	f1 e0       	ldi	r31, 0x01	; 1
     b42:	bf 2e       	mov	r11, r31
     b44:	f0 2d       	mov	r31, r0
     b46:	db 01       	movw	r26, r22
     b48:	a8 0f       	add	r26, r24
     b4a:	b9 1f       	adc	r27, r25
     b4c:	ac 91       	ld	r26, X
     b4e:	ac 35       	cpi	r26, 0x5C	; 92
     b50:	41 f5       	brne	.+80     	; 0xba2 <mjson_find_string+0xcc>
     b52:	8c 01       	movw	r16, r24
     b54:	0f 5f       	subi	r16, 0xFF	; 255
     b56:	1f 4f       	sbci	r17, 0xFF	; 255
     b58:	02 17       	cp	r16, r18
     b5a:	13 07       	cpc	r17, r19
     b5c:	14 f5       	brge	.+68     	; 0xba2 <mjson_find_string+0xcc>
     b5e:	db 01       	movw	r26, r22
     b60:	a8 0f       	add	r26, r24
     b62:	b9 1f       	adc	r27, r25
     b64:	11 96       	adiw	r26, 0x01	; 1
     b66:	8c 90       	ld	r8, X
     b68:	82 e6       	ldi	r24, 0x62	; 98
     b6a:	88 12       	cpse	r8, r24
     b6c:	0e c0       	rjmp	.+28     	; 0xb8a <mjson_find_string+0xb4>
     b6e:	03 c0       	rjmp	.+6      	; 0xb76 <mjson_find_string+0xa0>
     b70:	98 10       	cpse	r9, r8
     b72:	0d c0       	rjmp	.+26     	; 0xb8e <mjson_find_string+0xb8>
     b74:	01 c0       	rjmp	.+2      	; 0xb78 <mjson_find_string+0xa2>
     b76:	c5 01       	movw	r24, r10
     b78:	84 52       	subi	r24, 0x24	; 36
     b7a:	91 40       	sbci	r25, 0x01	; 1
     b7c:	dc 01       	movw	r26, r24
     b7e:	a5 5e       	subi	r26, 0xE5	; 229
     b80:	be 4f       	sbci	r27, 0xFE	; 254
     b82:	8c 91       	ld	r24, X
     b84:	81 11       	cpse	r24, r1
     b86:	0a c0       	rjmp	.+20     	; 0xb9c <mjson_find_string+0xc6>
     b88:	27 c0       	rjmp	.+78     	; 0xbd8 <mjson_find_string+0x102>
     b8a:	a5 e2       	ldi	r26, 0x25	; 37
     b8c:	b1 e0       	ldi	r27, 0x01	; 1
     b8e:	cd 01       	movw	r24, r26
     b90:	9d 90       	ld	r9, X+
     b92:	91 10       	cpse	r9, r1
     b94:	ed cf       	rjmp	.-38     	; 0xb70 <mjson_find_string+0x9a>
     b96:	8f ef       	ldi	r24, 0xFF	; 255
     b98:	9f ef       	ldi	r25, 0xFF	; 255
     b9a:	2e c0       	rjmp	.+92     	; 0xbf8 <mjson_find_string+0x122>
     b9c:	80 83       	st	Z, r24
     b9e:	c8 01       	movw	r24, r16
     ba0:	01 c0       	rjmp	.+2      	; 0xba4 <mjson_find_string+0xce>
     ba2:	a0 83       	st	Z, r26
     ba4:	01 96       	adiw	r24, 0x01	; 1
     ba6:	4f 5f       	subi	r20, 0xFF	; 255
     ba8:	5f 4f       	sbci	r21, 0xFF	; 255
     baa:	82 17       	cp	r24, r18
     bac:	93 07       	cpc	r25, r19
     bae:	04 f5       	brge	.+64     	; 0xbf0 <mjson_find_string+0x11a>
     bb0:	31 96       	adiw	r30, 0x01	; 1
     bb2:	e4 16       	cp	r14, r20
     bb4:	f5 06       	cpc	r15, r21
     bb6:	39 f6       	brne	.-114    	; 0xb46 <mjson_find_string+0x70>
     bb8:	18 c0       	rjmp	.+48     	; 0xbea <mjson_find_string+0x114>
     bba:	1e 14       	cp	r1, r14
     bbc:	1f 04       	cpc	r1, r15
     bbe:	7c f4       	brge	.+30     	; 0xbde <mjson_find_string+0x108>
     bc0:	40 e0       	ldi	r20, 0x00	; 0
     bc2:	50 e0       	ldi	r21, 0x00	; 0
     bc4:	f6 01       	movw	r30, r12
     bc6:	e4 0f       	add	r30, r20
     bc8:	f5 1f       	adc	r31, r21
     bca:	10 82       	st	Z, r1
     bcc:	84 2f       	mov	r24, r20
     bce:	95 2f       	mov	r25, r21
     bd0:	13 c0       	rjmp	.+38     	; 0xbf8 <mjson_find_string+0x122>
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	10 c0       	rjmp	.+32     	; 0xbf8 <mjson_find_string+0x122>
     bd8:	8f ef       	ldi	r24, 0xFF	; 255
     bda:	9f ef       	ldi	r25, 0xFF	; 255
     bdc:	0d c0       	rjmp	.+26     	; 0xbf8 <mjson_find_string+0x122>
     bde:	8f ef       	ldi	r24, 0xFF	; 255
     be0:	9f ef       	ldi	r25, 0xFF	; 255
     be2:	0a c0       	rjmp	.+20     	; 0xbf8 <mjson_find_string+0x122>
     be4:	8f ef       	ldi	r24, 0xFF	; 255
     be6:	9f ef       	ldi	r25, 0xFF	; 255
     be8:	07 c0       	rjmp	.+14     	; 0xbf8 <mjson_find_string+0x122>
     bea:	8f ef       	ldi	r24, 0xFF	; 255
     bec:	9f ef       	ldi	r25, 0xFF	; 255
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <mjson_find_string+0x122>
     bf0:	4e 15       	cp	r20, r14
     bf2:	5f 05       	cpc	r21, r15
     bf4:	3c f3       	brlt	.-50     	; 0xbc4 <mjson_find_string+0xee>
     bf6:	f6 cf       	rjmp	.-20     	; 0xbe4 <mjson_find_string+0x10e>
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
     bfc:	0f 90       	pop	r0
     bfe:	0f 90       	pop	r0
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	1f 91       	pop	r17
     c06:	0f 91       	pop	r16
     c08:	ff 90       	pop	r15
     c0a:	ef 90       	pop	r14
     c0c:	df 90       	pop	r13
     c0e:	cf 90       	pop	r12
     c10:	bf 90       	pop	r11
     c12:	af 90       	pop	r10
     c14:	9f 90       	pop	r9
     c16:	8f 90       	pop	r8
     c18:	08 95       	ret

00000c1a <mjson_print_buf>:

int mjson_print_buf(struct mjson_out *out, const char *buf, int len) {
  return out->print(out, buf, len);
     c1a:	dc 01       	movw	r26, r24
     c1c:	ed 91       	ld	r30, X+
     c1e:	fc 91       	ld	r31, X
     c20:	09 95       	icall
}
     c22:	08 95       	ret

00000c24 <mjson_print_int>:

int mjson_print_int(struct mjson_out *out, int value) {
     c24:	ef 92       	push	r14
     c26:	ff 92       	push	r15
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	cd b7       	in	r28, 0x3d	; 61
     c32:	de b7       	in	r29, 0x3e	; 62
     c34:	a8 97       	sbiw	r28, 0x28	; 40
     c36:	0f b6       	in	r0, 0x3f	; 63
     c38:	f8 94       	cli
     c3a:	de bf       	out	0x3e, r29	; 62
     c3c:	0f be       	out	0x3f, r0	; 63
     c3e:	cd bf       	out	0x3d, r28	; 61
     c40:	8c 01       	movw	r16, r24
  char buf[40];
  int len = snprintf(buf, sizeof(buf), "%d", value);
     c42:	7f 93       	push	r23
     c44:	6f 93       	push	r22
     c46:	8d e3       	ldi	r24, 0x3D	; 61
     c48:	91 e0       	ldi	r25, 0x01	; 1
     c4a:	9f 93       	push	r25
     c4c:	8f 93       	push	r24
     c4e:	1f 92       	push	r1
     c50:	88 e2       	ldi	r24, 0x28	; 40
     c52:	8f 93       	push	r24
     c54:	9e 01       	movw	r18, r28
     c56:	2f 5f       	subi	r18, 0xFF	; 255
     c58:	3f 4f       	sbci	r19, 0xFF	; 255
     c5a:	79 01       	movw	r14, r18
     c5c:	3f 93       	push	r19
     c5e:	2f 93       	push	r18
     c60:	0e 94 90 16 	call	0x2d20	; 0x2d20 <snprintf>
  return out->print(out, buf, len);
     c64:	d8 01       	movw	r26, r16
     c66:	ed 91       	ld	r30, X+
     c68:	fc 91       	ld	r31, X
     c6a:	ac 01       	movw	r20, r24
     c6c:	b7 01       	movw	r22, r14
     c6e:	c8 01       	movw	r24, r16
     c70:	09 95       	icall
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	f8 94       	cli
     c76:	de bf       	out	0x3e, r29	; 62
     c78:	0f be       	out	0x3f, r0	; 63
     c7a:	cd bf       	out	0x3d, r28	; 61
}
     c7c:	a8 96       	adiw	r28, 0x28	; 40
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	f8 94       	cli
     c82:	de bf       	out	0x3e, r29	; 62
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	cd bf       	out	0x3d, r28	; 61
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	1f 91       	pop	r17
     c8e:	0f 91       	pop	r16
     c90:	ff 90       	pop	r15
     c92:	ef 90       	pop	r14
     c94:	08 95       	ret

00000c96 <mjson_print_dbl>:

int mjson_print_dbl(struct mjson_out *out, double d) {
     c96:	ef 92       	push	r14
     c98:	ff 92       	push	r15
     c9a:	0f 93       	push	r16
     c9c:	1f 93       	push	r17
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	a8 97       	sbiw	r28, 0x28	; 40
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	8c 01       	movw	r16, r24
  char buf[40];
  int n = snprintf(buf, sizeof(buf), "%g", d);
     cb4:	7f 93       	push	r23
     cb6:	6f 93       	push	r22
     cb8:	5f 93       	push	r21
     cba:	4f 93       	push	r20
     cbc:	80 e4       	ldi	r24, 0x40	; 64
     cbe:	91 e0       	ldi	r25, 0x01	; 1
     cc0:	9f 93       	push	r25
     cc2:	8f 93       	push	r24
     cc4:	1f 92       	push	r1
     cc6:	88 e2       	ldi	r24, 0x28	; 40
     cc8:	8f 93       	push	r24
     cca:	9e 01       	movw	r18, r28
     ccc:	2f 5f       	subi	r18, 0xFF	; 255
     cce:	3f 4f       	sbci	r19, 0xFF	; 255
     cd0:	79 01       	movw	r14, r18
     cd2:	3f 93       	push	r19
     cd4:	2f 93       	push	r18
     cd6:	0e 94 90 16 	call	0x2d20	; 0x2d20 <snprintf>
  return out->print(out, buf, n);
     cda:	d8 01       	movw	r26, r16
     cdc:	ed 91       	ld	r30, X+
     cde:	fc 91       	ld	r31, X
     ce0:	ac 01       	movw	r20, r24
     ce2:	b7 01       	movw	r22, r14
     ce4:	c8 01       	movw	r24, r16
     ce6:	09 95       	icall
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	de bf       	out	0x3e, r29	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	cd bf       	out	0x3d, r28	; 61
}
     cf2:	a8 96       	adiw	r28, 0x28	; 40
     cf4:	0f b6       	in	r0, 0x3f	; 63
     cf6:	f8 94       	cli
     cf8:	de bf       	out	0x3e, r29	; 62
     cfa:	0f be       	out	0x3f, r0	; 63
     cfc:	cd bf       	out	0x3d, r28	; 61
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	1f 91       	pop	r17
     d04:	0f 91       	pop	r16
     d06:	ff 90       	pop	r15
     d08:	ef 90       	pop	r14
     d0a:	08 95       	ret

00000d0c <mjson_print_str>:

int mjson_print_str(struct mjson_out *out, const char *s, int len) {
     d0c:	8f 92       	push	r8
     d0e:	9f 92       	push	r9
     d10:	af 92       	push	r10
     d12:	bf 92       	push	r11
     d14:	cf 92       	push	r12
     d16:	df 92       	push	r13
     d18:	ef 92       	push	r14
     d1a:	ff 92       	push	r15
     d1c:	0f 93       	push	r16
     d1e:	1f 93       	push	r17
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	1f 92       	push	r1
     d26:	cd b7       	in	r28, 0x3d	; 61
     d28:	de b7       	in	r29, 0x3e	; 62
     d2a:	7c 01       	movw	r14, r24
     d2c:	4b 01       	movw	r8, r22
     d2e:	5a 01       	movw	r10, r20
  int n = out->print(out, "\"", 1);
     d30:	dc 01       	movw	r26, r24
     d32:	ed 91       	ld	r30, X+
     d34:	fc 91       	ld	r31, X
     d36:	41 e0       	ldi	r20, 0x01	; 1
     d38:	50 e0       	ldi	r21, 0x00	; 0
     d3a:	63 e4       	ldi	r22, 0x43	; 67
     d3c:	71 e0       	ldi	r23, 0x01	; 1
     d3e:	09 95       	icall
     d40:	6c 01       	movw	r12, r24
  for (int i = 0; i < len; i++) {
     d42:	1a 14       	cp	r1, r10
     d44:	1b 04       	cpc	r1, r11
     d46:	0c f0       	brlt	.+2      	; 0xd4a <mjson_print_str+0x3e>
     d48:	4b c0       	rjmp	.+150    	; 0xde0 <mjson_print_str+0xd4>
     d4a:	84 01       	movw	r16, r8
     d4c:	a8 0c       	add	r10, r8
     d4e:	b9 1c       	adc	r11, r9
#endif

static int mjson_esc(int c, int esc) {
  const char *p, *esc1 = "\b\f\n\r\t\\\"/", *esc2 = "bfnrt\\\"/";
  for (p = esc ? esc1 : esc2; *p != '\0'; p++) {
    if (*p == c) return esc ? esc2[p - esc1] : esc1[p - esc2];
     d50:	0f 2e       	mov	r0, r31
     d52:	fb e1       	ldi	r31, 0x1B	; 27
     d54:	8f 2e       	mov	r8, r31
     d56:	f1 e0       	ldi	r31, 0x01	; 1
     d58:	9f 2e       	mov	r9, r31
     d5a:	f0 2d       	mov	r31, r0
}

int mjson_print_str(struct mjson_out *out, const char *s, int len) {
  int n = out->print(out, "\"", 1);
  for (int i = 0; i < len; i++) {
    char c = mjson_esc(s[i], 1);
     d5c:	60 2f       	mov	r22, r16
     d5e:	71 2f       	mov	r23, r17
     d60:	f8 01       	movw	r30, r16
     d62:	91 91       	ld	r25, Z+
     d64:	8f 01       	movw	r16, r30
#endif

static int mjson_esc(int c, int esc) {
  const char *p, *esc1 = "\b\f\n\r\t\\\"/", *esc2 = "bfnrt\\\"/";
  for (p = esc ? esc1 : esc2; *p != '\0'; p++) {
    if (*p == c) return esc ? esc2[p - esc1] : esc1[p - esc2];
     d66:	98 30       	cpi	r25, 0x08	; 8
     d68:	79 f4       	brne	.+30     	; 0xd88 <mjson_print_str+0x7c>
     d6a:	03 c0       	rjmp	.+6      	; 0xd72 <mjson_print_str+0x66>
     d6c:	98 13       	cpse	r25, r24
     d6e:	0e c0       	rjmp	.+28     	; 0xd8c <mjson_print_str+0x80>
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <mjson_print_str+0x68>
     d72:	94 01       	movw	r18, r8
     d74:	2b 51       	subi	r18, 0x1B	; 27
     d76:	31 40       	sbci	r19, 0x01	; 1
     d78:	f9 01       	movw	r30, r18
     d7a:	ec 5d       	subi	r30, 0xDC	; 220
     d7c:	fe 4f       	sbci	r31, 0xFE	; 254
     d7e:	80 81       	ld	r24, Z
}

int mjson_print_str(struct mjson_out *out, const char *s, int len) {
  int n = out->print(out, "\"", 1);
  for (int i = 0; i < len; i++) {
    char c = mjson_esc(s[i], 1);
     d80:	89 83       	std	Y+1, r24	; 0x01
    if (c) {
     d82:	81 11       	cpse	r24, r1
     d84:	08 c0       	rjmp	.+16     	; 0xd96 <mjson_print_str+0x8a>
     d86:	1f c0       	rjmp	.+62     	; 0xdc6 <mjson_print_str+0xba>
     d88:	ec e1       	ldi	r30, 0x1C	; 28
     d8a:	f1 e0       	ldi	r31, 0x01	; 1
#define MJSON_MAX_DEPTH 20
#endif

static int mjson_esc(int c, int esc) {
  const char *p, *esc1 = "\b\f\n\r\t\\\"/", *esc2 = "bfnrt\\\"/";
  for (p = esc ? esc1 : esc2; *p != '\0'; p++) {
     d8c:	9f 01       	movw	r18, r30
     d8e:	81 91       	ld	r24, Z+
     d90:	81 11       	cpse	r24, r1
     d92:	ec cf       	rjmp	.-40     	; 0xd6c <mjson_print_str+0x60>
     d94:	31 c0       	rjmp	.+98     	; 0xdf8 <mjson_print_str+0xec>
int mjson_print_str(struct mjson_out *out, const char *s, int len) {
  int n = out->print(out, "\"", 1);
  for (int i = 0; i < len; i++) {
    char c = mjson_esc(s[i], 1);
    if (c) {
      n += out->print(out, "\\", 1);
     d96:	d7 01       	movw	r26, r14
     d98:	ed 91       	ld	r30, X+
     d9a:	fc 91       	ld	r31, X
     d9c:	41 e0       	ldi	r20, 0x01	; 1
     d9e:	50 e0       	ldi	r21, 0x00	; 0
     da0:	65 e4       	ldi	r22, 0x45	; 69
     da2:	71 e0       	ldi	r23, 0x01	; 1
     da4:	c7 01       	movw	r24, r14
     da6:	09 95       	icall
     da8:	c8 0e       	add	r12, r24
     daa:	d9 1e       	adc	r13, r25
      n += out->print(out, &c, 1);
     dac:	d7 01       	movw	r26, r14
     dae:	ed 91       	ld	r30, X+
     db0:	fc 91       	ld	r31, X
     db2:	41 e0       	ldi	r20, 0x01	; 1
     db4:	50 e0       	ldi	r21, 0x00	; 0
     db6:	be 01       	movw	r22, r28
     db8:	6f 5f       	subi	r22, 0xFF	; 255
     dba:	7f 4f       	sbci	r23, 0xFF	; 255
     dbc:	c7 01       	movw	r24, r14
     dbe:	09 95       	icall
     dc0:	c8 0e       	add	r12, r24
     dc2:	d9 1e       	adc	r13, r25
     dc4:	09 c0       	rjmp	.+18     	; 0xdd8 <mjson_print_str+0xcc>
    } else {
      n += out->print(out, &s[i], 1);
     dc6:	d7 01       	movw	r26, r14
     dc8:	ed 91       	ld	r30, X+
     dca:	fc 91       	ld	r31, X
     dcc:	41 e0       	ldi	r20, 0x01	; 1
     dce:	50 e0       	ldi	r21, 0x00	; 0
     dd0:	c7 01       	movw	r24, r14
     dd2:	09 95       	icall
     dd4:	c8 0e       	add	r12, r24
     dd6:	d9 1e       	adc	r13, r25
  return out->print(out, buf, n);
}

int mjson_print_str(struct mjson_out *out, const char *s, int len) {
  int n = out->print(out, "\"", 1);
  for (int i = 0; i < len; i++) {
     dd8:	0a 15       	cp	r16, r10
     dda:	1b 05       	cpc	r17, r11
     ddc:	09 f0       	breq	.+2      	; 0xde0 <mjson_print_str+0xd4>
     dde:	be cf       	rjmp	.-132    	; 0xd5c <mjson_print_str+0x50>
      n += out->print(out, &c, 1);
    } else {
      n += out->print(out, &s[i], 1);
    }
  }
  return n + out->print(out, "\"", 1);
     de0:	d7 01       	movw	r26, r14
     de2:	ed 91       	ld	r30, X+
     de4:	fc 91       	ld	r31, X
     de6:	41 e0       	ldi	r20, 0x01	; 1
     de8:	50 e0       	ldi	r21, 0x00	; 0
     dea:	63 e4       	ldi	r22, 0x43	; 67
     dec:	71 e0       	ldi	r23, 0x01	; 1
     dee:	c7 01       	movw	r24, r14
     df0:	09 95       	icall
     df2:	8c 0d       	add	r24, r12
     df4:	9d 1d       	adc	r25, r13
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <mjson_print_str+0xf0>
}

int mjson_print_str(struct mjson_out *out, const char *s, int len) {
  int n = out->print(out, "\"", 1);
  for (int i = 0; i < len; i++) {
    char c = mjson_esc(s[i], 1);
     df8:	19 82       	std	Y+1, r1	; 0x01
     dfa:	e5 cf       	rjmp	.-54     	; 0xdc6 <mjson_print_str+0xba>
    } else {
      n += out->print(out, &s[i], 1);
    }
  }
  return n + out->print(out, "\"", 1);
}
     dfc:	0f 90       	pop	r0
     dfe:	df 91       	pop	r29
     e00:	cf 91       	pop	r28
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	ff 90       	pop	r15
     e08:	ef 90       	pop	r14
     e0a:	df 90       	pop	r13
     e0c:	cf 90       	pop	r12
     e0e:	bf 90       	pop	r11
     e10:	af 90       	pop	r10
     e12:	9f 90       	pop	r9
     e14:	8f 90       	pop	r8
     e16:	08 95       	ret

00000e18 <mjson_print_b64>:

int mjson_print_b64(struct mjson_out *out, const unsigned char *s, int n) {
     e18:	2f 92       	push	r2
     e1a:	3f 92       	push	r3
     e1c:	4f 92       	push	r4
     e1e:	5f 92       	push	r5
     e20:	6f 92       	push	r6
     e22:	7f 92       	push	r7
     e24:	8f 92       	push	r8
     e26:	9f 92       	push	r9
     e28:	af 92       	push	r10
     e2a:	bf 92       	push	r11
     e2c:	cf 92       	push	r12
     e2e:	df 92       	push	r13
     e30:	ef 92       	push	r14
     e32:	ff 92       	push	r15
     e34:	0f 93       	push	r16
     e36:	1f 93       	push	r17
     e38:	cf 93       	push	r28
     e3a:	df 93       	push	r29
     e3c:	00 d0       	rcall	.+0      	; 0xe3e <mjson_print_b64+0x26>
     e3e:	00 d0       	rcall	.+0      	; 0xe40 <mjson_print_b64+0x28>
     e40:	00 d0       	rcall	.+0      	; 0xe42 <mjson_print_b64+0x2a>
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
     e46:	3c 01       	movw	r6, r24
     e48:	06 2f       	mov	r16, r22
     e4a:	17 2f       	mov	r17, r23
     e4c:	6a 01       	movw	r12, r20
  const char *t =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  int len = out->print(out, "\"", 1);
     e4e:	dc 01       	movw	r26, r24
     e50:	ed 91       	ld	r30, X+
     e52:	fc 91       	ld	r31, X
     e54:	41 e0       	ldi	r20, 0x01	; 1
     e56:	50 e0       	ldi	r21, 0x00	; 0
     e58:	63 e4       	ldi	r22, 0x43	; 67
     e5a:	71 e0       	ldi	r23, 0x01	; 1
     e5c:	09 95       	icall
     e5e:	4c 01       	movw	r8, r24
  for (int i = 0; i < n; i += 3) {
     e60:	1c 14       	cp	r1, r12
     e62:	1d 04       	cpc	r1, r13
     e64:	0c f0       	brlt	.+2      	; 0xe68 <mjson_print_b64+0x50>
     e66:	86 c0       	rjmp	.+268    	; 0xf74 <mjson_print_b64+0x15c>
     e68:	e0 2e       	mov	r14, r16
     e6a:	f1 2e       	mov	r15, r17
     e6c:	68 94       	set
     e6e:	aa 24       	eor	r10, r10
     e70:	a1 f8       	bld	r10, 1
     e72:	b1 2c       	mov	r11, r1
     e74:	01 e0       	ldi	r16, 0x01	; 1
     e76:	10 e0       	ldi	r17, 0x00	; 0
    int a = s[i], b = i + 1 < n ? s[i + 1] : 0, c = i + 2 < n ? s[i + 2] : 0;
     e78:	21 2c       	mov	r2, r1
    char buf[4] = {t[a >> 2], t[(a & 3) << 4 | (b >> 4)], '=', '='};
     e7a:	0f 2e       	mov	r0, r31
     e7c:	fd e3       	ldi	r31, 0x3D	; 61
     e7e:	3f 2e       	mov	r3, r31
     e80:	f0 2d       	mov	r31, r0
     e82:	01 c0       	rjmp	.+2      	; 0xe86 <mjson_print_b64+0x6e>
     e84:	8c 01       	movw	r16, r24
     e86:	97 01       	movw	r18, r14
int mjson_print_b64(struct mjson_out *out, const unsigned char *s, int n) {
  const char *t =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  int len = out->print(out, "\"", 1);
  for (int i = 0; i < n; i += 3) {
    int a = s[i], b = i + 1 < n ? s[i + 1] : 0, c = i + 2 < n ? s[i + 2] : 0;
     e88:	f7 01       	movw	r30, r14
     e8a:	40 81       	ld	r20, Z
     e8c:	a4 2f       	mov	r26, r20
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	1e 83       	std	Y+6, r17	; 0x06
     e92:	0d 83       	std	Y+5, r16	; 0x05
     e94:	0c 15       	cp	r16, r12
     e96:	1d 05       	cpc	r17, r13
     e98:	1c f4       	brge	.+6      	; 0xea0 <mjson_print_b64+0x88>
     e9a:	81 81       	ldd	r24, Z+1	; 0x01
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <mjson_print_b64+0x8c>
     ea0:	82 2d       	mov	r24, r2
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	25 01       	movw	r4, r10
     ea6:	ac 14       	cp	r10, r12
     ea8:	bd 04       	cpc	r11, r13
     eaa:	24 f4       	brge	.+8      	; 0xeb4 <mjson_print_b64+0x9c>
     eac:	f9 01       	movw	r30, r18
     eae:	22 81       	ldd	r18, Z+2	; 0x02
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <mjson_print_b64+0xa0>
     eb4:	22 2d       	mov	r18, r2
     eb6:	30 e0       	ldi	r19, 0x00	; 0
    char buf[4] = {t[a >> 2], t[(a & 3) << 4 | (b >> 4)], '=', '='};
     eb8:	b5 95       	asr	r27
     eba:	a7 95       	ror	r26
     ebc:	b5 95       	asr	r27
     ebe:	a7 95       	ror	r26
     ec0:	a9 5b       	subi	r26, 0xB9	; 185
     ec2:	be 4f       	sbci	r27, 0xFE	; 254
     ec4:	5c 91       	ld	r21, X
     ec6:	59 83       	std	Y+1, r21	; 0x01
     ec8:	43 70       	andi	r20, 0x03	; 3
     eca:	f0 e1       	ldi	r31, 0x10	; 16
     ecc:	4f 9f       	mul	r20, r31
     ece:	a0 01       	movw	r20, r0
     ed0:	11 24       	eor	r1, r1
     ed2:	bc 01       	movw	r22, r24
     ed4:	75 95       	asr	r23
     ed6:	67 95       	ror	r22
     ed8:	75 95       	asr	r23
     eda:	67 95       	ror	r22
     edc:	75 95       	asr	r23
     ede:	67 95       	ror	r22
     ee0:	75 95       	asr	r23
     ee2:	67 95       	ror	r22
     ee4:	46 2b       	or	r20, r22
     ee6:	57 2b       	or	r21, r23
     ee8:	da 01       	movw	r26, r20
     eea:	a9 5b       	subi	r26, 0xB9	; 185
     eec:	be 4f       	sbci	r27, 0xFE	; 254
     eee:	4c 91       	ld	r20, X
     ef0:	4a 83       	std	Y+2, r20	; 0x02
     ef2:	3b 82       	std	Y+3, r3	; 0x03
     ef4:	3c 82       	std	Y+4, r3	; 0x04
    if (i + 1 < n) buf[2] = t[(b & 15) << 2 | (c >> 6)];
     ef6:	4d 81       	ldd	r20, Y+5	; 0x05
     ef8:	5e 81       	ldd	r21, Y+6	; 0x06
     efa:	4c 15       	cp	r20, r12
     efc:	5d 05       	cpc	r21, r13
     efe:	b4 f4       	brge	.+44     	; 0xf2c <mjson_print_b64+0x114>
     f00:	8f 70       	andi	r24, 0x0F	; 15
     f02:	99 27       	eor	r25, r25
     f04:	88 0f       	add	r24, r24
     f06:	99 1f       	adc	r25, r25
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	f9 01       	movw	r30, r18
     f0e:	0e 2e       	mov	r0, r30
     f10:	ef 2f       	mov	r30, r31
     f12:	00 0c       	add	r0, r0
     f14:	ee 1f       	adc	r30, r30
     f16:	ff 0b       	sbc	r31, r31
     f18:	00 0c       	add	r0, r0
     f1a:	ee 1f       	adc	r30, r30
     f1c:	ff 1f       	adc	r31, r31
     f1e:	8e 2b       	or	r24, r30
     f20:	9f 2b       	or	r25, r31
     f22:	fc 01       	movw	r30, r24
     f24:	e9 5b       	subi	r30, 0xB9	; 185
     f26:	fe 4f       	sbci	r31, 0xFE	; 254
     f28:	80 81       	ld	r24, Z
     f2a:	8b 83       	std	Y+3, r24	; 0x03
    if (i + 2 < n) buf[3] = t[c & 63];
     f2c:	4c 14       	cp	r4, r12
     f2e:	5d 04       	cpc	r5, r13
     f30:	3c f4       	brge	.+14     	; 0xf40 <mjson_print_b64+0x128>
     f32:	2f 73       	andi	r18, 0x3F	; 63
     f34:	33 27       	eor	r19, r19
     f36:	f9 01       	movw	r30, r18
     f38:	e9 5b       	subi	r30, 0xB9	; 185
     f3a:	fe 4f       	sbci	r31, 0xFE	; 254
     f3c:	80 81       	ld	r24, Z
     f3e:	8c 83       	std	Y+4, r24	; 0x04
    len += out->print(out, buf, sizeof(buf));
     f40:	d3 01       	movw	r26, r6
     f42:	ed 91       	ld	r30, X+
     f44:	fc 91       	ld	r31, X
     f46:	44 e0       	ldi	r20, 0x04	; 4
     f48:	50 e0       	ldi	r21, 0x00	; 0
     f4a:	be 01       	movw	r22, r28
     f4c:	6f 5f       	subi	r22, 0xFF	; 255
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	c3 01       	movw	r24, r6
     f52:	09 95       	icall
     f54:	88 0e       	add	r8, r24
     f56:	99 1e       	adc	r9, r25
     f58:	b3 e0       	ldi	r27, 0x03	; 3
     f5a:	eb 0e       	add	r14, r27
     f5c:	f1 1c       	adc	r15, r1
     f5e:	c8 01       	movw	r24, r16
     f60:	03 96       	adiw	r24, 0x03	; 3
     f62:	e3 e0       	ldi	r30, 0x03	; 3
     f64:	ae 0e       	add	r10, r30
     f66:	b1 1c       	adc	r11, r1

int mjson_print_b64(struct mjson_out *out, const unsigned char *s, int n) {
  const char *t =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  int len = out->print(out, "\"", 1);
  for (int i = 0; i < n; i += 3) {
     f68:	0e 5f       	subi	r16, 0xFE	; 254
     f6a:	1f 4f       	sbci	r17, 0xFF	; 255
     f6c:	0c 15       	cp	r16, r12
     f6e:	1d 05       	cpc	r17, r13
     f70:	0c f4       	brge	.+2      	; 0xf74 <mjson_print_b64+0x15c>
     f72:	88 cf       	rjmp	.-240    	; 0xe84 <mjson_print_b64+0x6c>
    char buf[4] = {t[a >> 2], t[(a & 3) << 4 | (b >> 4)], '=', '='};
    if (i + 1 < n) buf[2] = t[(b & 15) << 2 | (c >> 6)];
    if (i + 2 < n) buf[3] = t[c & 63];
    len += out->print(out, buf, sizeof(buf));
  }
  return len + out->print(out, "\"", 1);
     f74:	d3 01       	movw	r26, r6
     f76:	ed 91       	ld	r30, X+
     f78:	fc 91       	ld	r31, X
     f7a:	41 e0       	ldi	r20, 0x01	; 1
     f7c:	50 e0       	ldi	r21, 0x00	; 0
     f7e:	63 e4       	ldi	r22, 0x43	; 67
     f80:	71 e0       	ldi	r23, 0x01	; 1
     f82:	c3 01       	movw	r24, r6
     f84:	09 95       	icall
}
     f86:	88 0d       	add	r24, r8
     f88:	99 1d       	adc	r25, r9
     f8a:	26 96       	adiw	r28, 0x06	; 6
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	f8 94       	cli
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	0f be       	out	0x3f, r0	; 63
     f94:	cd bf       	out	0x3d, r28	; 61
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	1f 91       	pop	r17
     f9c:	0f 91       	pop	r16
     f9e:	ff 90       	pop	r15
     fa0:	ef 90       	pop	r14
     fa2:	df 90       	pop	r13
     fa4:	cf 90       	pop	r12
     fa6:	bf 90       	pop	r11
     fa8:	af 90       	pop	r10
     faa:	9f 90       	pop	r9
     fac:	8f 90       	pop	r8
     fae:	7f 90       	pop	r7
     fb0:	6f 90       	pop	r6
     fb2:	5f 90       	pop	r5
     fb4:	4f 90       	pop	r4
     fb6:	3f 90       	pop	r3
     fb8:	2f 90       	pop	r2
     fba:	08 95       	ret

00000fbc <mjson_vprintf>:

typedef int (*mjson_printf_fn_t)(struct mjson_out *, va_list *);

int mjson_vprintf(struct mjson_out *out, const char *fmt, va_list ap) {
     fbc:	3f 92       	push	r3
     fbe:	4f 92       	push	r4
     fc0:	5f 92       	push	r5
     fc2:	6f 92       	push	r6
     fc4:	7f 92       	push	r7
     fc6:	8f 92       	push	r8
     fc8:	9f 92       	push	r9
     fca:	af 92       	push	r10
     fcc:	bf 92       	push	r11
     fce:	cf 92       	push	r12
     fd0:	df 92       	push	r13
     fd2:	ef 92       	push	r14
     fd4:	ff 92       	push	r15
     fd6:	0f 93       	push	r16
     fd8:	1f 93       	push	r17
     fda:	cf 93       	push	r28
     fdc:	df 93       	push	r29
     fde:	00 d0       	rcall	.+0      	; 0xfe0 <mjson_vprintf+0x24>
     fe0:	cd b7       	in	r28, 0x3d	; 61
     fe2:	de b7       	in	r29, 0x3e	; 62
     fe4:	3c 01       	movw	r6, r24
     fe6:	5b 01       	movw	r10, r22
     fe8:	4a 01       	movw	r8, r20
  int n = 0;
  for (int i = 0; fmt[i] != '\0'; i++) {
     fea:	db 01       	movw	r26, r22
     fec:	8c 91       	ld	r24, X
     fee:	88 23       	and	r24, r24
     ff0:	09 f4       	brne	.+2      	; 0xff4 <mjson_vprintf+0x38>
     ff2:	fd c0       	rjmp	.+506    	; 0x11ee <mjson_vprintf+0x232>
     ff4:	e1 2c       	mov	r14, r1
     ff6:	f1 2c       	mov	r15, r1
     ff8:	00 e0       	ldi	r16, 0x00	; 0
     ffa:	10 e0       	ldi	r17, 0x00	; 0
     ffc:	c1 2c       	mov	r12, r1
     ffe:	d1 2c       	mov	r13, r1
        i += 2;
      } else if (fmt[i + 1] == 'd') {
        int val = va_arg(ap, int);
        n += mjson_print_int(out, val);
      } else if (fmt[i + 1] == 'B') {
        const char *s = va_arg(ap, int) ? "true" : "false";
    1000:	0f 2e       	mov	r0, r31
    1002:	fd e2       	ldi	r31, 0x2D	; 45
    1004:	4f 2e       	mov	r4, r31
    1006:	f1 e0       	ldi	r31, 0x01	; 1
    1008:	5f 2e       	mov	r5, r31
    100a:	f0 2d       	mov	r31, r0
typedef int (*mjson_printf_fn_t)(struct mjson_out *, va_list *);

int mjson_vprintf(struct mjson_out *out, const char *fmt, va_list ap) {
  int n = 0;
  for (int i = 0; fmt[i] != '\0'; i++) {
    if (fmt[i] == '%') {
    100c:	85 32       	cpi	r24, 0x25	; 37
    100e:	09 f0       	breq	.+2      	; 0x1012 <mjson_vprintf+0x56>
    1010:	dc c0       	rjmp	.+440    	; 0x11ca <mjson_vprintf+0x20e>
      if (fmt[i + 1] == 'Q') {
    1012:	bf ef       	ldi	r27, 0xFF	; 255
    1014:	eb 1a       	sub	r14, r27
    1016:	fb 0a       	sbc	r15, r27
    1018:	ea 0c       	add	r14, r10
    101a:	fb 1c       	adc	r15, r11
    101c:	f7 01       	movw	r30, r14
    101e:	30 80       	ld	r3, Z
    1020:	f1 e5       	ldi	r31, 0x51	; 81
    1022:	3f 12       	cpse	r3, r31
    1024:	16 c0       	rjmp	.+44     	; 0x1052 <mjson_vprintf+0x96>
        char *buf = va_arg(ap, char *);
    1026:	74 01       	movw	r14, r8
    1028:	82 e0       	ldi	r24, 0x02	; 2
    102a:	e8 0e       	add	r14, r24
    102c:	f1 1c       	adc	r15, r1
    102e:	d4 01       	movw	r26, r8
    1030:	6d 91       	ld	r22, X+
    1032:	7c 91       	ld	r23, X
        n += mjson_print_str(out, buf, strlen(buf));
    1034:	fb 01       	movw	r30, r22
    1036:	01 90       	ld	r0, Z+
    1038:	00 20       	and	r0, r0
    103a:	e9 f7       	brne	.-6      	; 0x1036 <mjson_vprintf+0x7a>
    103c:	31 97       	sbiw	r30, 0x01	; 1
    103e:	af 01       	movw	r20, r30
    1040:	46 1b       	sub	r20, r22
    1042:	57 0b       	sbc	r21, r23
    1044:	c3 01       	movw	r24, r6
    1046:	0e 94 86 06 	call	0xd0c	; 0xd0c <mjson_print_str>
    104a:	c8 0e       	add	r12, r24
    104c:	d9 1e       	adc	r13, r25
int mjson_vprintf(struct mjson_out *out, const char *fmt, va_list ap) {
  int n = 0;
  for (int i = 0; fmt[i] != '\0'; i++) {
    if (fmt[i] == '%') {
      if (fmt[i + 1] == 'Q') {
        char *buf = va_arg(ap, char *);
    104e:	47 01       	movw	r8, r14
    1050:	b9 c0       	rjmp	.+370    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_str(out, buf, strlen(buf));
      } else if (memcmp(&fmt[i + 1], ".*Q", 3) == 0) {
    1052:	43 e0       	ldi	r20, 0x03	; 3
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	68 e8       	ldi	r22, 0x88	; 136
    1058:	71 e0       	ldi	r23, 0x01	; 1
    105a:	c7 01       	movw	r24, r14
    105c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
    1060:	89 2b       	or	r24, r25
    1062:	91 f4       	brne	.+36     	; 0x1088 <mjson_vprintf+0xcc>
        int len = va_arg(ap, int);
        char *buf = va_arg(ap, char *);
    1064:	74 01       	movw	r14, r8
    1066:	b4 e0       	ldi	r27, 0x04	; 4
    1068:	eb 0e       	add	r14, r27
    106a:	f1 1c       	adc	r15, r1
        n += mjson_print_str(out, buf, len);
    106c:	f4 01       	movw	r30, r8
    106e:	40 81       	ld	r20, Z
    1070:	51 81       	ldd	r21, Z+1	; 0x01
    1072:	62 81       	ldd	r22, Z+2	; 0x02
    1074:	73 81       	ldd	r23, Z+3	; 0x03
    1076:	c3 01       	movw	r24, r6
    1078:	0e 94 86 06 	call	0xd0c	; 0xd0c <mjson_print_str>
    107c:	c8 0e       	add	r12, r24
    107e:	d9 1e       	adc	r13, r25
        i += 2;
    1080:	0e 5f       	subi	r16, 0xFE	; 254
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
      if (fmt[i + 1] == 'Q') {
        char *buf = va_arg(ap, char *);
        n += mjson_print_str(out, buf, strlen(buf));
      } else if (memcmp(&fmt[i + 1], ".*Q", 3) == 0) {
        int len = va_arg(ap, int);
        char *buf = va_arg(ap, char *);
    1084:	47 01       	movw	r8, r14
    1086:	9e c0       	rjmp	.+316    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_str(out, buf, len);
        i += 2;
      } else if (fmt[i + 1] == 'd') {
    1088:	f4 e6       	ldi	r31, 0x64	; 100
    108a:	3f 12       	cpse	r3, r31
    108c:	0e c0       	rjmp	.+28     	; 0x10aa <mjson_vprintf+0xee>
        int val = va_arg(ap, int);
    108e:	74 01       	movw	r14, r8
    1090:	82 e0       	ldi	r24, 0x02	; 2
    1092:	e8 0e       	add	r14, r24
    1094:	f1 1c       	adc	r15, r1
        n += mjson_print_int(out, val);
    1096:	d4 01       	movw	r26, r8
    1098:	6d 91       	ld	r22, X+
    109a:	7c 91       	ld	r23, X
    109c:	c3 01       	movw	r24, r6
    109e:	0e 94 12 06 	call	0xc24	; 0xc24 <mjson_print_int>
    10a2:	c8 0e       	add	r12, r24
    10a4:	d9 1e       	adc	r13, r25
        int len = va_arg(ap, int);
        char *buf = va_arg(ap, char *);
        n += mjson_print_str(out, buf, len);
        i += 2;
      } else if (fmt[i + 1] == 'd') {
        int val = va_arg(ap, int);
    10a6:	47 01       	movw	r8, r14
    10a8:	8d c0       	rjmp	.+282    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_int(out, val);
      } else if (fmt[i + 1] == 'B') {
    10aa:	b2 e4       	ldi	r27, 0x42	; 66
    10ac:	3b 12       	cpse	r3, r27
    10ae:	1c c0       	rjmp	.+56     	; 0x10e8 <mjson_vprintf+0x12c>
        const char *s = va_arg(ap, int) ? "true" : "false";
    10b0:	74 01       	movw	r14, r8
    10b2:	e2 e0       	ldi	r30, 0x02	; 2
    10b4:	ee 0e       	add	r14, r30
    10b6:	f1 1c       	adc	r15, r1
    10b8:	d4 01       	movw	r26, r8
    10ba:	8d 91       	ld	r24, X+
    10bc:	9c 91       	ld	r25, X
    10be:	89 2b       	or	r24, r25
    10c0:	19 f4       	brne	.+6      	; 0x10c8 <mjson_vprintf+0x10c>
    10c2:	67 e3       	ldi	r22, 0x37	; 55
    10c4:	71 e0       	ldi	r23, 0x01	; 1
    10c6:	01 c0       	rjmp	.+2      	; 0x10ca <mjson_vprintf+0x10e>
    10c8:	b2 01       	movw	r22, r4
        n += mjson_print_buf(out, s, strlen(s));
    10ca:	fb 01       	movw	r30, r22
    10cc:	01 90       	ld	r0, Z+
    10ce:	00 20       	and	r0, r0
    10d0:	e9 f7       	brne	.-6      	; 0x10cc <mjson_vprintf+0x110>
    10d2:	31 97       	sbiw	r30, 0x01	; 1
    10d4:	af 01       	movw	r20, r30
    10d6:	46 1b       	sub	r20, r22
    10d8:	57 0b       	sbc	r21, r23
    10da:	c3 01       	movw	r24, r6
    10dc:	0e 94 0d 06 	call	0xc1a	; 0xc1a <mjson_print_buf>
    10e0:	c8 0e       	add	r12, r24
    10e2:	d9 1e       	adc	r13, r25
        i += 2;
      } else if (fmt[i + 1] == 'd') {
        int val = va_arg(ap, int);
        n += mjson_print_int(out, val);
      } else if (fmt[i + 1] == 'B') {
        const char *s = va_arg(ap, int) ? "true" : "false";
    10e4:	47 01       	movw	r8, r14
    10e6:	6e c0       	rjmp	.+220    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_buf(out, s, strlen(s));
      } else if (fmt[i + 1] == 's') {
    10e8:	b3 e7       	ldi	r27, 0x73	; 115
    10ea:	3b 12       	cpse	r3, r27
    10ec:	16 c0       	rjmp	.+44     	; 0x111a <mjson_vprintf+0x15e>
        char *buf = va_arg(ap, char *);
    10ee:	74 01       	movw	r14, r8
    10f0:	e2 e0       	ldi	r30, 0x02	; 2
    10f2:	ee 0e       	add	r14, r30
    10f4:	f1 1c       	adc	r15, r1
    10f6:	d4 01       	movw	r26, r8
    10f8:	6d 91       	ld	r22, X+
    10fa:	7c 91       	ld	r23, X
        n += mjson_print_buf(out, buf, strlen(buf));
    10fc:	fb 01       	movw	r30, r22
    10fe:	01 90       	ld	r0, Z+
    1100:	00 20       	and	r0, r0
    1102:	e9 f7       	brne	.-6      	; 0x10fe <mjson_vprintf+0x142>
    1104:	31 97       	sbiw	r30, 0x01	; 1
    1106:	af 01       	movw	r20, r30
    1108:	46 1b       	sub	r20, r22
    110a:	57 0b       	sbc	r21, r23
    110c:	c3 01       	movw	r24, r6
    110e:	0e 94 0d 06 	call	0xc1a	; 0xc1a <mjson_print_buf>
    1112:	c8 0e       	add	r12, r24
    1114:	d9 1e       	adc	r13, r25
        n += mjson_print_int(out, val);
      } else if (fmt[i + 1] == 'B') {
        const char *s = va_arg(ap, int) ? "true" : "false";
        n += mjson_print_buf(out, s, strlen(s));
      } else if (fmt[i + 1] == 's') {
        char *buf = va_arg(ap, char *);
    1116:	47 01       	movw	r8, r14
    1118:	55 c0       	rjmp	.+170    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_buf(out, buf, strlen(buf));
      } else if (memcmp(&fmt[i + 1], ".*s", 3) == 0) {
    111a:	43 e0       	ldi	r20, 0x03	; 3
    111c:	50 e0       	ldi	r21, 0x00	; 0
    111e:	6c e8       	ldi	r22, 0x8C	; 140
    1120:	71 e0       	ldi	r23, 0x01	; 1
    1122:	c7 01       	movw	r24, r14
    1124:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <memcmp>
    1128:	89 2b       	or	r24, r25
    112a:	91 f4       	brne	.+36     	; 0x1150 <mjson_vprintf+0x194>
        int len = va_arg(ap, int);
        char *buf = va_arg(ap, char *);
    112c:	74 01       	movw	r14, r8
    112e:	b4 e0       	ldi	r27, 0x04	; 4
    1130:	eb 0e       	add	r14, r27
    1132:	f1 1c       	adc	r15, r1
        n += mjson_print_buf(out, buf, len);
    1134:	f4 01       	movw	r30, r8
    1136:	40 81       	ld	r20, Z
    1138:	51 81       	ldd	r21, Z+1	; 0x01
    113a:	62 81       	ldd	r22, Z+2	; 0x02
    113c:	73 81       	ldd	r23, Z+3	; 0x03
    113e:	c3 01       	movw	r24, r6
    1140:	0e 94 0d 06 	call	0xc1a	; 0xc1a <mjson_print_buf>
    1144:	c8 0e       	add	r12, r24
    1146:	d9 1e       	adc	r13, r25
        i += 2;
    1148:	0e 5f       	subi	r16, 0xFE	; 254
    114a:	1f 4f       	sbci	r17, 0xFF	; 255
      } else if (fmt[i + 1] == 's') {
        char *buf = va_arg(ap, char *);
        n += mjson_print_buf(out, buf, strlen(buf));
      } else if (memcmp(&fmt[i + 1], ".*s", 3) == 0) {
        int len = va_arg(ap, int);
        char *buf = va_arg(ap, char *);
    114c:	47 01       	movw	r8, r14
    114e:	3a c0       	rjmp	.+116    	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_buf(out, buf, len);
        i += 2;
      } else if (fmt[i + 1] == 'f') {
    1150:	f6 e6       	ldi	r31, 0x66	; 102
    1152:	3f 12       	cpse	r3, r31
    1154:	10 c0       	rjmp	.+32     	; 0x1176 <mjson_vprintf+0x1ba>
        n += mjson_print_dbl(out, va_arg(ap, double));
    1156:	74 01       	movw	r14, r8
    1158:	84 e0       	ldi	r24, 0x04	; 4
    115a:	e8 0e       	add	r14, r24
    115c:	f1 1c       	adc	r15, r1
    115e:	d4 01       	movw	r26, r8
    1160:	4d 91       	ld	r20, X+
    1162:	5d 91       	ld	r21, X+
    1164:	6d 91       	ld	r22, X+
    1166:	7c 91       	ld	r23, X
    1168:	c3 01       	movw	r24, r6
    116a:	0e 94 4b 06 	call	0xc96	; 0xc96 <mjson_print_dbl>
    116e:	c8 0e       	add	r12, r24
    1170:	d9 1e       	adc	r13, r25
    1172:	47 01       	movw	r8, r14
    1174:	27 c0       	rjmp	.+78     	; 0x11c4 <mjson_vprintf+0x208>
      } else if (fmt[i + 1] == 'V') {
    1176:	b6 e5       	ldi	r27, 0x56	; 86
    1178:	3b 12       	cpse	r3, r27
    117a:	13 c0       	rjmp	.+38     	; 0x11a2 <mjson_vprintf+0x1e6>
        int len = va_arg(ap, int);
        const char *buf = va_arg(ap, const char *);
    117c:	74 01       	movw	r14, r8
    117e:	e4 e0       	ldi	r30, 0x04	; 4
    1180:	ee 0e       	add	r14, r30
    1182:	f1 1c       	adc	r15, r1
        n += mjson_print_b64(out, (unsigned char *) buf, len);
    1184:	d4 01       	movw	r26, r8
    1186:	4d 91       	ld	r20, X+
    1188:	5c 91       	ld	r21, X
    118a:	11 97       	sbiw	r26, 0x01	; 1
    118c:	12 96       	adiw	r26, 0x02	; 2
    118e:	6d 91       	ld	r22, X+
    1190:	7c 91       	ld	r23, X
    1192:	13 97       	sbiw	r26, 0x03	; 3
    1194:	c3 01       	movw	r24, r6
    1196:	0e 94 0c 07 	call	0xe18	; 0xe18 <mjson_print_b64>
    119a:	c8 0e       	add	r12, r24
    119c:	d9 1e       	adc	r13, r25
        i += 2;
      } else if (fmt[i + 1] == 'f') {
        n += mjson_print_dbl(out, va_arg(ap, double));
      } else if (fmt[i + 1] == 'V') {
        int len = va_arg(ap, int);
        const char *buf = va_arg(ap, const char *);
    119e:	47 01       	movw	r8, r14
    11a0:	11 c0       	rjmp	.+34     	; 0x11c4 <mjson_vprintf+0x208>
        n += mjson_print_b64(out, (unsigned char *) buf, len);
      } else if (fmt[i + 1] == 'M') {
    11a2:	bd e4       	ldi	r27, 0x4D	; 77
    11a4:	3b 12       	cpse	r3, r27
    11a6:	0e c0       	rjmp	.+28     	; 0x11c4 <mjson_vprintf+0x208>
        va_list tmp;
        va_copy(tmp, ap);
        mjson_printf_fn_t fn = va_arg(tmp, mjson_printf_fn_t);
    11a8:	c4 01       	movw	r24, r8
    11aa:	02 96       	adiw	r24, 0x02	; 2
    11ac:	9a 83       	std	Y+2, r25	; 0x02
    11ae:	89 83       	std	Y+1, r24	; 0x01
        n += fn(out, &tmp);
    11b0:	d4 01       	movw	r26, r8
    11b2:	ed 91       	ld	r30, X+
    11b4:	fc 91       	ld	r31, X
    11b6:	be 01       	movw	r22, r28
    11b8:	6f 5f       	subi	r22, 0xFF	; 255
    11ba:	7f 4f       	sbci	r23, 0xFF	; 255
    11bc:	c3 01       	movw	r24, r6
    11be:	09 95       	icall
    11c0:	c8 0e       	add	r12, r24
    11c2:	d9 1e       	adc	r13, r25
      }
      i++;
    11c4:	0f 5f       	subi	r16, 0xFF	; 255
    11c6:	1f 4f       	sbci	r17, 0xFF	; 255
    11c8:	07 c0       	rjmp	.+14     	; 0x11d8 <mjson_vprintf+0x21c>
    } else {
      n += mjson_print_buf(out, &fmt[i], 1);
    11ca:	41 e0       	ldi	r20, 0x01	; 1
    11cc:	50 e0       	ldi	r21, 0x00	; 0
    11ce:	c3 01       	movw	r24, r6
    11d0:	0e 94 0d 06 	call	0xc1a	; 0xc1a <mjson_print_buf>
    11d4:	c8 0e       	add	r12, r24
    11d6:	d9 1e       	adc	r13, r25

typedef int (*mjson_printf_fn_t)(struct mjson_out *, va_list *);

int mjson_vprintf(struct mjson_out *out, const char *fmt, va_list ap) {
  int n = 0;
  for (int i = 0; fmt[i] != '\0'; i++) {
    11d8:	0f 5f       	subi	r16, 0xFF	; 255
    11da:	1f 4f       	sbci	r17, 0xFF	; 255
    11dc:	78 01       	movw	r14, r16
    11de:	b5 01       	movw	r22, r10
    11e0:	60 0f       	add	r22, r16
    11e2:	71 1f       	adc	r23, r17
    11e4:	fb 01       	movw	r30, r22
    11e6:	80 81       	ld	r24, Z
    11e8:	81 11       	cpse	r24, r1
    11ea:	10 cf       	rjmp	.-480    	; 0x100c <mjson_vprintf+0x50>
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <mjson_vprintf+0x236>
}

typedef int (*mjson_printf_fn_t)(struct mjson_out *, va_list *);

int mjson_vprintf(struct mjson_out *out, const char *fmt, va_list ap) {
  int n = 0;
    11ee:	c1 2c       	mov	r12, r1
    11f0:	d1 2c       	mov	r13, r1
    } else {
      n += mjson_print_buf(out, &fmt[i], 1);
    }
  }
  return n;
}
    11f2:	c6 01       	movw	r24, r12
    11f4:	0f 90       	pop	r0
    11f6:	0f 90       	pop	r0
    11f8:	df 91       	pop	r29
    11fa:	cf 91       	pop	r28
    11fc:	1f 91       	pop	r17
    11fe:	0f 91       	pop	r16
    1200:	ff 90       	pop	r15
    1202:	ef 90       	pop	r14
    1204:	df 90       	pop	r13
    1206:	cf 90       	pop	r12
    1208:	bf 90       	pop	r11
    120a:	af 90       	pop	r10
    120c:	9f 90       	pop	r9
    120e:	8f 90       	pop	r8
    1210:	7f 90       	pop	r7
    1212:	6f 90       	pop	r6
    1214:	5f 90       	pop	r5
    1216:	4f 90       	pop	r4
    1218:	3f 90       	pop	r3
    121a:	08 95       	ret

0000121c <mjson_printf>:

int mjson_printf(struct mjson_out *out, const char *fmt, ...) {
    121c:	cf 93       	push	r28
    121e:	df 93       	push	r29
    1220:	cd b7       	in	r28, 0x3d	; 61
    1222:	de b7       	in	r29, 0x3e	; 62
  va_list ap;
  va_start(ap, fmt);
  int len = mjson_vprintf(out, fmt, ap);
    1224:	ae 01       	movw	r20, r28
    1226:	47 5f       	subi	r20, 0xF7	; 247
    1228:	5f 4f       	sbci	r21, 0xFF	; 255
    122a:	6f 81       	ldd	r22, Y+7	; 0x07
    122c:	78 85       	ldd	r23, Y+8	; 0x08
    122e:	8d 81       	ldd	r24, Y+5	; 0x05
    1230:	9e 81       	ldd	r25, Y+6	; 0x06
    1232:	0e 94 de 07 	call	0xfbc	; 0xfbc <mjson_vprintf>
  va_end(ap);
  return len;
}
    1236:	df 91       	pop	r29
    1238:	cf 91       	pop	r28
    123a:	08 95       	ret

0000123c <__vector_18>:

float frequency_value;
uint8_t mfc_value;

//ISR for UART receive
ISR(USART_RX_vect){
    123c:	1f 92       	push	r1
    123e:	0f 92       	push	r0
    1240:	0f b6       	in	r0, 0x3f	; 63
    1242:	0f 92       	push	r0
    1244:	11 24       	eor	r1, r1
    1246:	8f 93       	push	r24
    1248:	9f 93       	push	r25
    124a:	ef 93       	push	r30
    124c:	ff 93       	push	r31
	char tmp = UDR0; 
    124e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(message_complete == false){
    1252:	90 91 56 02 	lds	r25, 0x0256	; 0x800256 <message_complete>
    1256:	91 11       	cpse	r25, r1
    1258:	47 c0       	rjmp	.+142    	; 0x12e8 <__vector_18+0xac>
		if(tmp == '{'){
    125a:	8b 37       	cpi	r24, 0x7B	; 123
    125c:	49 f4       	brne	.+18     	; 0x1270 <__vector_18+0x34>
			net_brackets++;
    125e:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <net_brackets>
    1262:	9f 5f       	subi	r25, 0xFF	; 255
    1264:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <net_brackets>
			message_start = true;
    1268:	91 e0       	ldi	r25, 0x01	; 1
    126a:	90 93 54 02 	sts	0x0254, r25	; 0x800254 <__data_end>
    126e:	12 c0       	rjmp	.+36     	; 0x1294 <__vector_18+0x58>
		}
		else if((tmp == '}') && (message_start == true)){
    1270:	8d 37       	cpi	r24, 0x7D	; 125
    1272:	81 f4       	brne	.+32     	; 0x1294 <__vector_18+0x58>
    1274:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <__data_end>
    1278:	91 30       	cpi	r25, 0x01	; 1
    127a:	61 f4       	brne	.+24     	; 0x1294 <__vector_18+0x58>
			net_brackets--;
    127c:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <net_brackets>
    1280:	91 50       	subi	r25, 0x01	; 1
    1282:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <net_brackets>
			if(net_brackets == 0){
    1286:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <net_brackets>
    128a:	91 11       	cpse	r25, r1
    128c:	03 c0       	rjmp	.+6      	; 0x1294 <__vector_18+0x58>
				message_complete = true;
    128e:	91 e0       	ldi	r25, 0x01	; 1
    1290:	90 93 56 02 	sts	0x0256, r25	; 0x800256 <message_complete>
			}
		}

		if(message_start == true){
    1294:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <__data_end>
    1298:	91 30       	cpi	r25, 0x01	; 1
    129a:	a9 f4       	brne	.+42     	; 0x12c6 <__vector_18+0x8a>
			received_message[message_index] = tmp;
    129c:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <message_index>
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	ea 52       	subi	r30, 0x2A	; 42
    12a4:	fc 4f       	sbci	r31, 0xFC	; 252
    12a6:	80 83       	st	Z, r24
			message_index++;
    12a8:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <message_index>
    12ac:	8f 5f       	subi	r24, 0xFF	; 255
    12ae:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <message_index>
			if(message_complete == true){
    12b2:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <message_complete>
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	31 f4       	brne	.+12     	; 0x12c6 <__vector_18+0x8a>
				received_message[message_index] = '\0';
    12ba:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <message_index>
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	ea 52       	subi	r30, 0x2A	; 42
    12c2:	fc 4f       	sbci	r31, 0xFC	; 252
    12c4:	10 82       	st	Z, r1
			}
		}

		if((message_index == (MAX_SIZE-1)) || (net_brackets > 3)){
    12c6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <message_index>
    12ca:	85 39       	cpi	r24, 0x95	; 149
    12cc:	21 f0       	breq	.+8      	; 0x12d6 <__vector_18+0x9a>
    12ce:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <net_brackets>
    12d2:	84 30       	cpi	r24, 0x04	; 4
    12d4:	48 f0       	brcs	.+18     	; 0x12e8 <__vector_18+0xac>
			receive_error = true;
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	80 93 55 02 	sts	0x0255, r24	; 0x800255 <receive_error>
			message_start = false;
    12dc:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <__data_end>
			message_complete = false;
    12e0:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <message_complete>
			message_index = 0;
    12e4:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <message_index>
		}
	}
}
    12e8:	ff 91       	pop	r31
    12ea:	ef 91       	pop	r30
    12ec:	9f 91       	pop	r25
    12ee:	8f 91       	pop	r24
    12f0:	0f 90       	pop	r0
    12f2:	0f be       	out	0x3f, r0	; 63
    12f4:	0f 90       	pop	r0
    12f6:	1f 90       	pop	r1
    12f8:	18 95       	reti

000012fa <main>:

int main(void)
{
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	cd b7       	in	r28, 0x3d	; 61
    1300:	de b7       	in	r29, 0x3e	; 62
    1302:	ac 97       	sbiw	r28, 0x2c	; 44
    1304:	0f b6       	in	r0, 0x3f	; 63
    1306:	f8 94       	cli
    1308:	de bf       	out	0x3e, r29	; 62
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	cd bf       	out	0x3d, r28	; 61
	uint8_t* mfc = &mfc_value;
	float* frequency = &frequency_value;
	
	//UART functionalities 
	uart_initiate(UBRR_VALUE);
    130e:	83 e3       	ldi	r24, 0x33	; 51
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <uart_initiate>
	char req_mfc_str[4] = "XXX";
    1316:	28 e5       	ldi	r18, 0x58	; 88
    1318:	38 e5       	ldi	r19, 0x58	; 88
    131a:	3a 83       	std	Y+2, r19	; 0x02
    131c:	29 83       	std	Y+1, r18	; 0x01
    131e:	88 e5       	ldi	r24, 0x58	; 88
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	9c 83       	std	Y+4, r25	; 0x04
    1324:	8b 83       	std	Y+3, r24	; 0x03
	char mfc_str[4] = "XXX";
    1326:	3e 83       	std	Y+6, r19	; 0x06
    1328:	2d 83       	std	Y+5, r18	; 0x05
    132a:	98 87       	std	Y+8, r25	; 0x08
    132c:	8f 83       	std	Y+7, r24	; 0x07
	char pwr_str[4] = "XXX";
    132e:	3a 87       	std	Y+10, r19	; 0x0a
    1330:	29 87       	std	Y+9, r18	; 0x09
    1332:	9c 87       	std	Y+12, r25	; 0x0c
    1334:	8b 87       	std	Y+11, r24	; 0x0b
	char freq_str[4] = "XXX";
    1336:	3e 87       	std	Y+14, r19	; 0x0e
    1338:	2d 87       	std	Y+13, r18	; 0x0d
    133a:	98 8b       	std	Y+16, r25	; 0x10
    133c:	8f 87       	std	Y+15, r24	; 0x0f
	char curr_str[4] = "XXX";
    133e:	3a 8b       	std	Y+18, r19	; 0x12
    1340:	29 8b       	std	Y+17, r18	; 0x11
    1342:	9c 8b       	std	Y+20, r25	; 0x14
    1344:	8b 8b       	std	Y+19, r24	; 0x13
	char volt_str[4] = "XXX";
    1346:	3e 8b       	std	Y+22, r19	; 0x16
    1348:	2d 8b       	std	Y+21, r18	; 0x15
    134a:	98 8f       	std	Y+24, r25	; 0x18
    134c:	8f 8b       	std	Y+23, r24	; 0x17
	char sith_str[4] = "\0";
    134e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__malloc_margin+0x2>
    1352:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__malloc_margin+0x3>
    1356:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__malloc_margin+0x4>
    135a:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__malloc_margin+0x5>
    135e:	89 8f       	std	Y+25, r24	; 0x19
    1360:	9a 8f       	std	Y+26, r25	; 0x1a
    1362:	ab 8f       	std	Y+27, r26	; 0x1b
    1364:	bc 8f       	std	Y+28, r27	; 0x1c

	//Enable Global interrupts
	sei();
    1366:	78 94       	sei

	//Initiation for the project skywalker
	force = false;
    1368:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <force>
		
	//Setting default values
	*frequency = 12.5;
    136c:	80 e0       	ldi	r24, 0x00	; 0
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	a8 e4       	ldi	r26, 0x48	; 72
    1372:	b1 e4       	ldi	r27, 0x41	; 65
    1374:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <frequency_value>
    1378:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <frequency_value+0x1>
    137c:	a0 93 d3 03 	sts	0x03D3, r26	; 0x8003d3 <frequency_value+0x2>
    1380:	b0 93 d4 03 	sts	0x03D4, r27	; 0x8003d4 <frequency_value+0x3>
	*mfc = 150;
    1384:	86 e9       	ldi	r24, 0x96	; 150
    1386:	80 93 d5 03 	sts	0x03D5, r24	; 0x8003d5 <mfc_value>

	//enable timers
	driver_timer_initiate();
    138a:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <driver_timer_initiate>
	set_parameters(*frequency, *mfc);
    138e:	60 91 d1 03 	lds	r22, 0x03D1	; 0x8003d1 <frequency_value>
    1392:	70 91 d2 03 	lds	r23, 0x03D2	; 0x8003d2 <frequency_value+0x1>
    1396:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <frequency_value+0x2>
    139a:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <frequency_value+0x3>
    139e:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <mfc_value>
    13a2:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
	//soft_start(*frequency, *mfc);

	//ADC initiation 
	adc_initiate();
    13a6:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_initiate>

	//Resonance checking flag
	check_resonance = false;
    13aa:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <check_resonance>
	resonance_counter = 0;
    13ae:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <resonance_counter>

    while (1){

		if(message_complete == true){
			UCSR0B &= ~(1 << RXEN0);
    13b2:	01 ec       	ldi	r16, 0xC1	; 193
    13b4:	10 e0       	ldi	r17, 0x00	; 0
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    13b6:	7e 01       	movw	r14, r28
    13b8:	25 e0       	ldi	r18, 0x05	; 5
    13ba:	e2 0e       	add	r14, r18
    13bc:	f1 1c       	adc	r15, r1
    13be:	ce 01       	movw	r24, r28
    13c0:	01 96       	adiw	r24, 0x01	; 1
    13c2:	6c 01       	movw	r12, r24
			UCSR0B |= (1 << RXEN0);
		}

		if(message_complete == true){
			char *transmit_message = NULL;
			struct mjson_out out = MJSON_OUT_DYNAMIC_BUF(&transmit_message);
    13c4:	5e 01       	movw	r10, r28
    13c6:	97 e2       	ldi	r25, 0x27	; 39
    13c8:	a9 0e       	add	r10, r25
    13ca:	b1 1c       	adc	r11, r1
			mjson_printf(&out,
    13cc:	3e 01       	movw	r6, r28
    13ce:	e9 e1       	ldi	r30, 0x19	; 25
    13d0:	6e 0e       	add	r6, r30
    13d2:	71 1c       	adc	r7, r1
    13d4:	ce 01       	movw	r24, r28
    13d6:	45 96       	adiw	r24, 0x15	; 21
    13d8:	9a a7       	std	Y+42, r25	; 0x2a
    13da:	89 a7       	std	Y+41, r24	; 0x29
    13dc:	fe 01       	movw	r30, r28
    13de:	71 96       	adiw	r30, 0x11	; 17
    13e0:	fc a7       	std	Y+44, r31	; 0x2c
    13e2:	eb a7       	std	Y+43, r30	; 0x2b
    13e4:	1e 01       	movw	r2, r28
    13e6:	fd e0       	ldi	r31, 0x0D	; 13
    13e8:	2f 0e       	add	r2, r31
    13ea:	31 1c       	adc	r3, r1
    13ec:	2e 01       	movw	r4, r28
    13ee:	29 e0       	ldi	r18, 0x09	; 9
    13f0:	42 0e       	add	r4, r18
    13f2:	51 1c       	adc	r5, r1
    13f4:	4e 01       	movw	r8, r28
    13f6:	8d e1       	ldi	r24, 0x1D	; 29
    13f8:	88 0e       	add	r8, r24
    13fa:	91 1c       	adc	r9, r1
	check_resonance = false;
	resonance_counter = 0;

    while (1){

		if(message_complete == true){
    13fc:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <message_complete>
    1400:	81 30       	cpi	r24, 0x01	; 1
    1402:	b1 f5       	brne	.+108    	; 0x1470 <main+0x176>
			UCSR0B &= ~(1 << RXEN0);
    1404:	f8 01       	movw	r30, r16
    1406:	80 81       	ld	r24, Z
    1408:	8f 7e       	andi	r24, 0xEF	; 239
    140a:	80 83       	st	Z, r24
			uart_transmit((char*)received_message);
    140c:	86 ed       	ldi	r24, 0xD6	; 214
    140e:	93 e0       	ldi	r25, 0x03	; 3
    1410:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
    1414:	80 91 d5 03 	lds	r24, 0x03D5	; 0x8003d5 <mfc_value>
    1418:	4a e0       	ldi	r20, 0x0A	; 10
    141a:	b7 01       	movw	r22, r14
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <__itoa_ncheck>
			itoa(*mfc,mfc_str,10);
			process_message((char*)received_message, mfc);
    1422:	65 ed       	ldi	r22, 0xD5	; 213
    1424:	73 e0       	ldi	r23, 0x03	; 3
    1426:	86 ed       	ldi	r24, 0xD6	; 214
    1428:	93 e0       	ldi	r25, 0x03	; 3
    142a:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <process_message>
    142e:	80 91 d5 03 	lds	r24, 0x03D5	; 0x8003d5 <mfc_value>
    1432:	4a e0       	ldi	r20, 0x0A	; 10
    1434:	b6 01       	movw	r22, r12
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <__itoa_ncheck>
			itoa(*mfc,req_mfc_str,10);
			set_parameters(*frequency, *mfc);
    143c:	60 91 d1 03 	lds	r22, 0x03D1	; 0x8003d1 <frequency_value>
    1440:	70 91 d2 03 	lds	r23, 0x03D2	; 0x8003d2 <frequency_value+0x1>
    1444:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <frequency_value+0x2>
    1448:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <frequency_value+0x3>
    144c:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <mfc_value>
    1450:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
			uart_transmit("\n\r");
    1454:	88 e1       	ldi	r24, 0x18	; 24
    1456:	91 e0       	ldi	r25, 0x01	; 1
    1458:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
			message_complete = false;
    145c:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <message_complete>
			message_start = false;
    1460:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <__data_end>
			message_index = 0;
    1464:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <message_index>
			UCSR0B |= (1 << RXEN0);
    1468:	f8 01       	movw	r30, r16
    146a:	80 81       	ld	r24, Z
    146c:	80 61       	ori	r24, 0x10	; 16
    146e:	80 83       	st	Z, r24
		}

		if(message_complete == true){
    1470:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <message_complete>
    1474:	81 30       	cpi	r24, 0x01	; 1
    1476:	09 f0       	breq	.+2      	; 0x147a <main+0x180>
    1478:	7d c0       	rjmp	.+250    	; 0x1574 <main+0x27a>
			char *transmit_message = NULL;
    147a:	18 a6       	std	Y+40, r1	; 0x28
    147c:	1f a2       	std	Y+39, r1	; 0x27
			struct mjson_out out = MJSON_OUT_DYNAMIC_BUF(&transmit_message);
    147e:	80 e1       	ldi	r24, 0x10	; 16
    1480:	93 e0       	ldi	r25, 0x03	; 3
    1482:	9e 8f       	std	Y+30, r25	; 0x1e
    1484:	8d 8f       	std	Y+29, r24	; 0x1d
    1486:	b8 a2       	std	Y+32, r11	; 0x20
    1488:	af 8e       	std	Y+31, r10	; 0x1f
    148a:	1a a2       	std	Y+34, r1	; 0x22
    148c:	19 a2       	std	Y+33, r1	; 0x21
    148e:	1c a2       	std	Y+36, r1	; 0x24
    1490:	1b a2       	std	Y+35, r1	; 0x23
    1492:	1e a2       	std	Y+38, r1	; 0x26
    1494:	1d a2       	std	Y+37, r1	; 0x25
			mjson_printf(&out,
    1496:	7f 92       	push	r7
    1498:	6f 92       	push	r6
    149a:	ea e4       	ldi	r30, 0x4A	; 74
    149c:	f2 e0       	ldi	r31, 0x02	; 2
    149e:	ff 93       	push	r31
    14a0:	ef 93       	push	r30
    14a2:	80 e9       	ldi	r24, 0x90	; 144
    14a4:	91 e0       	ldi	r25, 0x01	; 1
    14a6:	9f 93       	push	r25
    14a8:	8f 93       	push	r24
    14aa:	85 e9       	ldi	r24, 0x95	; 149
    14ac:	91 e0       	ldi	r25, 0x01	; 1
    14ae:	9f 93       	push	r25
    14b0:	8f 93       	push	r24
    14b2:	fa a5       	ldd	r31, Y+42	; 0x2a
    14b4:	ff 93       	push	r31
    14b6:	29 a5       	ldd	r18, Y+41	; 0x29
    14b8:	2f 93       	push	r18
    14ba:	87 e9       	ldi	r24, 0x97	; 151
    14bc:	91 e0       	ldi	r25, 0x01	; 1
    14be:	9f 93       	push	r25
    14c0:	8f 93       	push	r24
    14c2:	8c e9       	ldi	r24, 0x9C	; 156
    14c4:	91 e0       	ldi	r25, 0x01	; 1
    14c6:	9f 93       	push	r25
    14c8:	8f 93       	push	r24
    14ca:	8c a5       	ldd	r24, Y+44	; 0x2c
    14cc:	8f 93       	push	r24
    14ce:	9b a5       	ldd	r25, Y+43	; 0x2b
    14d0:	9f 93       	push	r25
    14d2:	8e e9       	ldi	r24, 0x9E	; 158
    14d4:	91 e0       	ldi	r25, 0x01	; 1
    14d6:	9f 93       	push	r25
    14d8:	8f 93       	push	r24
    14da:	83 ea       	ldi	r24, 0xA3	; 163
    14dc:	91 e0       	ldi	r25, 0x01	; 1
    14de:	9f 93       	push	r25
    14e0:	8f 93       	push	r24
    14e2:	3f 92       	push	r3
    14e4:	2f 92       	push	r2
    14e6:	86 ea       	ldi	r24, 0xA6	; 166
    14e8:	91 e0       	ldi	r25, 0x01	; 1
    14ea:	9f 93       	push	r25
    14ec:	8f 93       	push	r24
    14ee:	8b ea       	ldi	r24, 0xAB	; 171
    14f0:	91 e0       	ldi	r25, 0x01	; 1
    14f2:	9f 93       	push	r25
    14f4:	8f 93       	push	r24
    14f6:	5f 92       	push	r5
    14f8:	4f 92       	push	r4
    14fa:	8d ea       	ldi	r24, 0xAD	; 173
    14fc:	91 e0       	ldi	r25, 0x01	; 1
    14fe:	9f 93       	push	r25
    1500:	8f 93       	push	r24
    1502:	81 eb       	ldi	r24, 0xB1	; 177
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	9f 93       	push	r25
    1508:	8f 93       	push	r24
    150a:	87 eb       	ldi	r24, 0xB7	; 183
    150c:	91 e0       	ldi	r25, 0x01	; 1
    150e:	9f 93       	push	r25
    1510:	8f 93       	push	r24
    1512:	8d eb       	ldi	r24, 0xBD	; 189
    1514:	91 e0       	ldi	r25, 0x01	; 1
    1516:	9f 93       	push	r25
    1518:	8f 93       	push	r24
    151a:	ff 92       	push	r15
    151c:	ef 92       	push	r14
    151e:	81 ec       	ldi	r24, 0xC1	; 193
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	9f 93       	push	r25
    1524:	8f 93       	push	r24
    1526:	df 92       	push	r13
    1528:	cf 92       	push	r12
    152a:	8d e3       	ldi	r24, 0x3D	; 61
    152c:	92 e0       	ldi	r25, 0x02	; 2
    152e:	9f 93       	push	r25
    1530:	8f 93       	push	r24
    1532:	85 ec       	ldi	r24, 0xC5	; 197
    1534:	91 e0       	ldi	r25, 0x01	; 1
    1536:	9f 93       	push	r25
    1538:	8f 93       	push	r24
    153a:	89 ec       	ldi	r24, 0xC9	; 201
    153c:	91 e0       	ldi	r25, 0x01	; 1
    153e:	9f 93       	push	r25
    1540:	8f 93       	push	r24
    1542:	8b ec       	ldi	r24, 0xCB	; 203
    1544:	91 e0       	ldi	r25, 0x01	; 1
    1546:	9f 93       	push	r25
    1548:	8f 93       	push	r24
    154a:	9f 92       	push	r9
    154c:	8f 92       	push	r8
    154e:	0e 94 0e 09 	call	0x121c	; 0x121c <mjson_printf>
			"{%Q: {%Q: {%Q: %Q, %Q: %Q}, %Q: %Q, %Q: {%Q: \"%s%s\", %Q: \"%s%s\", %Q: \"%s%s\", %Q: \"%s%s\"}, %Q: { %Q: %Q}}}",
			"3", "mfc","req",req_mfc_str, "cur", mfc_str, "ver", VERSION, "param", "pwr", pwr_str, "W", "freq", freq_str, "Hz", "curr", curr_str, "A", "volt", volt_str, "V", "user", "force", sith_str);
		
			uart_transmit("\n\r");
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	de bf       	out	0x3e, r29	; 62
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	cd bf       	out	0x3d, r28	; 61
    155c:	88 e1       	ldi	r24, 0x18	; 24
    155e:	91 e0       	ldi	r25, 0x01	; 1
    1560:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
			uart_transmit((char *)transmit_message);
    1564:	8f a1       	ldd	r24, Y+39	; 0x27
    1566:	98 a5       	ldd	r25, Y+40	; 0x28
    1568:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <uart_transmit>
			free(transmit_message);
    156c:	8f a1       	ldd	r24, Y+39	; 0x27
    156e:	98 a5       	ldd	r25, Y+40	; 0x28
    1570:	0e 94 78 12 	call	0x24f0	; 0x24f0 <free>
		}
			
		if(force){
    1574:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <force>
    1578:	88 23       	and	r24, r24
    157a:	c1 f0       	breq	.+48     	; 0x15ac <main+0x2b2>
			project_skywalker();
    157c:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <project_skywalker>
			force = false;
    1580:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <force>
			strcpy(sith_str,"off");
    1584:	8f e6       	ldi	r24, 0x6F	; 111
    1586:	96 e6       	ldi	r25, 0x66	; 102
    1588:	9a 8f       	std	Y+26, r25	; 0x1a
    158a:	89 8f       	std	Y+25, r24	; 0x19
    158c:	86 e6       	ldi	r24, 0x66	; 102
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	9c 8f       	std	Y+28, r25	; 0x1c
    1592:	8b 8f       	std	Y+27, r24	; 0x1b
			set_parameters(*frequency, *mfc);
    1594:	60 91 d1 03 	lds	r22, 0x03D1	; 0x8003d1 <frequency_value>
    1598:	70 91 d2 03 	lds	r23, 0x03D2	; 0x8003d2 <frequency_value+0x1>
    159c:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <frequency_value+0x2>
    15a0:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <frequency_value+0x3>
    15a4:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <mfc_value>
    15a8:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
		}

		if(check_resonance && (*mfc != 0)){
    15ac:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <check_resonance>
    15b0:	88 23       	and	r24, r24
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <main+0x2bc>
    15b4:	23 cf       	rjmp	.-442    	; 0x13fc <main+0x102>
    15b6:	60 91 d5 03 	lds	r22, 0x03D5	; 0x8003d5 <mfc_value>
    15ba:	66 23       	and	r22, r22
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <main+0x2c6>
    15be:	1e cf       	rjmp	.-452    	; 0x13fc <main+0x102>
			calculate_resonance(frequency, *mfc);
    15c0:	81 ed       	ldi	r24, 0xD1	; 209
    15c2:	93 e0       	ldi	r25, 0x03	; 3
    15c4:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <calculate_resonance>
			check_resonance = false;
    15c8:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <check_resonance>
    15cc:	17 cf       	rjmp	.-466    	; 0x13fc <main+0x102>

000015ce <driver_timer_initiate>:
	unsigned int i = 0;
	while(i != req_mfc){
		set_parameters(req_freq, i);
		i++;
	}
}
    15ce:	e1 eb       	ldi	r30, 0xB1	; 177
    15d0:	f0 e0       	ldi	r31, 0x00	; 0
    15d2:	80 81       	ld	r24, Z
    15d4:	81 60       	ori	r24, 0x01	; 1
    15d6:	80 83       	st	Z, r24
    15d8:	80 e4       	ldi	r24, 0x40	; 64
    15da:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    15de:	80 e1       	ldi	r24, 0x10	; 16
    15e0:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    15e4:	e1 e8       	ldi	r30, 0x81	; 129
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	80 81       	ld	r24, Z
    15ea:	82 60       	ori	r24, 0x02	; 2
    15ec:	80 83       	st	Z, r24
    15ee:	20 9a       	sbi	0x04, 0	; 4
    15f0:	8a b1       	in	r24, 0x0a	; 10
    15f2:	80 6e       	ori	r24, 0xE0	; 224
    15f4:	8a b9       	out	0x0a, r24	; 10
    15f6:	28 9a       	sbi	0x05, 0	; 5
    15f8:	5e 9a       	sbi	0x0b, 6	; 11
    15fa:	5d 98       	cbi	0x0b, 5	; 11
    15fc:	5f 98       	cbi	0x0b, 7	; 11
    15fe:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <change_duty>
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <first_cycle>
    1608:	08 95       	ret

0000160a <stop_motor>:
    160a:	ef e6       	ldi	r30, 0x6F	; 111
    160c:	f0 e0       	ldi	r31, 0x00	; 0
    160e:	80 81       	ld	r24, Z
    1610:	8b 7f       	andi	r24, 0xFB	; 251
    1612:	80 83       	st	Z, r24
    1614:	80 81       	ld	r24, Z
    1616:	8d 7f       	andi	r24, 0xFD	; 253
    1618:	80 83       	st	Z, r24
    161a:	e0 e7       	ldi	r30, 0x70	; 112
    161c:	f0 e0       	ldi	r31, 0x00	; 0
    161e:	80 81       	ld	r24, Z
    1620:	8d 7f       	andi	r24, 0xFD	; 253
    1622:	80 83       	st	Z, r24
    1624:	80 81       	ld	r24, Z
    1626:	8b 7f       	andi	r24, 0xFB	; 251
    1628:	80 83       	st	Z, r24
    162a:	28 98       	cbi	0x05, 0	; 5
    162c:	8f e1       	ldi	r24, 0x1F	; 31
    162e:	9e e4       	ldi	r25, 0x4E	; 78
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	f1 f7       	brne	.-4      	; 0x1630 <stop_motor+0x26>
    1634:	00 c0       	rjmp	.+0      	; 0x1636 <stop_motor+0x2c>
    1636:	00 00       	nop
    1638:	5d 98       	cbi	0x0b, 5	; 11
    163a:	8f e1       	ldi	r24, 0x1F	; 31
    163c:	9e e4       	ldi	r25, 0x4E	; 78
    163e:	01 97       	sbiw	r24, 0x01	; 1
    1640:	f1 f7       	brne	.-4      	; 0x163e <stop_motor+0x34>
    1642:	00 c0       	rjmp	.+0      	; 0x1644 <stop_motor+0x3a>
    1644:	00 00       	nop
    1646:	5f 9a       	sbi	0x0b, 7	; 11
    1648:	8f e1       	ldi	r24, 0x1F	; 31
    164a:	9e e4       	ldi	r25, 0x4E	; 78
    164c:	01 97       	sbiw	r24, 0x01	; 1
    164e:	f1 f7       	brne	.-4      	; 0x164c <stop_motor+0x42>
    1650:	00 c0       	rjmp	.+0      	; 0x1652 <stop_motor+0x48>
    1652:	00 00       	nop
    1654:	5e 9a       	sbi	0x0b, 6	; 11
    1656:	81 e0       	ldi	r24, 0x01	; 1
    1658:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <first_cycle>
    165c:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <resonance_counter>
    1660:	08 95       	ret

00001662 <set_parameters>:
    1662:	4f 92       	push	r4
    1664:	5f 92       	push	r5
    1666:	6f 92       	push	r6
    1668:	7f 92       	push	r7
    166a:	8f 92       	push	r8
    166c:	9f 92       	push	r9
    166e:	af 92       	push	r10
    1670:	bf 92       	push	r11
    1672:	cf 92       	push	r12
    1674:	df 92       	push	r13
    1676:	ef 92       	push	r14
    1678:	ff 92       	push	r15
    167a:	6b 01       	movw	r12, r22
    167c:	7c 01       	movw	r14, r24
    167e:	41 11       	cpse	r20, r1
    1680:	03 c0       	rjmp	.+6      	; 0x1688 <set_parameters+0x26>
    1682:	0e 94 05 0b 	call	0x160a	; 0x160a <stop_motor>
    1686:	76 c0       	rjmp	.+236    	; 0x1774 <set_parameters+0x112>
    1688:	84 2f       	mov	r24, r20
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	90 93 c9 03 	sts	0x03C9, r25	; 0x8003c9 <mfr+0x1>
    1690:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <mfr>
    1694:	64 2f       	mov	r22, r20
    1696:	70 e0       	ldi	r23, 0x00	; 0
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	0e 94 ae 10 	call	0x215c	; 0x215c <__floatunsisf>
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	30 e0       	ldi	r19, 0x00	; 0
    16a4:	4f e7       	ldi	r20, 0x7F	; 127
    16a6:	53 e4       	ldi	r21, 0x43	; 67
    16a8:	0e 94 06 10 	call	0x200c	; 0x200c <__divsf3>
    16ac:	4b 01       	movw	r8, r22
    16ae:	5c 01       	movw	r10, r24
    16b0:	a7 01       	movw	r20, r14
    16b2:	96 01       	movw	r18, r12
    16b4:	c7 01       	movw	r24, r14
    16b6:	b6 01       	movw	r22, r12
    16b8:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__addsf3>
    16bc:	9b 01       	movw	r18, r22
    16be:	ac 01       	movw	r20, r24
    16c0:	60 e0       	ldi	r22, 0x00	; 0
    16c2:	70 e0       	ldi	r23, 0x00	; 0
    16c4:	8a e7       	ldi	r24, 0x7A	; 122
    16c6:	94 e4       	ldi	r25, 0x44	; 68
    16c8:	0e 94 06 10 	call	0x200c	; 0x200c <__divsf3>
    16cc:	2b 01       	movw	r4, r22
    16ce:	3c 01       	movw	r6, r24
    16d0:	9b 01       	movw	r18, r22
    16d2:	ac 01       	movw	r20, r24
    16d4:	c5 01       	movw	r24, r10
    16d6:	b4 01       	movw	r22, r8
    16d8:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3>
    16dc:	6b 01       	movw	r12, r22
    16de:	7c 01       	movw	r14, r24
    16e0:	a5 01       	movw	r20, r10
    16e2:	94 01       	movw	r18, r8
    16e4:	60 e0       	ldi	r22, 0x00	; 0
    16e6:	70 e0       	ldi	r23, 0x00	; 0
    16e8:	80 e8       	ldi	r24, 0x80	; 128
    16ea:	9f e3       	ldi	r25, 0x3F	; 63
    16ec:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__subsf3>
    16f0:	a3 01       	movw	r20, r6
    16f2:	92 01       	movw	r18, r4
    16f4:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3>
    16f8:	a7 01       	movw	r20, r14
    16fa:	96 01       	movw	r18, r12
    16fc:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__addsf3>
    1700:	20 e0       	ldi	r18, 0x00	; 0
    1702:	30 e0       	ldi	r19, 0x00	; 0
    1704:	a9 01       	movw	r20, r18
    1706:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__addsf3>
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	4a e7       	ldi	r20, 0x7A	; 122
    1710:	54 e4       	ldi	r21, 0x44	; 68
    1712:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3>
    1716:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__fixunssfsi>
    171a:	70 93 ce 03 	sts	0x03CE, r23	; 0x8003ce <t1_compare_a+0x1>
    171e:	60 93 cd 03 	sts	0x03CD, r22	; 0x8003cd <t1_compare_a>
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	4a e7       	ldi	r20, 0x7A	; 122
    1728:	54 e4       	ldi	r21, 0x44	; 68
    172a:	c7 01       	movw	r24, r14
    172c:	b6 01       	movw	r22, r12
    172e:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3>
    1732:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__fixunssfsi>
    1736:	70 93 5a 02 	sts	0x025A, r23	; 0x80025a <t1_compare_b+0x1>
    173a:	60 93 59 02 	sts	0x0259, r22	; 0x800259 <t1_compare_b>
    173e:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <isNegative>
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	80 93 c4 03 	sts	0x03C4, r24	; 0x8003c4 <change_duty>
    1748:	80 91 cf 03 	lds	r24, 0x03CF	; 0x8003cf <first_cycle>
    174c:	88 23       	and	r24, r24
    174e:	91 f0       	breq	.+36     	; 0x1774 <set_parameters+0x112>
    1750:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <t1_compare_a>
    1754:	90 91 ce 03 	lds	r25, 0x03CE	; 0x8003ce <t1_compare_a+0x1>
    1758:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    175c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1760:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <t1_compare_b>
    1764:	90 91 5a 02 	lds	r25, 0x025A	; 0x80025a <t1_compare_b+0x1>
    1768:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    176c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    1770:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <first_cycle>
    1774:	ef e6       	ldi	r30, 0x6F	; 111
    1776:	f0 e0       	ldi	r31, 0x00	; 0
    1778:	80 81       	ld	r24, Z
    177a:	86 60       	ori	r24, 0x06	; 6
    177c:	80 83       	st	Z, r24
    177e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1782:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1786:	ff 90       	pop	r15
    1788:	ef 90       	pop	r14
    178a:	df 90       	pop	r13
    178c:	cf 90       	pop	r12
    178e:	bf 90       	pop	r11
    1790:	af 90       	pop	r10
    1792:	9f 90       	pop	r9
    1794:	8f 90       	pop	r8
    1796:	7f 90       	pop	r7
    1798:	6f 90       	pop	r6
    179a:	5f 90       	pop	r5
    179c:	4f 90       	pop	r4
    179e:	08 95       	ret

000017a0 <calculate_resonance>:
}

//This function calculates resonant frequency by half driving the motor for a brief amount of time
//then reading the ADC values representing the back emf. Following this peak detection is used to
//determine the frequency of the system. The frequency will then be automatically adjust accordingly
void calculate_resonance(float* freq, uint8_t mfc){
    17a0:	1f 93       	push	r17
    17a2:	cf 93       	push	r28
    17a4:	df 93       	push	r29
    17a6:	ec 01       	movw	r28, r24
    17a8:	16 2f       	mov	r17, r22
	set_parameters(*freq, 150);
    17aa:	68 81       	ld	r22, Y
    17ac:	79 81       	ldd	r23, Y+1	; 0x01
    17ae:	8a 81       	ldd	r24, Y+2	; 0x02
    17b0:	9b 81       	ldd	r25, Y+3	; 0x03
    17b2:	46 e9       	ldi	r20, 0x96	; 150
    17b4:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17b8:	2f ef       	ldi	r18, 0xFF	; 255
    17ba:	81 ee       	ldi	r24, 0xE1	; 225
    17bc:	94 e0       	ldi	r25, 0x04	; 4
    17be:	21 50       	subi	r18, 0x01	; 1
    17c0:	80 40       	sbci	r24, 0x00	; 0
    17c2:	90 40       	sbci	r25, 0x00	; 0
    17c4:	e1 f7       	brne	.-8      	; 0x17be <calculate_resonance+0x1e>
    17c6:	00 c0       	rjmp	.+0      	; 0x17c8 <calculate_resonance+0x28>
    17c8:	00 00       	nop
	_delay_ms(200);
 	stop_driving = false;
    17ca:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <stop_driving>
 	while(!stop_driving){};
    17ce:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <stop_driving>
    17d2:	88 23       	and	r24, r24
    17d4:	e1 f3       	breq	.-8      	; 0x17ce <calculate_resonance+0x2e>

 	stop_motor();
    17d6:	0e 94 05 0b 	call	0x160a	; 0x160a <stop_motor>
// 	//adc_start(freq);
	//_delay_ms(500);
 
 	//calculate resonance
 	
	set_parameters(*freq, mfc);
    17da:	68 81       	ld	r22, Y
    17dc:	79 81       	ldd	r23, Y+1	; 0x01
    17de:	8a 81       	ldd	r24, Y+2	; 0x02
    17e0:	9b 81       	ldd	r25, Y+3	; 0x03
    17e2:	41 2f       	mov	r20, r17
    17e4:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
	
}
    17e8:	df 91       	pop	r29
    17ea:	cf 91       	pop	r28
    17ec:	1f 91       	pop	r17
    17ee:	08 95       	ret

000017f0 <__vector_7>:

//Timer used to time high side discharge times of P type MOSFETS
ISR(TIMER2_COMPA_vect){	
    17f0:	1f 92       	push	r1
    17f2:	0f 92       	push	r0
    17f4:	0f b6       	in	r0, 0x3f	; 63
    17f6:	0f 92       	push	r0
    17f8:	11 24       	eor	r1, r1
    17fa:	8f 93       	push	r24
    17fc:	ef 93       	push	r30
    17fe:	ff 93       	push	r31
	TIMSK2 &= ~(1 << OCIE2A);
    1800:	e0 e7       	ldi	r30, 0x70	; 112
    1802:	f0 e0       	ldi	r31, 0x00	; 0
    1804:	80 81       	ld	r24, Z
    1806:	8d 7f       	andi	r24, 0xFD	; 253
    1808:	80 83       	st	Z, r24
	if(isNegative == false){
    180a:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <isNegative>
    180e:	81 11       	cpse	r24, r1
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <__vector_7+0x26>
		SET_SW3;
    1812:	5f 9a       	sbi	0x0b, 7	; 11
    1814:	01 c0       	rjmp	.+2      	; 0x1818 <__vector_7+0x28>
	}
	else{
		SET_SW4;
    1816:	5e 9a       	sbi	0x0b, 6	; 11
	}
}
    1818:	ff 91       	pop	r31
    181a:	ef 91       	pop	r30
    181c:	8f 91       	pop	r24
    181e:	0f 90       	pop	r0
    1820:	0f be       	out	0x3f, r0	; 63
    1822:	0f 90       	pop	r0
    1824:	1f 90       	pop	r1
    1826:	18 95       	reti

00001828 <__vector_11>:

//Timer used to time on time of driver signal
ISR(TIMER1_COMPA_vect){
    1828:	1f 92       	push	r1
    182a:	0f 92       	push	r0
    182c:	0f b6       	in	r0, 0x3f	; 63
    182e:	0f 92       	push	r0
    1830:	11 24       	eor	r1, r1
    1832:	8f 93       	push	r24
    1834:	ef 93       	push	r30
    1836:	ff 93       	push	r31
	if(isNegative == false){
    1838:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <isNegative>
    183c:	81 11       	cpse	r24, r1
    183e:	02 c0       	rjmp	.+4      	; 0x1844 <__vector_11+0x1c>
		CLR_SW4;
    1840:	5e 98       	cbi	0x0b, 6	; 11
    1842:	01 c0       	rjmp	.+2      	; 0x1846 <__vector_11+0x1e>
	}
	else{
		CLR_SW3;
    1844:	5f 98       	cbi	0x0b, 7	; 11
	}
	TIMSK1 &= ~(1 << OCIE1A);
    1846:	ef e6       	ldi	r30, 0x6F	; 111
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	80 81       	ld	r24, Z
    184c:	8d 7f       	andi	r24, 0xFD	; 253
    184e:	80 83       	st	Z, r24
	TIMSK1 &= ~(1 << OCIE1B);
    1850:	80 81       	ld	r24, Z
    1852:	8b 7f       	andi	r24, 0xFB	; 251
    1854:	80 83       	st	Z, r24
	TIMSK2 |= (1 << OCIE2B);
    1856:	e0 e7       	ldi	r30, 0x70	; 112
    1858:	f0 e0       	ldi	r31, 0x00	; 0
    185a:	80 81       	ld	r24, Z
    185c:	84 60       	ori	r24, 0x04	; 4
    185e:	80 83       	st	Z, r24
	TCNT2 = 0;
    1860:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
}
    1864:	ff 91       	pop	r31
    1866:	ef 91       	pop	r30
    1868:	8f 91       	pop	r24
    186a:	0f 90       	pop	r0
    186c:	0f be       	out	0x3f, r0	; 63
    186e:	0f 90       	pop	r0
    1870:	1f 90       	pop	r1
    1872:	18 95       	reti

00001874 <__vector_8>:

//Timer used to time low side discharge times of N type MOSFETS
ISR(TIMER2_COMPB_vect){
    1874:	1f 92       	push	r1
    1876:	0f 92       	push	r0
    1878:	0f b6       	in	r0, 0x3f	; 63
    187a:	0f 92       	push	r0
    187c:	11 24       	eor	r1, r1
    187e:	2f 93       	push	r18
    1880:	3f 93       	push	r19
    1882:	4f 93       	push	r20
    1884:	5f 93       	push	r21
    1886:	6f 93       	push	r22
    1888:	7f 93       	push	r23
    188a:	8f 93       	push	r24
    188c:	9f 93       	push	r25
    188e:	af 93       	push	r26
    1890:	bf 93       	push	r27
    1892:	ef 93       	push	r30
    1894:	ff 93       	push	r31
	TIMSK2 &= ~(1 << OCIE2B);
    1896:	e0 e7       	ldi	r30, 0x70	; 112
    1898:	f0 e0       	ldi	r31, 0x00	; 0
    189a:	80 81       	ld	r24, Z
    189c:	8b 7f       	andi	r24, 0xFB	; 251
    189e:	80 83       	st	Z, r24
	if(mfr == 0){
    18a0:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <mfr>
    18a4:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <mfr+0x1>
    18a8:	89 2b       	or	r24, r25
    18aa:	19 f4       	brne	.+6      	; 0x18b2 <__vector_8+0x3e>
		stop_motor();		
    18ac:	0e 94 05 0b 	call	0x160a	; 0x160a <stop_motor>
    18b0:	42 c0       	rjmp	.+132    	; 0x1936 <__vector_8+0xc2>
	}
	else{
		if(isNegative == false){
    18b2:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <isNegative>
    18b6:	81 11       	cpse	r24, r1
    18b8:	05 c0       	rjmp	.+10     	; 0x18c4 <__vector_8+0x50>
			SET_SW2;
    18ba:	5d 9a       	sbi	0x0b, 5	; 11
			isNegative = true;
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <isNegative>
    18c2:	2d c0       	rjmp	.+90     	; 0x191e <__vector_8+0xaa>
		}
		else{
			SET_SW1;
    18c4:	28 9a       	sbi	0x05, 0	; 5
			isNegative = false;
    18c6:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <isNegative>
			if(resonance_counter < CYCLES){
    18ca:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <resonance_counter>
    18ce:	84 31       	cpi	r24, 0x14	; 20
    18d0:	e0 f4       	brcc	.+56     	; 0x190a <__vector_8+0x96>
				resonance_counter++;
    18d2:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <resonance_counter>
    18d6:	8f 5f       	subi	r24, 0xFF	; 255
    18d8:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <resonance_counter>
				if(change_duty == true){
    18dc:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <change_duty>
    18e0:	88 23       	and	r24, r24
    18e2:	c1 f0       	breq	.+48     	; 0x1914 <__vector_8+0xa0>
					OCR1A = t1_compare_a;
    18e4:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <t1_compare_a>
    18e8:	90 91 ce 03 	lds	r25, 0x03CE	; 0x8003ce <t1_compare_a+0x1>
    18ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    18f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
					OCR1B = t1_compare_b;
    18f4:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <t1_compare_b>
    18f8:	90 91 5a 02 	lds	r25, 0x025A	; 0x80025a <t1_compare_b+0x1>
    18fc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    1900:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
					change_duty = false;
    1904:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <change_duty>
    1908:	05 c0       	rjmp	.+10     	; 0x1914 <__vector_8+0xa0>
				}	
			}
			else{
				check_resonance = true;
    190a:	81 e0       	ldi	r24, 0x01	; 1
    190c:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <check_resonance>
				resonance_counter = 0;
    1910:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <resonance_counter>
			}
			if(force){
    1914:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <force>
    1918:	81 11       	cpse	r24, r1
				resonance_counter = 0;
    191a:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <resonance_counter>
			}
		}

		//Continue to drive next stage of H-bridge
		TIMSK1 |= (1 << OCIE1B);
    191e:	ef e6       	ldi	r30, 0x6F	; 111
    1920:	f0 e0       	ldi	r31, 0x00	; 0
    1922:	80 81       	ld	r24, Z
    1924:	84 60       	ori	r24, 0x04	; 4
    1926:	80 83       	st	Z, r24
		TIMSK1 |= (1 << OCIE1A);
    1928:	80 81       	ld	r24, Z
    192a:	82 60       	ori	r24, 0x02	; 2
    192c:	80 83       	st	Z, r24
		TCNT1 = 0;
    192e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1932:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	}
		
}
    1936:	ff 91       	pop	r31
    1938:	ef 91       	pop	r30
    193a:	bf 91       	pop	r27
    193c:	af 91       	pop	r26
    193e:	9f 91       	pop	r25
    1940:	8f 91       	pop	r24
    1942:	7f 91       	pop	r23
    1944:	6f 91       	pop	r22
    1946:	5f 91       	pop	r21
    1948:	4f 91       	pop	r20
    194a:	3f 91       	pop	r19
    194c:	2f 91       	pop	r18
    194e:	0f 90       	pop	r0
    1950:	0f be       	out	0x3f, r0	; 63
    1952:	0f 90       	pop	r0
    1954:	1f 90       	pop	r1
    1956:	18 95       	reti

00001958 <__vector_12>:

//Timer used to time on and off time of driver signal
ISR(TIMER1_COMPB_vect){
    1958:	1f 92       	push	r1
    195a:	0f 92       	push	r0
    195c:	0f b6       	in	r0, 0x3f	; 63
    195e:	0f 92       	push	r0
    1960:	11 24       	eor	r1, r1
    1962:	8f 93       	push	r24
    1964:	ef 93       	push	r30
    1966:	ff 93       	push	r31
	TIMSK1 &= ~(1 << OCIE1B);
    1968:	ef e6       	ldi	r30, 0x6F	; 111
    196a:	f0 e0       	ldi	r31, 0x00	; 0
    196c:	80 81       	ld	r24, Z
    196e:	8b 7f       	andi	r24, 0xFB	; 251
    1970:	80 83       	st	Z, r24
	if(isNegative == false){
    1972:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <isNegative>
    1976:	81 11       	cpse	r24, r1
    1978:	02 c0       	rjmp	.+4      	; 0x197e <__vector_12+0x26>
		CLR_SW1;
    197a:	28 98       	cbi	0x05, 0	; 5
    197c:	01 c0       	rjmp	.+2      	; 0x1980 <__vector_12+0x28>
	}
	else{
		CLR_SW2;
    197e:	5d 98       	cbi	0x0b, 5	; 11
	}
	
	TIMSK2 |= (1 << OCIE2A);
    1980:	e0 e7       	ldi	r30, 0x70	; 112
    1982:	f0 e0       	ldi	r31, 0x00	; 0
    1984:	80 81       	ld	r24, Z
    1986:	82 60       	ori	r24, 0x02	; 2
    1988:	80 83       	st	Z, r24
	TCNT2 = 0;
    198a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	stop_driving = true;
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	80 93 ca 03 	sts	0x03CA, r24	; 0x8003ca <stop_driving>
}
    1994:	ff 91       	pop	r31
    1996:	ef 91       	pop	r30
    1998:	8f 91       	pop	r24
    199a:	0f 90       	pop	r0
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	0f 90       	pop	r0
    19a0:	1f 90       	pop	r1
    19a2:	18 95       	reti

000019a4 <project_skywalker>:

//Function to play the Imperial March
void project_skywalker(){
	set_parameters(CLOW, x);
    19a4:	46 e9       	ldi	r20, 0x96	; 150
    19a6:	60 e0       	ldi	r22, 0x00	; 0
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	82 e8       	ldi	r24, 0x82	; 130
    19ac:	93 e4       	ldi	r25, 0x43	; 67
    19ae:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    19b2:	2f ef       	ldi	r18, 0xFF	; 255
    19b4:	8b ea       	ldi	r24, 0xAB	; 171
    19b6:	9d e0       	ldi	r25, 0x0D	; 13
    19b8:	21 50       	subi	r18, 0x01	; 1
    19ba:	80 40       	sbci	r24, 0x00	; 0
    19bc:	90 40       	sbci	r25, 0x00	; 0
    19be:	e1 f7       	brne	.-8      	; 0x19b8 <project_skywalker+0x14>
    19c0:	00 c0       	rjmp	.+0      	; 0x19c2 <project_skywalker+0x1e>
    19c2:	00 00       	nop
	_delay_ms(560);
	set_parameters(CLOW, 1);
    19c4:	41 e0       	ldi	r20, 0x01	; 1
    19c6:	60 e0       	ldi	r22, 0x00	; 0
    19c8:	70 e0       	ldi	r23, 0x00	; 0
    19ca:	82 e8       	ldi	r24, 0x82	; 130
    19cc:	93 e4       	ldi	r25, 0x43	; 67
    19ce:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    19d2:	2f ef       	ldi	r18, 0xFF	; 255
    19d4:	80 e7       	ldi	r24, 0x70	; 112
    19d6:	92 e0       	ldi	r25, 0x02	; 2
    19d8:	21 50       	subi	r18, 0x01	; 1
    19da:	80 40       	sbci	r24, 0x00	; 0
    19dc:	90 40       	sbci	r25, 0x00	; 0
    19de:	e1 f7       	brne	.-8      	; 0x19d8 <project_skywalker+0x34>
    19e0:	00 c0       	rjmp	.+0      	; 0x19e2 <project_skywalker+0x3e>
    19e2:	00 00       	nop
	_delay_ms(100);
	set_parameters(CLOW, x);
    19e4:	46 e9       	ldi	r20, 0x96	; 150
    19e6:	60 e0       	ldi	r22, 0x00	; 0
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	82 e8       	ldi	r24, 0x82	; 130
    19ec:	93 e4       	ldi	r25, 0x43	; 67
    19ee:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    19f2:	2f ef       	ldi	r18, 0xFF	; 255
    19f4:	8b ea       	ldi	r24, 0xAB	; 171
    19f6:	9d e0       	ldi	r25, 0x0D	; 13
    19f8:	21 50       	subi	r18, 0x01	; 1
    19fa:	80 40       	sbci	r24, 0x00	; 0
    19fc:	90 40       	sbci	r25, 0x00	; 0
    19fe:	e1 f7       	brne	.-8      	; 0x19f8 <project_skywalker+0x54>
    1a00:	00 c0       	rjmp	.+0      	; 0x1a02 <project_skywalker+0x5e>
    1a02:	00 00       	nop
	_delay_ms(560);
	set_parameters(CLOW, 1);
    1a04:	41 e0       	ldi	r20, 0x01	; 1
    1a06:	60 e0       	ldi	r22, 0x00	; 0
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	82 e8       	ldi	r24, 0x82	; 130
    1a0c:	93 e4       	ldi	r25, 0x43	; 67
    1a0e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1a12:	2f ef       	ldi	r18, 0xFF	; 255
    1a14:	80 e7       	ldi	r24, 0x70	; 112
    1a16:	92 e0       	ldi	r25, 0x02	; 2
    1a18:	21 50       	subi	r18, 0x01	; 1
    1a1a:	80 40       	sbci	r24, 0x00	; 0
    1a1c:	90 40       	sbci	r25, 0x00	; 0
    1a1e:	e1 f7       	brne	.-8      	; 0x1a18 <project_skywalker+0x74>
    1a20:	00 c0       	rjmp	.+0      	; 0x1a22 <project_skywalker+0x7e>
    1a22:	00 00       	nop
	_delay_ms(100);
	set_parameters(CLOW, x);
    1a24:	46 e9       	ldi	r20, 0x96	; 150
    1a26:	60 e0       	ldi	r22, 0x00	; 0
    1a28:	70 e0       	ldi	r23, 0x00	; 0
    1a2a:	82 e8       	ldi	r24, 0x82	; 130
    1a2c:	93 e4       	ldi	r25, 0x43	; 67
    1a2e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1a32:	2f ef       	ldi	r18, 0xFF	; 255
    1a34:	8b ea       	ldi	r24, 0xAB	; 171
    1a36:	9d e0       	ldi	r25, 0x0D	; 13
    1a38:	21 50       	subi	r18, 0x01	; 1
    1a3a:	80 40       	sbci	r24, 0x00	; 0
    1a3c:	90 40       	sbci	r25, 0x00	; 0
    1a3e:	e1 f7       	brne	.-8      	; 0x1a38 <project_skywalker+0x94>
    1a40:	00 c0       	rjmp	.+0      	; 0x1a42 <project_skywalker+0x9e>
    1a42:	00 00       	nop
	_delay_ms(560);
	set_parameters(CLOW, 1);
    1a44:	41 e0       	ldi	r20, 0x01	; 1
    1a46:	60 e0       	ldi	r22, 0x00	; 0
    1a48:	70 e0       	ldi	r23, 0x00	; 0
    1a4a:	82 e8       	ldi	r24, 0x82	; 130
    1a4c:	93 e4       	ldi	r25, 0x43	; 67
    1a4e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1a52:	2f ef       	ldi	r18, 0xFF	; 255
    1a54:	80 e7       	ldi	r24, 0x70	; 112
    1a56:	92 e0       	ldi	r25, 0x02	; 2
    1a58:	21 50       	subi	r18, 0x01	; 1
    1a5a:	80 40       	sbci	r24, 0x00	; 0
    1a5c:	90 40       	sbci	r25, 0x00	; 0
    1a5e:	e1 f7       	brne	.-8      	; 0x1a58 <project_skywalker+0xb4>
    1a60:	00 c0       	rjmp	.+0      	; 0x1a62 <project_skywalker+0xbe>
    1a62:	00 00       	nop
	_delay_ms(100);
	set_parameters(AFLATLOW, x);
    1a64:	46 e9       	ldi	r20, 0x96	; 150
    1a66:	60 e0       	ldi	r22, 0x00	; 0
    1a68:	70 e0       	ldi	r23, 0x00	; 0
    1a6a:	80 e5       	ldi	r24, 0x50	; 80
    1a6c:	93 e4       	ldi	r25, 0x43	; 67
    1a6e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1a72:	2f ef       	ldi	r18, 0xFF	; 255
    1a74:	80 e4       	ldi	r24, 0x40	; 64
    1a76:	9a e0       	ldi	r25, 0x0A	; 10
    1a78:	21 50       	subi	r18, 0x01	; 1
    1a7a:	80 40       	sbci	r24, 0x00	; 0
    1a7c:	90 40       	sbci	r25, 0x00	; 0
    1a7e:	e1 f7       	brne	.-8      	; 0x1a78 <project_skywalker+0xd4>
    1a80:	00 c0       	rjmp	.+0      	; 0x1a82 <project_skywalker+0xde>
    1a82:	00 00       	nop
	_delay_ms(420);
	set_parameters(AFLATLOW, 1);
    1a84:	41 e0       	ldi	r20, 0x01	; 1
    1a86:	60 e0       	ldi	r22, 0x00	; 0
    1a88:	70 e0       	ldi	r23, 0x00	; 0
    1a8a:	80 e5       	ldi	r24, 0x50	; 80
    1a8c:	93 e4       	ldi	r25, 0x43	; 67
    1a8e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1a92:	2f ef       	ldi	r18, 0xFF	; 255
    1a94:	80 e7       	ldi	r24, 0x70	; 112
    1a96:	92 e0       	ldi	r25, 0x02	; 2
    1a98:	21 50       	subi	r18, 0x01	; 1
    1a9a:	80 40       	sbci	r24, 0x00	; 0
    1a9c:	90 40       	sbci	r25, 0x00	; 0
    1a9e:	e1 f7       	brne	.-8      	; 0x1a98 <project_skywalker+0xf4>
    1aa0:	00 c0       	rjmp	.+0      	; 0x1aa2 <project_skywalker+0xfe>
    1aa2:	00 00       	nop
	_delay_ms(100);
	set_parameters(E, x);
    1aa4:	46 e9       	ldi	r20, 0x96	; 150
    1aa6:	60 e0       	ldi	r22, 0x00	; 0
    1aa8:	70 e0       	ldi	r23, 0x00	; 0
    1aaa:	84 ea       	ldi	r24, 0xA4	; 164
    1aac:	93 e4       	ldi	r25, 0x43	; 67
    1aae:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1ab2:	2f ef       	ldi	r18, 0xFF	; 255
    1ab4:	8a e6       	ldi	r24, 0x6A	; 106
    1ab6:	93 e0       	ldi	r25, 0x03	; 3
    1ab8:	21 50       	subi	r18, 0x01	; 1
    1aba:	80 40       	sbci	r24, 0x00	; 0
    1abc:	90 40       	sbci	r25, 0x00	; 0
    1abe:	e1 f7       	brne	.-8      	; 0x1ab8 <project_skywalker+0x114>
    1ac0:	00 c0       	rjmp	.+0      	; 0x1ac2 <project_skywalker+0x11e>
    1ac2:	00 00       	nop
	_delay_ms(140);
	set_parameters(E, 1);
    1ac4:	41 e0       	ldi	r20, 0x01	; 1
    1ac6:	60 e0       	ldi	r22, 0x00	; 0
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	84 ea       	ldi	r24, 0xA4	; 164
    1acc:	93 e4       	ldi	r25, 0x43	; 67
    1ace:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1ad2:	2f ef       	ldi	r18, 0xFF	; 255
    1ad4:	80 e7       	ldi	r24, 0x70	; 112
    1ad6:	92 e0       	ldi	r25, 0x02	; 2
    1ad8:	21 50       	subi	r18, 0x01	; 1
    1ada:	80 40       	sbci	r24, 0x00	; 0
    1adc:	90 40       	sbci	r25, 0x00	; 0
    1ade:	e1 f7       	brne	.-8      	; 0x1ad8 <project_skywalker+0x134>
    1ae0:	00 c0       	rjmp	.+0      	; 0x1ae2 <project_skywalker+0x13e>
    1ae2:	00 00       	nop
	_delay_ms(100);
	set_parameters(CLOW, x);
    1ae4:	46 e9       	ldi	r20, 0x96	; 150
    1ae6:	60 e0       	ldi	r22, 0x00	; 0
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	82 e8       	ldi	r24, 0x82	; 130
    1aec:	93 e4       	ldi	r25, 0x43	; 67
    1aee:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1af2:	2f ef       	ldi	r18, 0xFF	; 255
    1af4:	8b ea       	ldi	r24, 0xAB	; 171
    1af6:	9d e0       	ldi	r25, 0x0D	; 13
    1af8:	21 50       	subi	r18, 0x01	; 1
    1afa:	80 40       	sbci	r24, 0x00	; 0
    1afc:	90 40       	sbci	r25, 0x00	; 0
    1afe:	e1 f7       	brne	.-8      	; 0x1af8 <project_skywalker+0x154>
    1b00:	00 c0       	rjmp	.+0      	; 0x1b02 <project_skywalker+0x15e>
    1b02:	00 00       	nop
	_delay_ms(560);
	set_parameters(CLOW, 1);
    1b04:	41 e0       	ldi	r20, 0x01	; 1
    1b06:	60 e0       	ldi	r22, 0x00	; 0
    1b08:	70 e0       	ldi	r23, 0x00	; 0
    1b0a:	82 e8       	ldi	r24, 0x82	; 130
    1b0c:	93 e4       	ldi	r25, 0x43	; 67
    1b0e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1b12:	2f ef       	ldi	r18, 0xFF	; 255
    1b14:	80 e7       	ldi	r24, 0x70	; 112
    1b16:	92 e0       	ldi	r25, 0x02	; 2
    1b18:	21 50       	subi	r18, 0x01	; 1
    1b1a:	80 40       	sbci	r24, 0x00	; 0
    1b1c:	90 40       	sbci	r25, 0x00	; 0
    1b1e:	e1 f7       	brne	.-8      	; 0x1b18 <project_skywalker+0x174>
    1b20:	00 c0       	rjmp	.+0      	; 0x1b22 <project_skywalker+0x17e>
    1b22:	00 00       	nop
	_delay_ms(100);
	set_parameters(AFLATLOW, x);
    1b24:	46 e9       	ldi	r20, 0x96	; 150
    1b26:	60 e0       	ldi	r22, 0x00	; 0
    1b28:	70 e0       	ldi	r23, 0x00	; 0
    1b2a:	80 e5       	ldi	r24, 0x50	; 80
    1b2c:	93 e4       	ldi	r25, 0x43	; 67
    1b2e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1b32:	2f ef       	ldi	r18, 0xFF	; 255
    1b34:	80 e4       	ldi	r24, 0x40	; 64
    1b36:	9a e0       	ldi	r25, 0x0A	; 10
    1b38:	21 50       	subi	r18, 0x01	; 1
    1b3a:	80 40       	sbci	r24, 0x00	; 0
    1b3c:	90 40       	sbci	r25, 0x00	; 0
    1b3e:	e1 f7       	brne	.-8      	; 0x1b38 <project_skywalker+0x194>
    1b40:	00 c0       	rjmp	.+0      	; 0x1b42 <project_skywalker+0x19e>
    1b42:	00 00       	nop
	_delay_ms(420);
	set_parameters(AFLATLOW, 1);
    1b44:	41 e0       	ldi	r20, 0x01	; 1
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	70 e0       	ldi	r23, 0x00	; 0
    1b4a:	80 e5       	ldi	r24, 0x50	; 80
    1b4c:	93 e4       	ldi	r25, 0x43	; 67
    1b4e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1b52:	2f ef       	ldi	r18, 0xFF	; 255
    1b54:	80 e7       	ldi	r24, 0x70	; 112
    1b56:	92 e0       	ldi	r25, 0x02	; 2
    1b58:	21 50       	subi	r18, 0x01	; 1
    1b5a:	80 40       	sbci	r24, 0x00	; 0
    1b5c:	90 40       	sbci	r25, 0x00	; 0
    1b5e:	e1 f7       	brne	.-8      	; 0x1b58 <project_skywalker+0x1b4>
    1b60:	00 c0       	rjmp	.+0      	; 0x1b62 <project_skywalker+0x1be>
    1b62:	00 00       	nop
	_delay_ms(100);
	set_parameters(E, x);
    1b64:	46 e9       	ldi	r20, 0x96	; 150
    1b66:	60 e0       	ldi	r22, 0x00	; 0
    1b68:	70 e0       	ldi	r23, 0x00	; 0
    1b6a:	84 ea       	ldi	r24, 0xA4	; 164
    1b6c:	93 e4       	ldi	r25, 0x43	; 67
    1b6e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1b72:	2f ef       	ldi	r18, 0xFF	; 255
    1b74:	8a e6       	ldi	r24, 0x6A	; 106
    1b76:	93 e0       	ldi	r25, 0x03	; 3
    1b78:	21 50       	subi	r18, 0x01	; 1
    1b7a:	80 40       	sbci	r24, 0x00	; 0
    1b7c:	90 40       	sbci	r25, 0x00	; 0
    1b7e:	e1 f7       	brne	.-8      	; 0x1b78 <project_skywalker+0x1d4>
    1b80:	00 c0       	rjmp	.+0      	; 0x1b82 <project_skywalker+0x1de>
    1b82:	00 00       	nop
	_delay_ms(140);
	set_parameters(E, 1);
    1b84:	41 e0       	ldi	r20, 0x01	; 1
    1b86:	60 e0       	ldi	r22, 0x00	; 0
    1b88:	70 e0       	ldi	r23, 0x00	; 0
    1b8a:	84 ea       	ldi	r24, 0xA4	; 164
    1b8c:	93 e4       	ldi	r25, 0x43	; 67
    1b8e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1b92:	2f ef       	ldi	r18, 0xFF	; 255
    1b94:	80 e7       	ldi	r24, 0x70	; 112
    1b96:	92 e0       	ldi	r25, 0x02	; 2
    1b98:	21 50       	subi	r18, 0x01	; 1
    1b9a:	80 40       	sbci	r24, 0x00	; 0
    1b9c:	90 40       	sbci	r25, 0x00	; 0
    1b9e:	e1 f7       	brne	.-8      	; 0x1b98 <project_skywalker+0x1f4>
    1ba0:	00 c0       	rjmp	.+0      	; 0x1ba2 <project_skywalker+0x1fe>
    1ba2:	00 00       	nop
	_delay_ms(100);
	set_parameters(CLOW, x);
    1ba4:	46 e9       	ldi	r20, 0x96	; 150
    1ba6:	60 e0       	ldi	r22, 0x00	; 0
    1ba8:	70 e0       	ldi	r23, 0x00	; 0
    1baa:	82 e8       	ldi	r24, 0x82	; 130
    1bac:	93 e4       	ldi	r25, 0x43	; 67
    1bae:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1bb2:	2f ef       	ldi	r18, 0xFF	; 255
    1bb4:	87 e5       	ldi	r24, 0x57	; 87
    1bb6:	9b e1       	ldi	r25, 0x1B	; 27
    1bb8:	21 50       	subi	r18, 0x01	; 1
    1bba:	80 40       	sbci	r24, 0x00	; 0
    1bbc:	90 40       	sbci	r25, 0x00	; 0
    1bbe:	e1 f7       	brne	.-8      	; 0x1bb8 <project_skywalker+0x214>
    1bc0:	00 c0       	rjmp	.+0      	; 0x1bc2 <project_skywalker+0x21e>
    1bc2:	00 00       	nop
	_delay_ms(1120);
	set_parameters(CLOW, 1);
    1bc4:	41 e0       	ldi	r20, 0x01	; 1
    1bc6:	60 e0       	ldi	r22, 0x00	; 0
    1bc8:	70 e0       	ldi	r23, 0x00	; 0
    1bca:	82 e8       	ldi	r24, 0x82	; 130
    1bcc:	93 e4       	ldi	r25, 0x43	; 67
    1bce:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1bd2:	2f ef       	ldi	r18, 0xFF	; 255
    1bd4:	80 e7       	ldi	r24, 0x70	; 112
    1bd6:	92 e0       	ldi	r25, 0x02	; 2
    1bd8:	21 50       	subi	r18, 0x01	; 1
    1bda:	80 40       	sbci	r24, 0x00	; 0
    1bdc:	90 40       	sbci	r25, 0x00	; 0
    1bde:	e1 f7       	brne	.-8      	; 0x1bd8 <project_skywalker+0x234>
    1be0:	00 c0       	rjmp	.+0      	; 0x1be2 <project_skywalker+0x23e>
    1be2:	00 00       	nop
	_delay_ms(100);

	set_parameters(G, x);
    1be4:	46 e9       	ldi	r20, 0x96	; 150
    1be6:	60 e0       	ldi	r22, 0x00	; 0
    1be8:	70 e8       	ldi	r23, 0x80	; 128
    1bea:	84 ec       	ldi	r24, 0xC4	; 196
    1bec:	93 e4       	ldi	r25, 0x43	; 67
    1bee:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1bf2:	2f ef       	ldi	r18, 0xFF	; 255
    1bf4:	8b ea       	ldi	r24, 0xAB	; 171
    1bf6:	9d e0       	ldi	r25, 0x0D	; 13
    1bf8:	21 50       	subi	r18, 0x01	; 1
    1bfa:	80 40       	sbci	r24, 0x00	; 0
    1bfc:	90 40       	sbci	r25, 0x00	; 0
    1bfe:	e1 f7       	brne	.-8      	; 0x1bf8 <project_skywalker+0x254>
    1c00:	00 c0       	rjmp	.+0      	; 0x1c02 <project_skywalker+0x25e>
    1c02:	00 00       	nop
	_delay_ms(560);
	set_parameters(G, 1);
    1c04:	41 e0       	ldi	r20, 0x01	; 1
    1c06:	60 e0       	ldi	r22, 0x00	; 0
    1c08:	70 e8       	ldi	r23, 0x80	; 128
    1c0a:	84 ec       	ldi	r24, 0xC4	; 196
    1c0c:	93 e4       	ldi	r25, 0x43	; 67
    1c0e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1c12:	2f ef       	ldi	r18, 0xFF	; 255
    1c14:	80 e7       	ldi	r24, 0x70	; 112
    1c16:	92 e0       	ldi	r25, 0x02	; 2
    1c18:	21 50       	subi	r18, 0x01	; 1
    1c1a:	80 40       	sbci	r24, 0x00	; 0
    1c1c:	90 40       	sbci	r25, 0x00	; 0
    1c1e:	e1 f7       	brne	.-8      	; 0x1c18 <project_skywalker+0x274>
    1c20:	00 c0       	rjmp	.+0      	; 0x1c22 <project_skywalker+0x27e>
    1c22:	00 00       	nop
	_delay_ms(100);
	set_parameters(G, x);
    1c24:	46 e9       	ldi	r20, 0x96	; 150
    1c26:	60 e0       	ldi	r22, 0x00	; 0
    1c28:	70 e8       	ldi	r23, 0x80	; 128
    1c2a:	84 ec       	ldi	r24, 0xC4	; 196
    1c2c:	93 e4       	ldi	r25, 0x43	; 67
    1c2e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1c32:	2f ef       	ldi	r18, 0xFF	; 255
    1c34:	8b ea       	ldi	r24, 0xAB	; 171
    1c36:	9d e0       	ldi	r25, 0x0D	; 13
    1c38:	21 50       	subi	r18, 0x01	; 1
    1c3a:	80 40       	sbci	r24, 0x00	; 0
    1c3c:	90 40       	sbci	r25, 0x00	; 0
    1c3e:	e1 f7       	brne	.-8      	; 0x1c38 <project_skywalker+0x294>
    1c40:	00 c0       	rjmp	.+0      	; 0x1c42 <project_skywalker+0x29e>
    1c42:	00 00       	nop
	_delay_ms(560);
	set_parameters(G, 1);
    1c44:	41 e0       	ldi	r20, 0x01	; 1
    1c46:	60 e0       	ldi	r22, 0x00	; 0
    1c48:	70 e8       	ldi	r23, 0x80	; 128
    1c4a:	84 ec       	ldi	r24, 0xC4	; 196
    1c4c:	93 e4       	ldi	r25, 0x43	; 67
    1c4e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1c52:	2f ef       	ldi	r18, 0xFF	; 255
    1c54:	80 e7       	ldi	r24, 0x70	; 112
    1c56:	92 e0       	ldi	r25, 0x02	; 2
    1c58:	21 50       	subi	r18, 0x01	; 1
    1c5a:	80 40       	sbci	r24, 0x00	; 0
    1c5c:	90 40       	sbci	r25, 0x00	; 0
    1c5e:	e1 f7       	brne	.-8      	; 0x1c58 <project_skywalker+0x2b4>
    1c60:	00 c0       	rjmp	.+0      	; 0x1c62 <project_skywalker+0x2be>
    1c62:	00 00       	nop
	_delay_ms(100);
	set_parameters(G, x);
    1c64:	46 e9       	ldi	r20, 0x96	; 150
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	70 e8       	ldi	r23, 0x80	; 128
    1c6a:	84 ec       	ldi	r24, 0xC4	; 196
    1c6c:	93 e4       	ldi	r25, 0x43	; 67
    1c6e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1c72:	2f ef       	ldi	r18, 0xFF	; 255
    1c74:	8b ea       	ldi	r24, 0xAB	; 171
    1c76:	9d e0       	ldi	r25, 0x0D	; 13
    1c78:	21 50       	subi	r18, 0x01	; 1
    1c7a:	80 40       	sbci	r24, 0x00	; 0
    1c7c:	90 40       	sbci	r25, 0x00	; 0
    1c7e:	e1 f7       	brne	.-8      	; 0x1c78 <project_skywalker+0x2d4>
    1c80:	00 c0       	rjmp	.+0      	; 0x1c82 <project_skywalker+0x2de>
    1c82:	00 00       	nop
	_delay_ms(560);
	set_parameters(G, 1);
    1c84:	41 e0       	ldi	r20, 0x01	; 1
    1c86:	60 e0       	ldi	r22, 0x00	; 0
    1c88:	70 e8       	ldi	r23, 0x80	; 128
    1c8a:	84 ec       	ldi	r24, 0xC4	; 196
    1c8c:	93 e4       	ldi	r25, 0x43	; 67
    1c8e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1c92:	2f ef       	ldi	r18, 0xFF	; 255
    1c94:	80 e7       	ldi	r24, 0x70	; 112
    1c96:	92 e0       	ldi	r25, 0x02	; 2
    1c98:	21 50       	subi	r18, 0x01	; 1
    1c9a:	80 40       	sbci	r24, 0x00	; 0
    1c9c:	90 40       	sbci	r25, 0x00	; 0
    1c9e:	e1 f7       	brne	.-8      	; 0x1c98 <project_skywalker+0x2f4>
    1ca0:	00 c0       	rjmp	.+0      	; 0x1ca2 <project_skywalker+0x2fe>
    1ca2:	00 00       	nop
	_delay_ms(100);
	set_parameters(AFLAT, x);
    1ca4:	46 e9       	ldi	r20, 0x96	; 150
    1ca6:	60 e0       	ldi	r22, 0x00	; 0
    1ca8:	70 e0       	ldi	r23, 0x00	; 0
    1caa:	80 ed       	ldi	r24, 0xD0	; 208
    1cac:	93 e4       	ldi	r25, 0x43	; 67
    1cae:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1cb2:	2f ef       	ldi	r18, 0xFF	; 255
    1cb4:	80 e4       	ldi	r24, 0x40	; 64
    1cb6:	9a e0       	ldi	r25, 0x0A	; 10
    1cb8:	21 50       	subi	r18, 0x01	; 1
    1cba:	80 40       	sbci	r24, 0x00	; 0
    1cbc:	90 40       	sbci	r25, 0x00	; 0
    1cbe:	e1 f7       	brne	.-8      	; 0x1cb8 <project_skywalker+0x314>
    1cc0:	00 c0       	rjmp	.+0      	; 0x1cc2 <project_skywalker+0x31e>
    1cc2:	00 00       	nop
	_delay_ms(420);
	set_parameters(AFLAT, 1);
    1cc4:	41 e0       	ldi	r20, 0x01	; 1
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	80 ed       	ldi	r24, 0xD0	; 208
    1ccc:	93 e4       	ldi	r25, 0x43	; 67
    1cce:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1cd2:	2f ef       	ldi	r18, 0xFF	; 255
    1cd4:	80 e7       	ldi	r24, 0x70	; 112
    1cd6:	92 e0       	ldi	r25, 0x02	; 2
    1cd8:	21 50       	subi	r18, 0x01	; 1
    1cda:	80 40       	sbci	r24, 0x00	; 0
    1cdc:	90 40       	sbci	r25, 0x00	; 0
    1cde:	e1 f7       	brne	.-8      	; 0x1cd8 <project_skywalker+0x334>
    1ce0:	00 c0       	rjmp	.+0      	; 0x1ce2 <project_skywalker+0x33e>
    1ce2:	00 00       	nop
	_delay_ms(100);
	set_parameters(E, x);
    1ce4:	46 e9       	ldi	r20, 0x96	; 150
    1ce6:	60 e0       	ldi	r22, 0x00	; 0
    1ce8:	70 e0       	ldi	r23, 0x00	; 0
    1cea:	84 ea       	ldi	r24, 0xA4	; 164
    1cec:	93 e4       	ldi	r25, 0x43	; 67
    1cee:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1cf2:	2f ef       	ldi	r18, 0xFF	; 255
    1cf4:	8a e6       	ldi	r24, 0x6A	; 106
    1cf6:	93 e0       	ldi	r25, 0x03	; 3
    1cf8:	21 50       	subi	r18, 0x01	; 1
    1cfa:	80 40       	sbci	r24, 0x00	; 0
    1cfc:	90 40       	sbci	r25, 0x00	; 0
    1cfe:	e1 f7       	brne	.-8      	; 0x1cf8 <project_skywalker+0x354>
    1d00:	00 c0       	rjmp	.+0      	; 0x1d02 <project_skywalker+0x35e>
    1d02:	00 00       	nop
	_delay_ms(140);
	set_parameters(E, 1);
    1d04:	41 e0       	ldi	r20, 0x01	; 1
    1d06:	60 e0       	ldi	r22, 0x00	; 0
    1d08:	70 e0       	ldi	r23, 0x00	; 0
    1d0a:	84 ea       	ldi	r24, 0xA4	; 164
    1d0c:	93 e4       	ldi	r25, 0x43	; 67
    1d0e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1d12:	2f ef       	ldi	r18, 0xFF	; 255
    1d14:	80 e7       	ldi	r24, 0x70	; 112
    1d16:	92 e0       	ldi	r25, 0x02	; 2
    1d18:	21 50       	subi	r18, 0x01	; 1
    1d1a:	80 40       	sbci	r24, 0x00	; 0
    1d1c:	90 40       	sbci	r25, 0x00	; 0
    1d1e:	e1 f7       	brne	.-8      	; 0x1d18 <project_skywalker+0x374>
    1d20:	00 c0       	rjmp	.+0      	; 0x1d22 <project_skywalker+0x37e>
    1d22:	00 00       	nop
	_delay_ms(100);
	set_parameters(B, x);
    1d24:	46 e9       	ldi	r20, 0x96	; 150
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	86 e7       	ldi	r24, 0x76	; 118
    1d2c:	93 e4       	ldi	r25, 0x43	; 67
    1d2e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1d32:	2f ef       	ldi	r18, 0xFF	; 255
    1d34:	8b ea       	ldi	r24, 0xAB	; 171
    1d36:	9d e0       	ldi	r25, 0x0D	; 13
    1d38:	21 50       	subi	r18, 0x01	; 1
    1d3a:	80 40       	sbci	r24, 0x00	; 0
    1d3c:	90 40       	sbci	r25, 0x00	; 0
    1d3e:	e1 f7       	brne	.-8      	; 0x1d38 <project_skywalker+0x394>
    1d40:	00 c0       	rjmp	.+0      	; 0x1d42 <project_skywalker+0x39e>
    1d42:	00 00       	nop
	_delay_ms(560);
	set_parameters(B, 1);
    1d44:	41 e0       	ldi	r20, 0x01	; 1
    1d46:	60 e0       	ldi	r22, 0x00	; 0
    1d48:	70 e0       	ldi	r23, 0x00	; 0
    1d4a:	86 e7       	ldi	r24, 0x76	; 118
    1d4c:	93 e4       	ldi	r25, 0x43	; 67
    1d4e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1d52:	2f ef       	ldi	r18, 0xFF	; 255
    1d54:	80 e7       	ldi	r24, 0x70	; 112
    1d56:	92 e0       	ldi	r25, 0x02	; 2
    1d58:	21 50       	subi	r18, 0x01	; 1
    1d5a:	80 40       	sbci	r24, 0x00	; 0
    1d5c:	90 40       	sbci	r25, 0x00	; 0
    1d5e:	e1 f7       	brne	.-8      	; 0x1d58 <project_skywalker+0x3b4>
    1d60:	00 c0       	rjmp	.+0      	; 0x1d62 <project_skywalker+0x3be>
    1d62:	00 00       	nop
	_delay_ms(100);
	set_parameters(AFLATLOW, x);
    1d64:	46 e9       	ldi	r20, 0x96	; 150
    1d66:	60 e0       	ldi	r22, 0x00	; 0
    1d68:	70 e0       	ldi	r23, 0x00	; 0
    1d6a:	80 e5       	ldi	r24, 0x50	; 80
    1d6c:	93 e4       	ldi	r25, 0x43	; 67
    1d6e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1d72:	2f ef       	ldi	r18, 0xFF	; 255
    1d74:	80 e4       	ldi	r24, 0x40	; 64
    1d76:	9a e0       	ldi	r25, 0x0A	; 10
    1d78:	21 50       	subi	r18, 0x01	; 1
    1d7a:	80 40       	sbci	r24, 0x00	; 0
    1d7c:	90 40       	sbci	r25, 0x00	; 0
    1d7e:	e1 f7       	brne	.-8      	; 0x1d78 <project_skywalker+0x3d4>
    1d80:	00 c0       	rjmp	.+0      	; 0x1d82 <project_skywalker+0x3de>
    1d82:	00 00       	nop
	_delay_ms(420);
	set_parameters(AFLATLOW, 1);
    1d84:	41 e0       	ldi	r20, 0x01	; 1
    1d86:	60 e0       	ldi	r22, 0x00	; 0
    1d88:	70 e0       	ldi	r23, 0x00	; 0
    1d8a:	80 e5       	ldi	r24, 0x50	; 80
    1d8c:	93 e4       	ldi	r25, 0x43	; 67
    1d8e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1d92:	2f ef       	ldi	r18, 0xFF	; 255
    1d94:	80 e7       	ldi	r24, 0x70	; 112
    1d96:	92 e0       	ldi	r25, 0x02	; 2
    1d98:	21 50       	subi	r18, 0x01	; 1
    1d9a:	80 40       	sbci	r24, 0x00	; 0
    1d9c:	90 40       	sbci	r25, 0x00	; 0
    1d9e:	e1 f7       	brne	.-8      	; 0x1d98 <project_skywalker+0x3f4>
    1da0:	00 c0       	rjmp	.+0      	; 0x1da2 <project_skywalker+0x3fe>
    1da2:	00 00       	nop
	_delay_ms(100);
	set_parameters(E, x);
    1da4:	46 e9       	ldi	r20, 0x96	; 150
    1da6:	60 e0       	ldi	r22, 0x00	; 0
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	84 ea       	ldi	r24, 0xA4	; 164
    1dac:	93 e4       	ldi	r25, 0x43	; 67
    1dae:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1db2:	2f ef       	ldi	r18, 0xFF	; 255
    1db4:	8a e6       	ldi	r24, 0x6A	; 106
    1db6:	93 e0       	ldi	r25, 0x03	; 3
    1db8:	21 50       	subi	r18, 0x01	; 1
    1dba:	80 40       	sbci	r24, 0x00	; 0
    1dbc:	90 40       	sbci	r25, 0x00	; 0
    1dbe:	e1 f7       	brne	.-8      	; 0x1db8 <project_skywalker+0x414>
    1dc0:	00 c0       	rjmp	.+0      	; 0x1dc2 <project_skywalker+0x41e>
    1dc2:	00 00       	nop
	_delay_ms(140);
	set_parameters(E, 1);
    1dc4:	41 e0       	ldi	r20, 0x01	; 1
    1dc6:	60 e0       	ldi	r22, 0x00	; 0
    1dc8:	70 e0       	ldi	r23, 0x00	; 0
    1dca:	84 ea       	ldi	r24, 0xA4	; 164
    1dcc:	93 e4       	ldi	r25, 0x43	; 67
    1dce:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1dd2:	2f ef       	ldi	r18, 0xFF	; 255
    1dd4:	80 e7       	ldi	r24, 0x70	; 112
    1dd6:	92 e0       	ldi	r25, 0x02	; 2
    1dd8:	21 50       	subi	r18, 0x01	; 1
    1dda:	80 40       	sbci	r24, 0x00	; 0
    1ddc:	90 40       	sbci	r25, 0x00	; 0
    1dde:	e1 f7       	brne	.-8      	; 0x1dd8 <project_skywalker+0x434>
    1de0:	00 c0       	rjmp	.+0      	; 0x1de2 <project_skywalker+0x43e>
    1de2:	00 00       	nop
	_delay_ms(100);
	set_parameters(CLOW, x);
    1de4:	46 e9       	ldi	r20, 0x96	; 150
    1de6:	60 e0       	ldi	r22, 0x00	; 0
    1de8:	70 e0       	ldi	r23, 0x00	; 0
    1dea:	82 e8       	ldi	r24, 0x82	; 130
    1dec:	93 e4       	ldi	r25, 0x43	; 67
    1dee:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1df2:	2f ef       	ldi	r18, 0xFF	; 255
    1df4:	87 e5       	ldi	r24, 0x57	; 87
    1df6:	9b e1       	ldi	r25, 0x1B	; 27
    1df8:	21 50       	subi	r18, 0x01	; 1
    1dfa:	80 40       	sbci	r24, 0x00	; 0
    1dfc:	90 40       	sbci	r25, 0x00	; 0
    1dfe:	e1 f7       	brne	.-8      	; 0x1df8 <project_skywalker+0x454>
    1e00:	00 c0       	rjmp	.+0      	; 0x1e02 <project_skywalker+0x45e>
    1e02:	00 00       	nop
	_delay_ms(1120);
	set_parameters(CLOW, 1);
    1e04:	41 e0       	ldi	r20, 0x01	; 1
    1e06:	60 e0       	ldi	r22, 0x00	; 0
    1e08:	70 e0       	ldi	r23, 0x00	; 0
    1e0a:	82 e8       	ldi	r24, 0x82	; 130
    1e0c:	93 e4       	ldi	r25, 0x43	; 67
    1e0e:	0e 94 31 0b 	call	0x1662	; 0x1662 <set_parameters>
    1e12:	2f ef       	ldi	r18, 0xFF	; 255
    1e14:	80 e7       	ldi	r24, 0x70	; 112
    1e16:	92 e0       	ldi	r25, 0x02	; 2
    1e18:	21 50       	subi	r18, 0x01	; 1
    1e1a:	80 40       	sbci	r24, 0x00	; 0
    1e1c:	90 40       	sbci	r25, 0x00	; 0
    1e1e:	e1 f7       	brne	.-8      	; 0x1e18 <project_skywalker+0x474>
    1e20:	00 c0       	rjmp	.+0      	; 0x1e22 <project_skywalker+0x47e>
    1e22:	00 00       	nop
    1e24:	08 95       	ret

00001e26 <uart_initiate>:

#include "includes.h"

//This function initializes UART receive and transmit 
void uart_initiate(uint16_t UBRR_VALUE){
	UCSR0A = 0x00;
    1e26:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	
	//Setting up UBRR value
	UBRR0L = UBRR_VALUE;
    1e2a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	//Enable transmitter
	UCSR0B |= (1 << TXEN0);
    1e2e:	e1 ec       	ldi	r30, 0xC1	; 193
    1e30:	f0 e0       	ldi	r31, 0x00	; 0
    1e32:	80 81       	ld	r24, Z
    1e34:	88 60       	ori	r24, 0x08	; 8
    1e36:	80 83       	st	Z, r24

	//Enable receiver
	UCSR0B |= (1 << RXEN0);
    1e38:	80 81       	ld	r24, Z
    1e3a:	80 61       	ori	r24, 0x10	; 16
    1e3c:	80 83       	st	Z, r24
	UCSR0B |= (1 << RXCIE0);
    1e3e:	80 81       	ld	r24, Z
    1e40:	80 68       	ori	r24, 0x80	; 128
    1e42:	80 83       	st	Z, r24

	//Setting the character size to 8 bits
	UCSR0C |= (1 << UCSZ00) | (1 << UCSZ01);
    1e44:	e2 ec       	ldi	r30, 0xC2	; 194
    1e46:	f0 e0       	ldi	r31, 0x00	; 0
    1e48:	80 81       	ld	r24, Z
    1e4a:	86 60       	ori	r24, 0x06	; 6
    1e4c:	80 83       	st	Z, r24
    1e4e:	08 95       	ret

00001e50 <uart_transmit>:
}

//This function transmit a message via UART
void uart_transmit(char* message){
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
	unsigned int i = 0;
	while(message[i] != '\0'){
    1e54:	fc 01       	movw	r30, r24
    1e56:	20 81       	ld	r18, Z
    1e58:	22 23       	and	r18, r18
    1e5a:	69 f0       	breq	.+26     	; 0x1e76 <uart_transmit+0x26>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	11 96       	adiw	r26, 0x01	; 1
		while(UDR_FULL);
    1e60:	e0 ec       	ldi	r30, 0xC0	; 192
    1e62:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = message[i];
    1e64:	c6 ec       	ldi	r28, 0xC6	; 198
    1e66:	d0 e0       	ldi	r29, 0x00	; 0

//This function transmit a message via UART
void uart_transmit(char* message){
	unsigned int i = 0;
	while(message[i] != '\0'){
		while(UDR_FULL);
    1e68:	90 81       	ld	r25, Z
    1e6a:	95 ff       	sbrs	r25, 5
    1e6c:	fd cf       	rjmp	.-6      	; 0x1e68 <uart_transmit+0x18>
		UDR0 = message[i];
    1e6e:	28 83       	st	Y, r18
}

//This function transmit a message via UART
void uart_transmit(char* message){
	unsigned int i = 0;
	while(message[i] != '\0'){
    1e70:	2d 91       	ld	r18, X+
    1e72:	21 11       	cpse	r18, r1
    1e74:	f9 cf       	rjmp	.-14     	; 0x1e68 <uart_transmit+0x18>
		while(UDR_FULL);
		UDR0 = message[i];
		i++;
	}
}
    1e76:	df 91       	pop	r29
    1e78:	cf 91       	pop	r28
    1e7a:	08 95       	ret

00001e7c <process_message>:

//This function processes a message received by UART
void process_message(char* message, uint8_t* mfc){
    1e7c:	cf 92       	push	r12
    1e7e:	df 92       	push	r13
    1e80:	ef 92       	push	r14
    1e82:	ff 92       	push	r15
    1e84:	0f 93       	push	r16
    1e86:	1f 93       	push	r17
    1e88:	cf 93       	push	r28
    1e8a:	df 93       	push	r29
    1e8c:	00 d0       	rcall	.+0      	; 0x1e8e <process_message+0x12>
    1e8e:	00 d0       	rcall	.+0      	; 0x1e90 <process_message+0x14>
    1e90:	00 d0       	rcall	.+0      	; 0x1e92 <process_message+0x16>
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
    1e96:	7c 01       	movw	r14, r24
    1e98:	6b 01       	movw	r12, r22
	char buff[4];
	char* end;
	uint16_t len_mfc = mjson_find_string(message, strlen(message), "$.3.mfc.req", buff, sizeof(buff));
    1e9a:	fc 01       	movw	r30, r24
    1e9c:	01 90       	ld	r0, Z+
    1e9e:	00 20       	and	r0, r0
    1ea0:	e9 f7       	brne	.-6      	; 0x1e9c <process_message+0x20>
    1ea2:	31 97       	sbiw	r30, 0x01	; 1
    1ea4:	bf 01       	movw	r22, r30
    1ea6:	68 1b       	sub	r22, r24
    1ea8:	79 0b       	sbc	r23, r25
    1eaa:	04 e0       	ldi	r16, 0x04	; 4
    1eac:	10 e0       	ldi	r17, 0x00	; 0
    1eae:	9e 01       	movw	r18, r28
    1eb0:	2f 5f       	subi	r18, 0xFF	; 255
    1eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb4:	45 e3       	ldi	r20, 0x35	; 53
    1eb6:	52 e0       	ldi	r21, 0x02	; 2
    1eb8:	0e 94 6b 05 	call	0xad6	; 0xad6 <mjson_find_string>
	if (len_mfc != 0){
    1ebc:	89 2b       	or	r24, r25
    1ebe:	59 f0       	breq	.+22     	; 0x1ed6 <process_message+0x5a>
		*mfc = (uint8_t) strtol(buff, &end, 10);
    1ec0:	4a e0       	ldi	r20, 0x0A	; 10
    1ec2:	50 e0       	ldi	r21, 0x00	; 0
    1ec4:	be 01       	movw	r22, r28
    1ec6:	6b 5f       	subi	r22, 0xFB	; 251
    1ec8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eca:	ce 01       	movw	r24, r28
    1ecc:	01 96       	adiw	r24, 0x01	; 1
    1ece:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <strtol>
    1ed2:	f6 01       	movw	r30, r12
    1ed4:	60 83       	st	Z, r22
	}
	uint16_t len_sith = mjson_find_string(message, strlen(message), "$.3.user.force", buff, sizeof(buff));
    1ed6:	f7 01       	movw	r30, r14
    1ed8:	01 90       	ld	r0, Z+
    1eda:	00 20       	and	r0, r0
    1edc:	e9 f7       	brne	.-6      	; 0x1ed8 <process_message+0x5c>
    1ede:	31 97       	sbiw	r30, 0x01	; 1
    1ee0:	bf 01       	movw	r22, r30
    1ee2:	6e 19       	sub	r22, r14
    1ee4:	7f 09       	sbc	r23, r15
    1ee6:	04 e0       	ldi	r16, 0x04	; 4
    1ee8:	10 e0       	ldi	r17, 0x00	; 0
    1eea:	9e 01       	movw	r18, r28
    1eec:	2f 5f       	subi	r18, 0xFF	; 255
    1eee:	3f 4f       	sbci	r19, 0xFF	; 255
    1ef0:	41 e4       	ldi	r20, 0x41	; 65
    1ef2:	52 e0       	ldi	r21, 0x02	; 2
    1ef4:	c7 01       	movw	r24, r14
    1ef6:	0e 94 6b 05 	call	0xad6	; 0xad6 <mjson_find_string>
	if((len_sith != 0) && (strcmp(buff, "on") == 0)){
    1efa:	89 2b       	or	r24, r25
    1efc:	59 f0       	breq	.+22     	; 0x1f14 <process_message+0x98>
    1efe:	60 e5       	ldi	r22, 0x50	; 80
    1f00:	72 e0       	ldi	r23, 0x02	; 2
    1f02:	ce 01       	movw	r24, r28
    1f04:	01 96       	adiw	r24, 0x01	; 1
    1f06:	0e 94 62 16 	call	0x2cc4	; 0x2cc4 <strcmp>
    1f0a:	89 2b       	or	r24, r25
    1f0c:	19 f4       	brne	.+6      	; 0x1f14 <process_message+0x98>
		force = true;
    1f0e:	81 e0       	ldi	r24, 0x01	; 1
    1f10:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <force>
	}
    1f14:	26 96       	adiw	r28, 0x06	; 6
    1f16:	0f b6       	in	r0, 0x3f	; 63
    1f18:	f8 94       	cli
    1f1a:	de bf       	out	0x3e, r29	; 62
    1f1c:	0f be       	out	0x3f, r0	; 63
    1f1e:	cd bf       	out	0x3d, r28	; 61
    1f20:	df 91       	pop	r29
    1f22:	cf 91       	pop	r28
    1f24:	1f 91       	pop	r17
    1f26:	0f 91       	pop	r16
    1f28:	ff 90       	pop	r15
    1f2a:	ef 90       	pop	r14
    1f2c:	df 90       	pop	r13
    1f2e:	cf 90       	pop	r12
    1f30:	08 95       	ret

00001f32 <__subsf3>:
    1f32:	50 58       	subi	r21, 0x80	; 128

00001f34 <__addsf3>:
    1f34:	bb 27       	eor	r27, r27
    1f36:	aa 27       	eor	r26, r26
    1f38:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <__addsf3x>
    1f3c:	0c 94 02 11 	jmp	0x2204	; 0x2204 <__fp_round>
    1f40:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscA>
    1f44:	38 f0       	brcs	.+14     	; 0x1f54 <__addsf3+0x20>
    1f46:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_pscB>
    1f4a:	20 f0       	brcs	.+8      	; 0x1f54 <__addsf3+0x20>
    1f4c:	39 f4       	brne	.+14     	; 0x1f5c <__addsf3+0x28>
    1f4e:	9f 3f       	cpi	r25, 0xFF	; 255
    1f50:	19 f4       	brne	.+6      	; 0x1f58 <__addsf3+0x24>
    1f52:	26 f4       	brtc	.+8      	; 0x1f5c <__addsf3+0x28>
    1f54:	0c 94 f1 10 	jmp	0x21e2	; 0x21e2 <__fp_nan>
    1f58:	0e f4       	brtc	.+2      	; 0x1f5c <__addsf3+0x28>
    1f5a:	e0 95       	com	r30
    1f5c:	e7 fb       	bst	r30, 7
    1f5e:	0c 94 eb 10 	jmp	0x21d6	; 0x21d6 <__fp_inf>

00001f62 <__addsf3x>:
    1f62:	e9 2f       	mov	r30, r25
    1f64:	0e 94 13 11 	call	0x2226	; 0x2226 <__fp_split3>
    1f68:	58 f3       	brcs	.-42     	; 0x1f40 <__addsf3+0xc>
    1f6a:	ba 17       	cp	r27, r26
    1f6c:	62 07       	cpc	r22, r18
    1f6e:	73 07       	cpc	r23, r19
    1f70:	84 07       	cpc	r24, r20
    1f72:	95 07       	cpc	r25, r21
    1f74:	20 f0       	brcs	.+8      	; 0x1f7e <__addsf3x+0x1c>
    1f76:	79 f4       	brne	.+30     	; 0x1f96 <__addsf3x+0x34>
    1f78:	a6 f5       	brtc	.+104    	; 0x1fe2 <__addsf3x+0x80>
    1f7a:	0c 94 35 11 	jmp	0x226a	; 0x226a <__fp_zero>
    1f7e:	0e f4       	brtc	.+2      	; 0x1f82 <__addsf3x+0x20>
    1f80:	e0 95       	com	r30
    1f82:	0b 2e       	mov	r0, r27
    1f84:	ba 2f       	mov	r27, r26
    1f86:	a0 2d       	mov	r26, r0
    1f88:	0b 01       	movw	r0, r22
    1f8a:	b9 01       	movw	r22, r18
    1f8c:	90 01       	movw	r18, r0
    1f8e:	0c 01       	movw	r0, r24
    1f90:	ca 01       	movw	r24, r20
    1f92:	a0 01       	movw	r20, r0
    1f94:	11 24       	eor	r1, r1
    1f96:	ff 27       	eor	r31, r31
    1f98:	59 1b       	sub	r21, r25
    1f9a:	99 f0       	breq	.+38     	; 0x1fc2 <__addsf3x+0x60>
    1f9c:	59 3f       	cpi	r21, 0xF9	; 249
    1f9e:	50 f4       	brcc	.+20     	; 0x1fb4 <__addsf3x+0x52>
    1fa0:	50 3e       	cpi	r21, 0xE0	; 224
    1fa2:	68 f1       	brcs	.+90     	; 0x1ffe <__addsf3x+0x9c>
    1fa4:	1a 16       	cp	r1, r26
    1fa6:	f0 40       	sbci	r31, 0x00	; 0
    1fa8:	a2 2f       	mov	r26, r18
    1faa:	23 2f       	mov	r18, r19
    1fac:	34 2f       	mov	r19, r20
    1fae:	44 27       	eor	r20, r20
    1fb0:	58 5f       	subi	r21, 0xF8	; 248
    1fb2:	f3 cf       	rjmp	.-26     	; 0x1f9a <__addsf3x+0x38>
    1fb4:	46 95       	lsr	r20
    1fb6:	37 95       	ror	r19
    1fb8:	27 95       	ror	r18
    1fba:	a7 95       	ror	r26
    1fbc:	f0 40       	sbci	r31, 0x00	; 0
    1fbe:	53 95       	inc	r21
    1fc0:	c9 f7       	brne	.-14     	; 0x1fb4 <__addsf3x+0x52>
    1fc2:	7e f4       	brtc	.+30     	; 0x1fe2 <__addsf3x+0x80>
    1fc4:	1f 16       	cp	r1, r31
    1fc6:	ba 0b       	sbc	r27, r26
    1fc8:	62 0b       	sbc	r22, r18
    1fca:	73 0b       	sbc	r23, r19
    1fcc:	84 0b       	sbc	r24, r20
    1fce:	ba f0       	brmi	.+46     	; 0x1ffe <__addsf3x+0x9c>
    1fd0:	91 50       	subi	r25, 0x01	; 1
    1fd2:	a1 f0       	breq	.+40     	; 0x1ffc <__addsf3x+0x9a>
    1fd4:	ff 0f       	add	r31, r31
    1fd6:	bb 1f       	adc	r27, r27
    1fd8:	66 1f       	adc	r22, r22
    1fda:	77 1f       	adc	r23, r23
    1fdc:	88 1f       	adc	r24, r24
    1fde:	c2 f7       	brpl	.-16     	; 0x1fd0 <__addsf3x+0x6e>
    1fe0:	0e c0       	rjmp	.+28     	; 0x1ffe <__addsf3x+0x9c>
    1fe2:	ba 0f       	add	r27, r26
    1fe4:	62 1f       	adc	r22, r18
    1fe6:	73 1f       	adc	r23, r19
    1fe8:	84 1f       	adc	r24, r20
    1fea:	48 f4       	brcc	.+18     	; 0x1ffe <__addsf3x+0x9c>
    1fec:	87 95       	ror	r24
    1fee:	77 95       	ror	r23
    1ff0:	67 95       	ror	r22
    1ff2:	b7 95       	ror	r27
    1ff4:	f7 95       	ror	r31
    1ff6:	9e 3f       	cpi	r25, 0xFE	; 254
    1ff8:	08 f0       	brcs	.+2      	; 0x1ffc <__addsf3x+0x9a>
    1ffa:	b0 cf       	rjmp	.-160    	; 0x1f5c <__addsf3+0x28>
    1ffc:	93 95       	inc	r25
    1ffe:	88 0f       	add	r24, r24
    2000:	08 f0       	brcs	.+2      	; 0x2004 <__addsf3x+0xa2>
    2002:	99 27       	eor	r25, r25
    2004:	ee 0f       	add	r30, r30
    2006:	97 95       	ror	r25
    2008:	87 95       	ror	r24
    200a:	08 95       	ret

0000200c <__divsf3>:
    200c:	0e 94 1a 10 	call	0x2034	; 0x2034 <__divsf3x>
    2010:	0c 94 02 11 	jmp	0x2204	; 0x2204 <__fp_round>
    2014:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_pscB>
    2018:	58 f0       	brcs	.+22     	; 0x2030 <__divsf3+0x24>
    201a:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscA>
    201e:	40 f0       	brcs	.+16     	; 0x2030 <__divsf3+0x24>
    2020:	29 f4       	brne	.+10     	; 0x202c <__divsf3+0x20>
    2022:	5f 3f       	cpi	r21, 0xFF	; 255
    2024:	29 f0       	breq	.+10     	; 0x2030 <__divsf3+0x24>
    2026:	0c 94 eb 10 	jmp	0x21d6	; 0x21d6 <__fp_inf>
    202a:	51 11       	cpse	r21, r1
    202c:	0c 94 36 11 	jmp	0x226c	; 0x226c <__fp_szero>
    2030:	0c 94 f1 10 	jmp	0x21e2	; 0x21e2 <__fp_nan>

00002034 <__divsf3x>:
    2034:	0e 94 13 11 	call	0x2226	; 0x2226 <__fp_split3>
    2038:	68 f3       	brcs	.-38     	; 0x2014 <__divsf3+0x8>

0000203a <__divsf3_pse>:
    203a:	99 23       	and	r25, r25
    203c:	b1 f3       	breq	.-20     	; 0x202a <__divsf3+0x1e>
    203e:	55 23       	and	r21, r21
    2040:	91 f3       	breq	.-28     	; 0x2026 <__divsf3+0x1a>
    2042:	95 1b       	sub	r25, r21
    2044:	55 0b       	sbc	r21, r21
    2046:	bb 27       	eor	r27, r27
    2048:	aa 27       	eor	r26, r26
    204a:	62 17       	cp	r22, r18
    204c:	73 07       	cpc	r23, r19
    204e:	84 07       	cpc	r24, r20
    2050:	38 f0       	brcs	.+14     	; 0x2060 <__divsf3_pse+0x26>
    2052:	9f 5f       	subi	r25, 0xFF	; 255
    2054:	5f 4f       	sbci	r21, 0xFF	; 255
    2056:	22 0f       	add	r18, r18
    2058:	33 1f       	adc	r19, r19
    205a:	44 1f       	adc	r20, r20
    205c:	aa 1f       	adc	r26, r26
    205e:	a9 f3       	breq	.-22     	; 0x204a <__divsf3_pse+0x10>
    2060:	35 d0       	rcall	.+106    	; 0x20cc <__divsf3_pse+0x92>
    2062:	0e 2e       	mov	r0, r30
    2064:	3a f0       	brmi	.+14     	; 0x2074 <__divsf3_pse+0x3a>
    2066:	e0 e8       	ldi	r30, 0x80	; 128
    2068:	32 d0       	rcall	.+100    	; 0x20ce <__divsf3_pse+0x94>
    206a:	91 50       	subi	r25, 0x01	; 1
    206c:	50 40       	sbci	r21, 0x00	; 0
    206e:	e6 95       	lsr	r30
    2070:	00 1c       	adc	r0, r0
    2072:	ca f7       	brpl	.-14     	; 0x2066 <__divsf3_pse+0x2c>
    2074:	2b d0       	rcall	.+86     	; 0x20cc <__divsf3_pse+0x92>
    2076:	fe 2f       	mov	r31, r30
    2078:	29 d0       	rcall	.+82     	; 0x20cc <__divsf3_pse+0x92>
    207a:	66 0f       	add	r22, r22
    207c:	77 1f       	adc	r23, r23
    207e:	88 1f       	adc	r24, r24
    2080:	bb 1f       	adc	r27, r27
    2082:	26 17       	cp	r18, r22
    2084:	37 07       	cpc	r19, r23
    2086:	48 07       	cpc	r20, r24
    2088:	ab 07       	cpc	r26, r27
    208a:	b0 e8       	ldi	r27, 0x80	; 128
    208c:	09 f0       	breq	.+2      	; 0x2090 <__divsf3_pse+0x56>
    208e:	bb 0b       	sbc	r27, r27
    2090:	80 2d       	mov	r24, r0
    2092:	bf 01       	movw	r22, r30
    2094:	ff 27       	eor	r31, r31
    2096:	93 58       	subi	r25, 0x83	; 131
    2098:	5f 4f       	sbci	r21, 0xFF	; 255
    209a:	3a f0       	brmi	.+14     	; 0x20aa <__divsf3_pse+0x70>
    209c:	9e 3f       	cpi	r25, 0xFE	; 254
    209e:	51 05       	cpc	r21, r1
    20a0:	78 f0       	brcs	.+30     	; 0x20c0 <__divsf3_pse+0x86>
    20a2:	0c 94 eb 10 	jmp	0x21d6	; 0x21d6 <__fp_inf>
    20a6:	0c 94 36 11 	jmp	0x226c	; 0x226c <__fp_szero>
    20aa:	5f 3f       	cpi	r21, 0xFF	; 255
    20ac:	e4 f3       	brlt	.-8      	; 0x20a6 <__divsf3_pse+0x6c>
    20ae:	98 3e       	cpi	r25, 0xE8	; 232
    20b0:	d4 f3       	brlt	.-12     	; 0x20a6 <__divsf3_pse+0x6c>
    20b2:	86 95       	lsr	r24
    20b4:	77 95       	ror	r23
    20b6:	67 95       	ror	r22
    20b8:	b7 95       	ror	r27
    20ba:	f7 95       	ror	r31
    20bc:	9f 5f       	subi	r25, 0xFF	; 255
    20be:	c9 f7       	brne	.-14     	; 0x20b2 <__divsf3_pse+0x78>
    20c0:	88 0f       	add	r24, r24
    20c2:	91 1d       	adc	r25, r1
    20c4:	96 95       	lsr	r25
    20c6:	87 95       	ror	r24
    20c8:	97 f9       	bld	r25, 7
    20ca:	08 95       	ret
    20cc:	e1 e0       	ldi	r30, 0x01	; 1
    20ce:	66 0f       	add	r22, r22
    20d0:	77 1f       	adc	r23, r23
    20d2:	88 1f       	adc	r24, r24
    20d4:	bb 1f       	adc	r27, r27
    20d6:	62 17       	cp	r22, r18
    20d8:	73 07       	cpc	r23, r19
    20da:	84 07       	cpc	r24, r20
    20dc:	ba 07       	cpc	r27, r26
    20de:	20 f0       	brcs	.+8      	; 0x20e8 <__divsf3_pse+0xae>
    20e0:	62 1b       	sub	r22, r18
    20e2:	73 0b       	sbc	r23, r19
    20e4:	84 0b       	sbc	r24, r20
    20e6:	ba 0b       	sbc	r27, r26
    20e8:	ee 1f       	adc	r30, r30
    20ea:	88 f7       	brcc	.-30     	; 0x20ce <__divsf3_pse+0x94>
    20ec:	e0 95       	com	r30
    20ee:	08 95       	ret

000020f0 <__fixsfsi>:
    20f0:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__fixunssfsi>
    20f4:	68 94       	set
    20f6:	b1 11       	cpse	r27, r1
    20f8:	0c 94 36 11 	jmp	0x226c	; 0x226c <__fp_szero>
    20fc:	08 95       	ret

000020fe <__fixunssfsi>:
    20fe:	0e 94 1b 11 	call	0x2236	; 0x2236 <__fp_splitA>
    2102:	88 f0       	brcs	.+34     	; 0x2126 <__fixunssfsi+0x28>
    2104:	9f 57       	subi	r25, 0x7F	; 127
    2106:	98 f0       	brcs	.+38     	; 0x212e <__fixunssfsi+0x30>
    2108:	b9 2f       	mov	r27, r25
    210a:	99 27       	eor	r25, r25
    210c:	b7 51       	subi	r27, 0x17	; 23
    210e:	b0 f0       	brcs	.+44     	; 0x213c <__fixunssfsi+0x3e>
    2110:	e1 f0       	breq	.+56     	; 0x214a <__fixunssfsi+0x4c>
    2112:	66 0f       	add	r22, r22
    2114:	77 1f       	adc	r23, r23
    2116:	88 1f       	adc	r24, r24
    2118:	99 1f       	adc	r25, r25
    211a:	1a f0       	brmi	.+6      	; 0x2122 <__fixunssfsi+0x24>
    211c:	ba 95       	dec	r27
    211e:	c9 f7       	brne	.-14     	; 0x2112 <__fixunssfsi+0x14>
    2120:	14 c0       	rjmp	.+40     	; 0x214a <__fixunssfsi+0x4c>
    2122:	b1 30       	cpi	r27, 0x01	; 1
    2124:	91 f0       	breq	.+36     	; 0x214a <__fixunssfsi+0x4c>
    2126:	0e 94 35 11 	call	0x226a	; 0x226a <__fp_zero>
    212a:	b1 e0       	ldi	r27, 0x01	; 1
    212c:	08 95       	ret
    212e:	0c 94 35 11 	jmp	0x226a	; 0x226a <__fp_zero>
    2132:	67 2f       	mov	r22, r23
    2134:	78 2f       	mov	r23, r24
    2136:	88 27       	eor	r24, r24
    2138:	b8 5f       	subi	r27, 0xF8	; 248
    213a:	39 f0       	breq	.+14     	; 0x214a <__fixunssfsi+0x4c>
    213c:	b9 3f       	cpi	r27, 0xF9	; 249
    213e:	cc f3       	brlt	.-14     	; 0x2132 <__fixunssfsi+0x34>
    2140:	86 95       	lsr	r24
    2142:	77 95       	ror	r23
    2144:	67 95       	ror	r22
    2146:	b3 95       	inc	r27
    2148:	d9 f7       	brne	.-10     	; 0x2140 <__fixunssfsi+0x42>
    214a:	3e f4       	brtc	.+14     	; 0x215a <__fixunssfsi+0x5c>
    214c:	90 95       	com	r25
    214e:	80 95       	com	r24
    2150:	70 95       	com	r23
    2152:	61 95       	neg	r22
    2154:	7f 4f       	sbci	r23, 0xFF	; 255
    2156:	8f 4f       	sbci	r24, 0xFF	; 255
    2158:	9f 4f       	sbci	r25, 0xFF	; 255
    215a:	08 95       	ret

0000215c <__floatunsisf>:
    215c:	e8 94       	clt
    215e:	09 c0       	rjmp	.+18     	; 0x2172 <__floatsisf+0x12>

00002160 <__floatsisf>:
    2160:	97 fb       	bst	r25, 7
    2162:	3e f4       	brtc	.+14     	; 0x2172 <__floatsisf+0x12>
    2164:	90 95       	com	r25
    2166:	80 95       	com	r24
    2168:	70 95       	com	r23
    216a:	61 95       	neg	r22
    216c:	7f 4f       	sbci	r23, 0xFF	; 255
    216e:	8f 4f       	sbci	r24, 0xFF	; 255
    2170:	9f 4f       	sbci	r25, 0xFF	; 255
    2172:	99 23       	and	r25, r25
    2174:	a9 f0       	breq	.+42     	; 0x21a0 <__floatsisf+0x40>
    2176:	f9 2f       	mov	r31, r25
    2178:	96 e9       	ldi	r25, 0x96	; 150
    217a:	bb 27       	eor	r27, r27
    217c:	93 95       	inc	r25
    217e:	f6 95       	lsr	r31
    2180:	87 95       	ror	r24
    2182:	77 95       	ror	r23
    2184:	67 95       	ror	r22
    2186:	b7 95       	ror	r27
    2188:	f1 11       	cpse	r31, r1
    218a:	f8 cf       	rjmp	.-16     	; 0x217c <__floatsisf+0x1c>
    218c:	fa f4       	brpl	.+62     	; 0x21cc <__floatsisf+0x6c>
    218e:	bb 0f       	add	r27, r27
    2190:	11 f4       	brne	.+4      	; 0x2196 <__floatsisf+0x36>
    2192:	60 ff       	sbrs	r22, 0
    2194:	1b c0       	rjmp	.+54     	; 0x21cc <__floatsisf+0x6c>
    2196:	6f 5f       	subi	r22, 0xFF	; 255
    2198:	7f 4f       	sbci	r23, 0xFF	; 255
    219a:	8f 4f       	sbci	r24, 0xFF	; 255
    219c:	9f 4f       	sbci	r25, 0xFF	; 255
    219e:	16 c0       	rjmp	.+44     	; 0x21cc <__floatsisf+0x6c>
    21a0:	88 23       	and	r24, r24
    21a2:	11 f0       	breq	.+4      	; 0x21a8 <__floatsisf+0x48>
    21a4:	96 e9       	ldi	r25, 0x96	; 150
    21a6:	11 c0       	rjmp	.+34     	; 0x21ca <__floatsisf+0x6a>
    21a8:	77 23       	and	r23, r23
    21aa:	21 f0       	breq	.+8      	; 0x21b4 <__floatsisf+0x54>
    21ac:	9e e8       	ldi	r25, 0x8E	; 142
    21ae:	87 2f       	mov	r24, r23
    21b0:	76 2f       	mov	r23, r22
    21b2:	05 c0       	rjmp	.+10     	; 0x21be <__floatsisf+0x5e>
    21b4:	66 23       	and	r22, r22
    21b6:	71 f0       	breq	.+28     	; 0x21d4 <__floatsisf+0x74>
    21b8:	96 e8       	ldi	r25, 0x86	; 134
    21ba:	86 2f       	mov	r24, r22
    21bc:	70 e0       	ldi	r23, 0x00	; 0
    21be:	60 e0       	ldi	r22, 0x00	; 0
    21c0:	2a f0       	brmi	.+10     	; 0x21cc <__floatsisf+0x6c>
    21c2:	9a 95       	dec	r25
    21c4:	66 0f       	add	r22, r22
    21c6:	77 1f       	adc	r23, r23
    21c8:	88 1f       	adc	r24, r24
    21ca:	da f7       	brpl	.-10     	; 0x21c2 <__floatsisf+0x62>
    21cc:	88 0f       	add	r24, r24
    21ce:	96 95       	lsr	r25
    21d0:	87 95       	ror	r24
    21d2:	97 f9       	bld	r25, 7
    21d4:	08 95       	ret

000021d6 <__fp_inf>:
    21d6:	97 f9       	bld	r25, 7
    21d8:	9f 67       	ori	r25, 0x7F	; 127
    21da:	80 e8       	ldi	r24, 0x80	; 128
    21dc:	70 e0       	ldi	r23, 0x00	; 0
    21de:	60 e0       	ldi	r22, 0x00	; 0
    21e0:	08 95       	ret

000021e2 <__fp_nan>:
    21e2:	9f ef       	ldi	r25, 0xFF	; 255
    21e4:	80 ec       	ldi	r24, 0xC0	; 192
    21e6:	08 95       	ret

000021e8 <__fp_pscA>:
    21e8:	00 24       	eor	r0, r0
    21ea:	0a 94       	dec	r0
    21ec:	16 16       	cp	r1, r22
    21ee:	17 06       	cpc	r1, r23
    21f0:	18 06       	cpc	r1, r24
    21f2:	09 06       	cpc	r0, r25
    21f4:	08 95       	ret

000021f6 <__fp_pscB>:
    21f6:	00 24       	eor	r0, r0
    21f8:	0a 94       	dec	r0
    21fa:	12 16       	cp	r1, r18
    21fc:	13 06       	cpc	r1, r19
    21fe:	14 06       	cpc	r1, r20
    2200:	05 06       	cpc	r0, r21
    2202:	08 95       	ret

00002204 <__fp_round>:
    2204:	09 2e       	mov	r0, r25
    2206:	03 94       	inc	r0
    2208:	00 0c       	add	r0, r0
    220a:	11 f4       	brne	.+4      	; 0x2210 <__fp_round+0xc>
    220c:	88 23       	and	r24, r24
    220e:	52 f0       	brmi	.+20     	; 0x2224 <__fp_round+0x20>
    2210:	bb 0f       	add	r27, r27
    2212:	40 f4       	brcc	.+16     	; 0x2224 <__fp_round+0x20>
    2214:	bf 2b       	or	r27, r31
    2216:	11 f4       	brne	.+4      	; 0x221c <__fp_round+0x18>
    2218:	60 ff       	sbrs	r22, 0
    221a:	04 c0       	rjmp	.+8      	; 0x2224 <__fp_round+0x20>
    221c:	6f 5f       	subi	r22, 0xFF	; 255
    221e:	7f 4f       	sbci	r23, 0xFF	; 255
    2220:	8f 4f       	sbci	r24, 0xFF	; 255
    2222:	9f 4f       	sbci	r25, 0xFF	; 255
    2224:	08 95       	ret

00002226 <__fp_split3>:
    2226:	57 fd       	sbrc	r21, 7
    2228:	90 58       	subi	r25, 0x80	; 128
    222a:	44 0f       	add	r20, r20
    222c:	55 1f       	adc	r21, r21
    222e:	59 f0       	breq	.+22     	; 0x2246 <__fp_splitA+0x10>
    2230:	5f 3f       	cpi	r21, 0xFF	; 255
    2232:	71 f0       	breq	.+28     	; 0x2250 <__fp_splitA+0x1a>
    2234:	47 95       	ror	r20

00002236 <__fp_splitA>:
    2236:	88 0f       	add	r24, r24
    2238:	97 fb       	bst	r25, 7
    223a:	99 1f       	adc	r25, r25
    223c:	61 f0       	breq	.+24     	; 0x2256 <__fp_splitA+0x20>
    223e:	9f 3f       	cpi	r25, 0xFF	; 255
    2240:	79 f0       	breq	.+30     	; 0x2260 <__fp_splitA+0x2a>
    2242:	87 95       	ror	r24
    2244:	08 95       	ret
    2246:	12 16       	cp	r1, r18
    2248:	13 06       	cpc	r1, r19
    224a:	14 06       	cpc	r1, r20
    224c:	55 1f       	adc	r21, r21
    224e:	f2 cf       	rjmp	.-28     	; 0x2234 <__fp_split3+0xe>
    2250:	46 95       	lsr	r20
    2252:	f1 df       	rcall	.-30     	; 0x2236 <__fp_splitA>
    2254:	08 c0       	rjmp	.+16     	; 0x2266 <__fp_splitA+0x30>
    2256:	16 16       	cp	r1, r22
    2258:	17 06       	cpc	r1, r23
    225a:	18 06       	cpc	r1, r24
    225c:	99 1f       	adc	r25, r25
    225e:	f1 cf       	rjmp	.-30     	; 0x2242 <__fp_splitA+0xc>
    2260:	86 95       	lsr	r24
    2262:	71 05       	cpc	r23, r1
    2264:	61 05       	cpc	r22, r1
    2266:	08 94       	sec
    2268:	08 95       	ret

0000226a <__fp_zero>:
    226a:	e8 94       	clt

0000226c <__fp_szero>:
    226c:	bb 27       	eor	r27, r27
    226e:	66 27       	eor	r22, r22
    2270:	77 27       	eor	r23, r23
    2272:	cb 01       	movw	r24, r22
    2274:	97 f9       	bld	r25, 7
    2276:	08 95       	ret

00002278 <__mulsf3>:
    2278:	0e 94 4f 11 	call	0x229e	; 0x229e <__mulsf3x>
    227c:	0c 94 02 11 	jmp	0x2204	; 0x2204 <__fp_round>
    2280:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscA>
    2284:	38 f0       	brcs	.+14     	; 0x2294 <__mulsf3+0x1c>
    2286:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_pscB>
    228a:	20 f0       	brcs	.+8      	; 0x2294 <__mulsf3+0x1c>
    228c:	95 23       	and	r25, r21
    228e:	11 f0       	breq	.+4      	; 0x2294 <__mulsf3+0x1c>
    2290:	0c 94 eb 10 	jmp	0x21d6	; 0x21d6 <__fp_inf>
    2294:	0c 94 f1 10 	jmp	0x21e2	; 0x21e2 <__fp_nan>
    2298:	11 24       	eor	r1, r1
    229a:	0c 94 36 11 	jmp	0x226c	; 0x226c <__fp_szero>

0000229e <__mulsf3x>:
    229e:	0e 94 13 11 	call	0x2226	; 0x2226 <__fp_split3>
    22a2:	70 f3       	brcs	.-36     	; 0x2280 <__mulsf3+0x8>

000022a4 <__mulsf3_pse>:
    22a4:	95 9f       	mul	r25, r21
    22a6:	c1 f3       	breq	.-16     	; 0x2298 <__mulsf3+0x20>
    22a8:	95 0f       	add	r25, r21
    22aa:	50 e0       	ldi	r21, 0x00	; 0
    22ac:	55 1f       	adc	r21, r21
    22ae:	62 9f       	mul	r22, r18
    22b0:	f0 01       	movw	r30, r0
    22b2:	72 9f       	mul	r23, r18
    22b4:	bb 27       	eor	r27, r27
    22b6:	f0 0d       	add	r31, r0
    22b8:	b1 1d       	adc	r27, r1
    22ba:	63 9f       	mul	r22, r19
    22bc:	aa 27       	eor	r26, r26
    22be:	f0 0d       	add	r31, r0
    22c0:	b1 1d       	adc	r27, r1
    22c2:	aa 1f       	adc	r26, r26
    22c4:	64 9f       	mul	r22, r20
    22c6:	66 27       	eor	r22, r22
    22c8:	b0 0d       	add	r27, r0
    22ca:	a1 1d       	adc	r26, r1
    22cc:	66 1f       	adc	r22, r22
    22ce:	82 9f       	mul	r24, r18
    22d0:	22 27       	eor	r18, r18
    22d2:	b0 0d       	add	r27, r0
    22d4:	a1 1d       	adc	r26, r1
    22d6:	62 1f       	adc	r22, r18
    22d8:	73 9f       	mul	r23, r19
    22da:	b0 0d       	add	r27, r0
    22dc:	a1 1d       	adc	r26, r1
    22de:	62 1f       	adc	r22, r18
    22e0:	83 9f       	mul	r24, r19
    22e2:	a0 0d       	add	r26, r0
    22e4:	61 1d       	adc	r22, r1
    22e6:	22 1f       	adc	r18, r18
    22e8:	74 9f       	mul	r23, r20
    22ea:	33 27       	eor	r19, r19
    22ec:	a0 0d       	add	r26, r0
    22ee:	61 1d       	adc	r22, r1
    22f0:	23 1f       	adc	r18, r19
    22f2:	84 9f       	mul	r24, r20
    22f4:	60 0d       	add	r22, r0
    22f6:	21 1d       	adc	r18, r1
    22f8:	82 2f       	mov	r24, r18
    22fa:	76 2f       	mov	r23, r22
    22fc:	6a 2f       	mov	r22, r26
    22fe:	11 24       	eor	r1, r1
    2300:	9f 57       	subi	r25, 0x7F	; 127
    2302:	50 40       	sbci	r21, 0x00	; 0
    2304:	9a f0       	brmi	.+38     	; 0x232c <__mulsf3_pse+0x88>
    2306:	f1 f0       	breq	.+60     	; 0x2344 <__mulsf3_pse+0xa0>
    2308:	88 23       	and	r24, r24
    230a:	4a f0       	brmi	.+18     	; 0x231e <__mulsf3_pse+0x7a>
    230c:	ee 0f       	add	r30, r30
    230e:	ff 1f       	adc	r31, r31
    2310:	bb 1f       	adc	r27, r27
    2312:	66 1f       	adc	r22, r22
    2314:	77 1f       	adc	r23, r23
    2316:	88 1f       	adc	r24, r24
    2318:	91 50       	subi	r25, 0x01	; 1
    231a:	50 40       	sbci	r21, 0x00	; 0
    231c:	a9 f7       	brne	.-22     	; 0x2308 <__mulsf3_pse+0x64>
    231e:	9e 3f       	cpi	r25, 0xFE	; 254
    2320:	51 05       	cpc	r21, r1
    2322:	80 f0       	brcs	.+32     	; 0x2344 <__mulsf3_pse+0xa0>
    2324:	0c 94 eb 10 	jmp	0x21d6	; 0x21d6 <__fp_inf>
    2328:	0c 94 36 11 	jmp	0x226c	; 0x226c <__fp_szero>
    232c:	5f 3f       	cpi	r21, 0xFF	; 255
    232e:	e4 f3       	brlt	.-8      	; 0x2328 <__mulsf3_pse+0x84>
    2330:	98 3e       	cpi	r25, 0xE8	; 232
    2332:	d4 f3       	brlt	.-12     	; 0x2328 <__mulsf3_pse+0x84>
    2334:	86 95       	lsr	r24
    2336:	77 95       	ror	r23
    2338:	67 95       	ror	r22
    233a:	b7 95       	ror	r27
    233c:	f7 95       	ror	r31
    233e:	e7 95       	ror	r30
    2340:	9f 5f       	subi	r25, 0xFF	; 255
    2342:	c1 f7       	brne	.-16     	; 0x2334 <__mulsf3_pse+0x90>
    2344:	fe 2b       	or	r31, r30
    2346:	88 0f       	add	r24, r24
    2348:	91 1d       	adc	r25, r1
    234a:	96 95       	lsr	r25
    234c:	87 95       	ror	r24
    234e:	97 f9       	bld	r25, 7
    2350:	08 95       	ret

00002352 <__divmodhi4>:
    2352:	97 fb       	bst	r25, 7
    2354:	07 2e       	mov	r0, r23
    2356:	16 f4       	brtc	.+4      	; 0x235c <__divmodhi4+0xa>
    2358:	00 94       	com	r0
    235a:	07 d0       	rcall	.+14     	; 0x236a <__divmodhi4_neg1>
    235c:	77 fd       	sbrc	r23, 7
    235e:	09 d0       	rcall	.+18     	; 0x2372 <__divmodhi4_neg2>
    2360:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    2364:	07 fc       	sbrc	r0, 7
    2366:	05 d0       	rcall	.+10     	; 0x2372 <__divmodhi4_neg2>
    2368:	3e f4       	brtc	.+14     	; 0x2378 <__divmodhi4_exit>

0000236a <__divmodhi4_neg1>:
    236a:	90 95       	com	r25
    236c:	81 95       	neg	r24
    236e:	9f 4f       	sbci	r25, 0xFF	; 255
    2370:	08 95       	ret

00002372 <__divmodhi4_neg2>:
    2372:	70 95       	com	r23
    2374:	61 95       	neg	r22
    2376:	7f 4f       	sbci	r23, 0xFF	; 255

00002378 <__divmodhi4_exit>:
    2378:	08 95       	ret

0000237a <__umulhisi3>:
    237a:	a2 9f       	mul	r26, r18
    237c:	b0 01       	movw	r22, r0
    237e:	b3 9f       	mul	r27, r19
    2380:	c0 01       	movw	r24, r0
    2382:	a3 9f       	mul	r26, r19
    2384:	70 0d       	add	r23, r0
    2386:	81 1d       	adc	r24, r1
    2388:	11 24       	eor	r1, r1
    238a:	91 1d       	adc	r25, r1
    238c:	b2 9f       	mul	r27, r18
    238e:	70 0d       	add	r23, r0
    2390:	81 1d       	adc	r24, r1
    2392:	11 24       	eor	r1, r1
    2394:	91 1d       	adc	r25, r1
    2396:	08 95       	ret

00002398 <__udivmodhi4>:
    2398:	aa 1b       	sub	r26, r26
    239a:	bb 1b       	sub	r27, r27
    239c:	51 e1       	ldi	r21, 0x11	; 17
    239e:	07 c0       	rjmp	.+14     	; 0x23ae <__udivmodhi4_ep>

000023a0 <__udivmodhi4_loop>:
    23a0:	aa 1f       	adc	r26, r26
    23a2:	bb 1f       	adc	r27, r27
    23a4:	a6 17       	cp	r26, r22
    23a6:	b7 07       	cpc	r27, r23
    23a8:	10 f0       	brcs	.+4      	; 0x23ae <__udivmodhi4_ep>
    23aa:	a6 1b       	sub	r26, r22
    23ac:	b7 0b       	sbc	r27, r23

000023ae <__udivmodhi4_ep>:
    23ae:	88 1f       	adc	r24, r24
    23b0:	99 1f       	adc	r25, r25
    23b2:	5a 95       	dec	r21
    23b4:	a9 f7       	brne	.-22     	; 0x23a0 <__udivmodhi4_loop>
    23b6:	80 95       	com	r24
    23b8:	90 95       	com	r25
    23ba:	bc 01       	movw	r22, r24
    23bc:	cd 01       	movw	r24, r26
    23be:	08 95       	ret

000023c0 <malloc>:
    23c0:	0f 93       	push	r16
    23c2:	1f 93       	push	r17
    23c4:	cf 93       	push	r28
    23c6:	df 93       	push	r29
    23c8:	82 30       	cpi	r24, 0x02	; 2
    23ca:	91 05       	cpc	r25, r1
    23cc:	10 f4       	brcc	.+4      	; 0x23d2 <malloc+0x12>
    23ce:	82 e0       	ldi	r24, 0x02	; 2
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	e0 91 6e 04 	lds	r30, 0x046E	; 0x80046e <__flp>
    23d6:	f0 91 6f 04 	lds	r31, 0x046F	; 0x80046f <__flp+0x1>
    23da:	20 e0       	ldi	r18, 0x00	; 0
    23dc:	30 e0       	ldi	r19, 0x00	; 0
    23de:	a0 e0       	ldi	r26, 0x00	; 0
    23e0:	b0 e0       	ldi	r27, 0x00	; 0
    23e2:	30 97       	sbiw	r30, 0x00	; 0
    23e4:	19 f1       	breq	.+70     	; 0x242c <malloc+0x6c>
    23e6:	40 81       	ld	r20, Z
    23e8:	51 81       	ldd	r21, Z+1	; 0x01
    23ea:	02 81       	ldd	r16, Z+2	; 0x02
    23ec:	13 81       	ldd	r17, Z+3	; 0x03
    23ee:	48 17       	cp	r20, r24
    23f0:	59 07       	cpc	r21, r25
    23f2:	c8 f0       	brcs	.+50     	; 0x2426 <malloc+0x66>
    23f4:	84 17       	cp	r24, r20
    23f6:	95 07       	cpc	r25, r21
    23f8:	69 f4       	brne	.+26     	; 0x2414 <malloc+0x54>
    23fa:	10 97       	sbiw	r26, 0x00	; 0
    23fc:	31 f0       	breq	.+12     	; 0x240a <malloc+0x4a>
    23fe:	12 96       	adiw	r26, 0x02	; 2
    2400:	0c 93       	st	X, r16
    2402:	12 97       	sbiw	r26, 0x02	; 2
    2404:	13 96       	adiw	r26, 0x03	; 3
    2406:	1c 93       	st	X, r17
    2408:	27 c0       	rjmp	.+78     	; 0x2458 <malloc+0x98>
    240a:	00 93 6e 04 	sts	0x046E, r16	; 0x80046e <__flp>
    240e:	10 93 6f 04 	sts	0x046F, r17	; 0x80046f <__flp+0x1>
    2412:	22 c0       	rjmp	.+68     	; 0x2458 <malloc+0x98>
    2414:	21 15       	cp	r18, r1
    2416:	31 05       	cpc	r19, r1
    2418:	19 f0       	breq	.+6      	; 0x2420 <malloc+0x60>
    241a:	42 17       	cp	r20, r18
    241c:	53 07       	cpc	r21, r19
    241e:	18 f4       	brcc	.+6      	; 0x2426 <malloc+0x66>
    2420:	9a 01       	movw	r18, r20
    2422:	bd 01       	movw	r22, r26
    2424:	ef 01       	movw	r28, r30
    2426:	df 01       	movw	r26, r30
    2428:	f8 01       	movw	r30, r16
    242a:	db cf       	rjmp	.-74     	; 0x23e2 <malloc+0x22>
    242c:	21 15       	cp	r18, r1
    242e:	31 05       	cpc	r19, r1
    2430:	f9 f0       	breq	.+62     	; 0x2470 <malloc+0xb0>
    2432:	28 1b       	sub	r18, r24
    2434:	39 0b       	sbc	r19, r25
    2436:	24 30       	cpi	r18, 0x04	; 4
    2438:	31 05       	cpc	r19, r1
    243a:	80 f4       	brcc	.+32     	; 0x245c <malloc+0x9c>
    243c:	8a 81       	ldd	r24, Y+2	; 0x02
    243e:	9b 81       	ldd	r25, Y+3	; 0x03
    2440:	61 15       	cp	r22, r1
    2442:	71 05       	cpc	r23, r1
    2444:	21 f0       	breq	.+8      	; 0x244e <malloc+0x8e>
    2446:	fb 01       	movw	r30, r22
    2448:	93 83       	std	Z+3, r25	; 0x03
    244a:	82 83       	std	Z+2, r24	; 0x02
    244c:	04 c0       	rjmp	.+8      	; 0x2456 <malloc+0x96>
    244e:	90 93 6f 04 	sts	0x046F, r25	; 0x80046f <__flp+0x1>
    2452:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <__flp>
    2456:	fe 01       	movw	r30, r28
    2458:	32 96       	adiw	r30, 0x02	; 2
    245a:	44 c0       	rjmp	.+136    	; 0x24e4 <malloc+0x124>
    245c:	fe 01       	movw	r30, r28
    245e:	e2 0f       	add	r30, r18
    2460:	f3 1f       	adc	r31, r19
    2462:	81 93       	st	Z+, r24
    2464:	91 93       	st	Z+, r25
    2466:	22 50       	subi	r18, 0x02	; 2
    2468:	31 09       	sbc	r19, r1
    246a:	39 83       	std	Y+1, r19	; 0x01
    246c:	28 83       	st	Y, r18
    246e:	3a c0       	rjmp	.+116    	; 0x24e4 <malloc+0x124>
    2470:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    2474:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    2478:	23 2b       	or	r18, r19
    247a:	41 f4       	brne	.+16     	; 0x248c <malloc+0xcc>
    247c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2480:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2484:	30 93 6d 04 	sts	0x046D, r19	; 0x80046d <__brkval+0x1>
    2488:	20 93 6c 04 	sts	0x046C, r18	; 0x80046c <__brkval>
    248c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2490:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2494:	21 15       	cp	r18, r1
    2496:	31 05       	cpc	r19, r1
    2498:	41 f4       	brne	.+16     	; 0x24aa <malloc+0xea>
    249a:	2d b7       	in	r18, 0x3d	; 61
    249c:	3e b7       	in	r19, 0x3e	; 62
    249e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    24a2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    24a6:	24 1b       	sub	r18, r20
    24a8:	35 0b       	sbc	r19, r21
    24aa:	e0 91 6c 04 	lds	r30, 0x046C	; 0x80046c <__brkval>
    24ae:	f0 91 6d 04 	lds	r31, 0x046D	; 0x80046d <__brkval+0x1>
    24b2:	e2 17       	cp	r30, r18
    24b4:	f3 07       	cpc	r31, r19
    24b6:	a0 f4       	brcc	.+40     	; 0x24e0 <malloc+0x120>
    24b8:	2e 1b       	sub	r18, r30
    24ba:	3f 0b       	sbc	r19, r31
    24bc:	28 17       	cp	r18, r24
    24be:	39 07       	cpc	r19, r25
    24c0:	78 f0       	brcs	.+30     	; 0x24e0 <malloc+0x120>
    24c2:	ac 01       	movw	r20, r24
    24c4:	4e 5f       	subi	r20, 0xFE	; 254
    24c6:	5f 4f       	sbci	r21, 0xFF	; 255
    24c8:	24 17       	cp	r18, r20
    24ca:	35 07       	cpc	r19, r21
    24cc:	48 f0       	brcs	.+18     	; 0x24e0 <malloc+0x120>
    24ce:	4e 0f       	add	r20, r30
    24d0:	5f 1f       	adc	r21, r31
    24d2:	50 93 6d 04 	sts	0x046D, r21	; 0x80046d <__brkval+0x1>
    24d6:	40 93 6c 04 	sts	0x046C, r20	; 0x80046c <__brkval>
    24da:	81 93       	st	Z+, r24
    24dc:	91 93       	st	Z+, r25
    24de:	02 c0       	rjmp	.+4      	; 0x24e4 <malloc+0x124>
    24e0:	e0 e0       	ldi	r30, 0x00	; 0
    24e2:	f0 e0       	ldi	r31, 0x00	; 0
    24e4:	cf 01       	movw	r24, r30
    24e6:	df 91       	pop	r29
    24e8:	cf 91       	pop	r28
    24ea:	1f 91       	pop	r17
    24ec:	0f 91       	pop	r16
    24ee:	08 95       	ret

000024f0 <free>:
    24f0:	cf 93       	push	r28
    24f2:	df 93       	push	r29
    24f4:	00 97       	sbiw	r24, 0x00	; 0
    24f6:	09 f4       	brne	.+2      	; 0x24fa <free+0xa>
    24f8:	81 c0       	rjmp	.+258    	; 0x25fc <free+0x10c>
    24fa:	fc 01       	movw	r30, r24
    24fc:	32 97       	sbiw	r30, 0x02	; 2
    24fe:	13 82       	std	Z+3, r1	; 0x03
    2500:	12 82       	std	Z+2, r1	; 0x02
    2502:	a0 91 6e 04 	lds	r26, 0x046E	; 0x80046e <__flp>
    2506:	b0 91 6f 04 	lds	r27, 0x046F	; 0x80046f <__flp+0x1>
    250a:	10 97       	sbiw	r26, 0x00	; 0
    250c:	81 f4       	brne	.+32     	; 0x252e <free+0x3e>
    250e:	20 81       	ld	r18, Z
    2510:	31 81       	ldd	r19, Z+1	; 0x01
    2512:	82 0f       	add	r24, r18
    2514:	93 1f       	adc	r25, r19
    2516:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    251a:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    251e:	28 17       	cp	r18, r24
    2520:	39 07       	cpc	r19, r25
    2522:	51 f5       	brne	.+84     	; 0x2578 <free+0x88>
    2524:	f0 93 6d 04 	sts	0x046D, r31	; 0x80046d <__brkval+0x1>
    2528:	e0 93 6c 04 	sts	0x046C, r30	; 0x80046c <__brkval>
    252c:	67 c0       	rjmp	.+206    	; 0x25fc <free+0x10c>
    252e:	ed 01       	movw	r28, r26
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	30 e0       	ldi	r19, 0x00	; 0
    2534:	ce 17       	cp	r28, r30
    2536:	df 07       	cpc	r29, r31
    2538:	40 f4       	brcc	.+16     	; 0x254a <free+0x5a>
    253a:	4a 81       	ldd	r20, Y+2	; 0x02
    253c:	5b 81       	ldd	r21, Y+3	; 0x03
    253e:	9e 01       	movw	r18, r28
    2540:	41 15       	cp	r20, r1
    2542:	51 05       	cpc	r21, r1
    2544:	f1 f0       	breq	.+60     	; 0x2582 <free+0x92>
    2546:	ea 01       	movw	r28, r20
    2548:	f5 cf       	rjmp	.-22     	; 0x2534 <free+0x44>
    254a:	d3 83       	std	Z+3, r29	; 0x03
    254c:	c2 83       	std	Z+2, r28	; 0x02
    254e:	40 81       	ld	r20, Z
    2550:	51 81       	ldd	r21, Z+1	; 0x01
    2552:	84 0f       	add	r24, r20
    2554:	95 1f       	adc	r25, r21
    2556:	c8 17       	cp	r28, r24
    2558:	d9 07       	cpc	r29, r25
    255a:	59 f4       	brne	.+22     	; 0x2572 <free+0x82>
    255c:	88 81       	ld	r24, Y
    255e:	99 81       	ldd	r25, Y+1	; 0x01
    2560:	84 0f       	add	r24, r20
    2562:	95 1f       	adc	r25, r21
    2564:	02 96       	adiw	r24, 0x02	; 2
    2566:	91 83       	std	Z+1, r25	; 0x01
    2568:	80 83       	st	Z, r24
    256a:	8a 81       	ldd	r24, Y+2	; 0x02
    256c:	9b 81       	ldd	r25, Y+3	; 0x03
    256e:	93 83       	std	Z+3, r25	; 0x03
    2570:	82 83       	std	Z+2, r24	; 0x02
    2572:	21 15       	cp	r18, r1
    2574:	31 05       	cpc	r19, r1
    2576:	29 f4       	brne	.+10     	; 0x2582 <free+0x92>
    2578:	f0 93 6f 04 	sts	0x046F, r31	; 0x80046f <__flp+0x1>
    257c:	e0 93 6e 04 	sts	0x046E, r30	; 0x80046e <__flp>
    2580:	3d c0       	rjmp	.+122    	; 0x25fc <free+0x10c>
    2582:	e9 01       	movw	r28, r18
    2584:	fb 83       	std	Y+3, r31	; 0x03
    2586:	ea 83       	std	Y+2, r30	; 0x02
    2588:	49 91       	ld	r20, Y+
    258a:	59 91       	ld	r21, Y+
    258c:	c4 0f       	add	r28, r20
    258e:	d5 1f       	adc	r29, r21
    2590:	ec 17       	cp	r30, r28
    2592:	fd 07       	cpc	r31, r29
    2594:	61 f4       	brne	.+24     	; 0x25ae <free+0xbe>
    2596:	80 81       	ld	r24, Z
    2598:	91 81       	ldd	r25, Z+1	; 0x01
    259a:	84 0f       	add	r24, r20
    259c:	95 1f       	adc	r25, r21
    259e:	02 96       	adiw	r24, 0x02	; 2
    25a0:	e9 01       	movw	r28, r18
    25a2:	99 83       	std	Y+1, r25	; 0x01
    25a4:	88 83       	st	Y, r24
    25a6:	82 81       	ldd	r24, Z+2	; 0x02
    25a8:	93 81       	ldd	r25, Z+3	; 0x03
    25aa:	9b 83       	std	Y+3, r25	; 0x03
    25ac:	8a 83       	std	Y+2, r24	; 0x02
    25ae:	e0 e0       	ldi	r30, 0x00	; 0
    25b0:	f0 e0       	ldi	r31, 0x00	; 0
    25b2:	12 96       	adiw	r26, 0x02	; 2
    25b4:	8d 91       	ld	r24, X+
    25b6:	9c 91       	ld	r25, X
    25b8:	13 97       	sbiw	r26, 0x03	; 3
    25ba:	00 97       	sbiw	r24, 0x00	; 0
    25bc:	19 f0       	breq	.+6      	; 0x25c4 <free+0xd4>
    25be:	fd 01       	movw	r30, r26
    25c0:	dc 01       	movw	r26, r24
    25c2:	f7 cf       	rjmp	.-18     	; 0x25b2 <free+0xc2>
    25c4:	8d 91       	ld	r24, X+
    25c6:	9c 91       	ld	r25, X
    25c8:	11 97       	sbiw	r26, 0x01	; 1
    25ca:	9d 01       	movw	r18, r26
    25cc:	2e 5f       	subi	r18, 0xFE	; 254
    25ce:	3f 4f       	sbci	r19, 0xFF	; 255
    25d0:	82 0f       	add	r24, r18
    25d2:	93 1f       	adc	r25, r19
    25d4:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    25d8:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    25dc:	28 17       	cp	r18, r24
    25de:	39 07       	cpc	r19, r25
    25e0:	69 f4       	brne	.+26     	; 0x25fc <free+0x10c>
    25e2:	30 97       	sbiw	r30, 0x00	; 0
    25e4:	29 f4       	brne	.+10     	; 0x25f0 <free+0x100>
    25e6:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <__flp+0x1>
    25ea:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <__flp>
    25ee:	02 c0       	rjmp	.+4      	; 0x25f4 <free+0x104>
    25f0:	13 82       	std	Z+3, r1	; 0x03
    25f2:	12 82       	std	Z+2, r1	; 0x02
    25f4:	b0 93 6d 04 	sts	0x046D, r27	; 0x80046d <__brkval+0x1>
    25f8:	a0 93 6c 04 	sts	0x046C, r26	; 0x80046c <__brkval>
    25fc:	df 91       	pop	r29
    25fe:	cf 91       	pop	r28
    2600:	08 95       	ret

00002602 <realloc>:
    2602:	a0 e0       	ldi	r26, 0x00	; 0
    2604:	b0 e0       	ldi	r27, 0x00	; 0
    2606:	e7 e0       	ldi	r30, 0x07	; 7
    2608:	f3 e1       	ldi	r31, 0x13	; 19
    260a:	0c 94 ce 19 	jmp	0x339c	; 0x339c <__prologue_saves__+0x8>
    260e:	ec 01       	movw	r28, r24
    2610:	00 97       	sbiw	r24, 0x00	; 0
    2612:	21 f4       	brne	.+8      	; 0x261c <realloc+0x1a>
    2614:	cb 01       	movw	r24, r22
    2616:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <malloc>
    261a:	b4 c0       	rjmp	.+360    	; 0x2784 <realloc+0x182>
    261c:	fc 01       	movw	r30, r24
    261e:	e6 0f       	add	r30, r22
    2620:	f7 1f       	adc	r31, r23
    2622:	9c 01       	movw	r18, r24
    2624:	22 50       	subi	r18, 0x02	; 2
    2626:	31 09       	sbc	r19, r1
    2628:	e2 17       	cp	r30, r18
    262a:	f3 07       	cpc	r31, r19
    262c:	08 f4       	brcc	.+2      	; 0x2630 <realloc+0x2e>
    262e:	a8 c0       	rjmp	.+336    	; 0x2780 <realloc+0x17e>
    2630:	d9 01       	movw	r26, r18
    2632:	0d 91       	ld	r16, X+
    2634:	1c 91       	ld	r17, X
    2636:	11 97       	sbiw	r26, 0x01	; 1
    2638:	06 17       	cp	r16, r22
    263a:	17 07       	cpc	r17, r23
    263c:	b0 f0       	brcs	.+44     	; 0x266a <realloc+0x68>
    263e:	05 30       	cpi	r16, 0x05	; 5
    2640:	11 05       	cpc	r17, r1
    2642:	08 f4       	brcc	.+2      	; 0x2646 <realloc+0x44>
    2644:	9b c0       	rjmp	.+310    	; 0x277c <realloc+0x17a>
    2646:	c8 01       	movw	r24, r16
    2648:	04 97       	sbiw	r24, 0x04	; 4
    264a:	86 17       	cp	r24, r22
    264c:	97 07       	cpc	r25, r23
    264e:	08 f4       	brcc	.+2      	; 0x2652 <realloc+0x50>
    2650:	95 c0       	rjmp	.+298    	; 0x277c <realloc+0x17a>
    2652:	02 50       	subi	r16, 0x02	; 2
    2654:	11 09       	sbc	r17, r1
    2656:	06 1b       	sub	r16, r22
    2658:	17 0b       	sbc	r17, r23
    265a:	01 93       	st	Z+, r16
    265c:	11 93       	st	Z+, r17
    265e:	6d 93       	st	X+, r22
    2660:	7c 93       	st	X, r23
    2662:	cf 01       	movw	r24, r30
    2664:	0e 94 78 12 	call	0x24f0	; 0x24f0 <free>
    2668:	89 c0       	rjmp	.+274    	; 0x277c <realloc+0x17a>
    266a:	5b 01       	movw	r10, r22
    266c:	a0 1a       	sub	r10, r16
    266e:	b1 0a       	sbc	r11, r17
    2670:	4c 01       	movw	r8, r24
    2672:	80 0e       	add	r8, r16
    2674:	91 1e       	adc	r9, r17
    2676:	a0 91 6e 04 	lds	r26, 0x046E	; 0x80046e <__flp>
    267a:	b0 91 6f 04 	lds	r27, 0x046F	; 0x80046f <__flp+0x1>
    267e:	61 2c       	mov	r6, r1
    2680:	71 2c       	mov	r7, r1
    2682:	e1 2c       	mov	r14, r1
    2684:	f1 2c       	mov	r15, r1
    2686:	10 97       	sbiw	r26, 0x00	; 0
    2688:	09 f4       	brne	.+2      	; 0x268c <realloc+0x8a>
    268a:	46 c0       	rjmp	.+140    	; 0x2718 <realloc+0x116>
    268c:	8d 91       	ld	r24, X+
    268e:	9c 91       	ld	r25, X
    2690:	11 97       	sbiw	r26, 0x01	; 1
    2692:	a8 15       	cp	r26, r8
    2694:	b9 05       	cpc	r27, r9
    2696:	b1 f5       	brne	.+108    	; 0x2704 <realloc+0x102>
    2698:	6c 01       	movw	r12, r24
    269a:	42 e0       	ldi	r20, 0x02	; 2
    269c:	c4 0e       	add	r12, r20
    269e:	d1 1c       	adc	r13, r1
    26a0:	ca 14       	cp	r12, r10
    26a2:	db 04       	cpc	r13, r11
    26a4:	78 f1       	brcs	.+94     	; 0x2704 <realloc+0x102>
    26a6:	4c 01       	movw	r8, r24
    26a8:	8a 18       	sub	r8, r10
    26aa:	9b 08       	sbc	r9, r11
    26ac:	64 01       	movw	r12, r8
    26ae:	42 e0       	ldi	r20, 0x02	; 2
    26b0:	c4 0e       	add	r12, r20
    26b2:	d1 1c       	adc	r13, r1
    26b4:	12 96       	adiw	r26, 0x02	; 2
    26b6:	bc 90       	ld	r11, X
    26b8:	12 97       	sbiw	r26, 0x02	; 2
    26ba:	13 96       	adiw	r26, 0x03	; 3
    26bc:	ac 91       	ld	r26, X
    26be:	b5 e0       	ldi	r27, 0x05	; 5
    26c0:	cb 16       	cp	r12, r27
    26c2:	d1 04       	cpc	r13, r1
    26c4:	40 f0       	brcs	.+16     	; 0x26d6 <realloc+0xd4>
    26c6:	b2 82       	std	Z+2, r11	; 0x02
    26c8:	a3 83       	std	Z+3, r26	; 0x03
    26ca:	91 82       	std	Z+1, r9	; 0x01
    26cc:	80 82       	st	Z, r8
    26ce:	d9 01       	movw	r26, r18
    26d0:	6d 93       	st	X+, r22
    26d2:	7c 93       	st	X, r23
    26d4:	09 c0       	rjmp	.+18     	; 0x26e8 <realloc+0xe6>
    26d6:	0e 5f       	subi	r16, 0xFE	; 254
    26d8:	1f 4f       	sbci	r17, 0xFF	; 255
    26da:	80 0f       	add	r24, r16
    26dc:	91 1f       	adc	r25, r17
    26de:	f9 01       	movw	r30, r18
    26e0:	91 83       	std	Z+1, r25	; 0x01
    26e2:	80 83       	st	Z, r24
    26e4:	eb 2d       	mov	r30, r11
    26e6:	fa 2f       	mov	r31, r26
    26e8:	e1 14       	cp	r14, r1
    26ea:	f1 04       	cpc	r15, r1
    26ec:	31 f0       	breq	.+12     	; 0x26fa <realloc+0xf8>
    26ee:	d7 01       	movw	r26, r14
    26f0:	13 96       	adiw	r26, 0x03	; 3
    26f2:	fc 93       	st	X, r31
    26f4:	ee 93       	st	-X, r30
    26f6:	12 97       	sbiw	r26, 0x02	; 2
    26f8:	41 c0       	rjmp	.+130    	; 0x277c <realloc+0x17a>
    26fa:	f0 93 6f 04 	sts	0x046F, r31	; 0x80046f <__flp+0x1>
    26fe:	e0 93 6e 04 	sts	0x046E, r30	; 0x80046e <__flp>
    2702:	3c c0       	rjmp	.+120    	; 0x277c <realloc+0x17a>
    2704:	68 16       	cp	r6, r24
    2706:	79 06       	cpc	r7, r25
    2708:	08 f4       	brcc	.+2      	; 0x270c <realloc+0x10a>
    270a:	3c 01       	movw	r6, r24
    270c:	7d 01       	movw	r14, r26
    270e:	12 96       	adiw	r26, 0x02	; 2
    2710:	0d 90       	ld	r0, X+
    2712:	bc 91       	ld	r27, X
    2714:	a0 2d       	mov	r26, r0
    2716:	b7 cf       	rjmp	.-146    	; 0x2686 <realloc+0x84>
    2718:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <__brkval>
    271c:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <__brkval+0x1>
    2720:	88 16       	cp	r8, r24
    2722:	99 06       	cpc	r9, r25
    2724:	e1 f4       	brne	.+56     	; 0x275e <realloc+0x15c>
    2726:	66 16       	cp	r6, r22
    2728:	77 06       	cpc	r7, r23
    272a:	c8 f4       	brcc	.+50     	; 0x275e <realloc+0x15c>
    272c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2730:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    2734:	00 97       	sbiw	r24, 0x00	; 0
    2736:	41 f4       	brne	.+16     	; 0x2748 <realloc+0x146>
    2738:	8d b7       	in	r24, 0x3d	; 61
    273a:	9e b7       	in	r25, 0x3e	; 62
    273c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2740:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2744:	84 1b       	sub	r24, r20
    2746:	95 0b       	sbc	r25, r21
    2748:	e8 17       	cp	r30, r24
    274a:	f9 07       	cpc	r31, r25
    274c:	c8 f4       	brcc	.+50     	; 0x2780 <realloc+0x17e>
    274e:	f0 93 6d 04 	sts	0x046D, r31	; 0x80046d <__brkval+0x1>
    2752:	e0 93 6c 04 	sts	0x046C, r30	; 0x80046c <__brkval>
    2756:	f9 01       	movw	r30, r18
    2758:	71 83       	std	Z+1, r23	; 0x01
    275a:	60 83       	st	Z, r22
    275c:	0f c0       	rjmp	.+30     	; 0x277c <realloc+0x17a>
    275e:	cb 01       	movw	r24, r22
    2760:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <malloc>
    2764:	7c 01       	movw	r14, r24
    2766:	00 97       	sbiw	r24, 0x00	; 0
    2768:	59 f0       	breq	.+22     	; 0x2780 <realloc+0x17e>
    276a:	a8 01       	movw	r20, r16
    276c:	be 01       	movw	r22, r28
    276e:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <memcpy>
    2772:	ce 01       	movw	r24, r28
    2774:	0e 94 78 12 	call	0x24f0	; 0x24f0 <free>
    2778:	c7 01       	movw	r24, r14
    277a:	04 c0       	rjmp	.+8      	; 0x2784 <realloc+0x182>
    277c:	ce 01       	movw	r24, r28
    277e:	02 c0       	rjmp	.+4      	; 0x2784 <realloc+0x182>
    2780:	80 e0       	ldi	r24, 0x00	; 0
    2782:	90 e0       	ldi	r25, 0x00	; 0
    2784:	cd b7       	in	r28, 0x3d	; 61
    2786:	de b7       	in	r29, 0x3e	; 62
    2788:	ee e0       	ldi	r30, 0x0E	; 14
    278a:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__epilogue_restores__+0x8>

0000278e <strtod>:
    278e:	a0 e0       	ldi	r26, 0x00	; 0
    2790:	b0 e0       	ldi	r27, 0x00	; 0
    2792:	ed ec       	ldi	r30, 0xCD	; 205
    2794:	f3 e1       	ldi	r31, 0x13	; 19
    2796:	0c 94 d0 19 	jmp	0x33a0	; 0x33a0 <__prologue_saves__+0xc>
    279a:	ec 01       	movw	r28, r24
    279c:	6b 01       	movw	r12, r22
    279e:	61 15       	cp	r22, r1
    27a0:	71 05       	cpc	r23, r1
    27a2:	19 f0       	breq	.+6      	; 0x27aa <strtod+0x1c>
    27a4:	fb 01       	movw	r30, r22
    27a6:	91 83       	std	Z+1, r25	; 0x01
    27a8:	80 83       	st	Z, r24
    27aa:	7e 01       	movw	r14, r28
    27ac:	ff ef       	ldi	r31, 0xFF	; 255
    27ae:	ef 1a       	sub	r14, r31
    27b0:	ff 0a       	sbc	r15, r31
    27b2:	08 81       	ld	r16, Y
    27b4:	80 2f       	mov	r24, r16
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	0e 94 2b 16 	call	0x2c56	; 0x2c56 <isspace>
    27bc:	89 2b       	or	r24, r25
    27be:	11 f0       	breq	.+4      	; 0x27c4 <strtod+0x36>
    27c0:	e7 01       	movw	r28, r14
    27c2:	f3 cf       	rjmp	.-26     	; 0x27aa <strtod+0x1c>
    27c4:	0d 32       	cpi	r16, 0x2D	; 45
    27c6:	39 f4       	brne	.+14     	; 0x27d6 <strtod+0x48>
    27c8:	7e 01       	movw	r14, r28
    27ca:	82 e0       	ldi	r24, 0x02	; 2
    27cc:	e8 0e       	add	r14, r24
    27ce:	f1 1c       	adc	r15, r1
    27d0:	09 81       	ldd	r16, Y+1	; 0x01
    27d2:	11 e0       	ldi	r17, 0x01	; 1
    27d4:	08 c0       	rjmp	.+16     	; 0x27e6 <strtod+0x58>
    27d6:	0b 32       	cpi	r16, 0x2B	; 43
    27d8:	29 f4       	brne	.+10     	; 0x27e4 <strtod+0x56>
    27da:	7e 01       	movw	r14, r28
    27dc:	92 e0       	ldi	r25, 0x02	; 2
    27de:	e9 0e       	add	r14, r25
    27e0:	f1 1c       	adc	r15, r1
    27e2:	09 81       	ldd	r16, Y+1	; 0x01
    27e4:	10 e0       	ldi	r17, 0x00	; 0
    27e6:	e7 01       	movw	r28, r14
    27e8:	21 97       	sbiw	r28, 0x01	; 1
    27ea:	43 e0       	ldi	r20, 0x03	; 3
    27ec:	50 e0       	ldi	r21, 0x00	; 0
    27ee:	60 e7       	ldi	r22, 0x70	; 112
    27f0:	70 e0       	ldi	r23, 0x00	; 0
    27f2:	ce 01       	movw	r24, r28
    27f4:	0e 94 34 16 	call	0x2c68	; 0x2c68 <strncasecmp_P>
    27f8:	89 2b       	or	r24, r25
    27fa:	c1 f4       	brne	.+48     	; 0x282c <strtod+0x9e>
    27fc:	23 96       	adiw	r28, 0x03	; 3
    27fe:	45 e0       	ldi	r20, 0x05	; 5
    2800:	50 e0       	ldi	r21, 0x00	; 0
    2802:	6b e6       	ldi	r22, 0x6B	; 107
    2804:	70 e0       	ldi	r23, 0x00	; 0
    2806:	ce 01       	movw	r24, r28
    2808:	0e 94 34 16 	call	0x2c68	; 0x2c68 <strncasecmp_P>
    280c:	89 2b       	or	r24, r25
    280e:	09 f4       	brne	.+2      	; 0x2812 <strtod+0x84>
    2810:	25 96       	adiw	r28, 0x05	; 5
    2812:	c1 14       	cp	r12, r1
    2814:	d1 04       	cpc	r13, r1
    2816:	19 f0       	breq	.+6      	; 0x281e <strtod+0x90>
    2818:	f6 01       	movw	r30, r12
    281a:	d1 83       	std	Z+1, r29	; 0x01
    281c:	c0 83       	st	Z, r28
    281e:	11 11       	cpse	r17, r1
    2820:	f6 c0       	rjmp	.+492    	; 0x2a0e <strtod+0x280>
    2822:	60 e0       	ldi	r22, 0x00	; 0
    2824:	70 e0       	ldi	r23, 0x00	; 0
    2826:	80 e8       	ldi	r24, 0x80	; 128
    2828:	9f e7       	ldi	r25, 0x7F	; 127
    282a:	fa c0       	rjmp	.+500    	; 0x2a20 <strtod+0x292>
    282c:	43 e0       	ldi	r20, 0x03	; 3
    282e:	50 e0       	ldi	r21, 0x00	; 0
    2830:	68 e6       	ldi	r22, 0x68	; 104
    2832:	70 e0       	ldi	r23, 0x00	; 0
    2834:	ce 01       	movw	r24, r28
    2836:	0e 94 34 16 	call	0x2c68	; 0x2c68 <strncasecmp_P>
    283a:	89 2b       	or	r24, r25
    283c:	59 f4       	brne	.+22     	; 0x2854 <strtod+0xc6>
    283e:	c1 14       	cp	r12, r1
    2840:	d1 04       	cpc	r13, r1
    2842:	09 f4       	brne	.+2      	; 0x2846 <strtod+0xb8>
    2844:	e9 c0       	rjmp	.+466    	; 0x2a18 <strtod+0x28a>
    2846:	f2 e0       	ldi	r31, 0x02	; 2
    2848:	ef 0e       	add	r14, r31
    284a:	f1 1c       	adc	r15, r1
    284c:	f6 01       	movw	r30, r12
    284e:	f1 82       	std	Z+1, r15	; 0x01
    2850:	e0 82       	st	Z, r14
    2852:	e2 c0       	rjmp	.+452    	; 0x2a18 <strtod+0x28a>
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	30 e0       	ldi	r19, 0x00	; 0
    2858:	a9 01       	movw	r20, r18
    285a:	c0 e0       	ldi	r28, 0x00	; 0
    285c:	d0 e0       	ldi	r29, 0x00	; 0
    285e:	f7 01       	movw	r30, r14
    2860:	80 ed       	ldi	r24, 0xD0	; 208
    2862:	a8 2e       	mov	r10, r24
    2864:	a0 0e       	add	r10, r16
    2866:	89 e0       	ldi	r24, 0x09	; 9
    2868:	8a 15       	cp	r24, r10
    286a:	30 f1       	brcs	.+76     	; 0x28b8 <strtod+0x12a>
    286c:	91 2f       	mov	r25, r17
    286e:	92 60       	ori	r25, 0x02	; 2
    2870:	b9 2e       	mov	r11, r25
    2872:	81 2f       	mov	r24, r17
    2874:	88 70       	andi	r24, 0x08	; 8
    2876:	12 ff       	sbrs	r17, 2
    2878:	04 c0       	rjmp	.+8      	; 0x2882 <strtod+0xf4>
    287a:	81 11       	cpse	r24, r1
    287c:	24 c0       	rjmp	.+72     	; 0x28c6 <strtod+0x138>
    287e:	21 96       	adiw	r28, 0x01	; 1
    2880:	22 c0       	rjmp	.+68     	; 0x28c6 <strtod+0x138>
    2882:	81 11       	cpse	r24, r1
    2884:	21 97       	sbiw	r28, 0x01	; 1
    2886:	a5 e0       	ldi	r26, 0x05	; 5
    2888:	b0 e0       	ldi	r27, 0x00	; 0
    288a:	0e 94 bf 19 	call	0x337e	; 0x337e <__muluhisi3>
    288e:	dc 01       	movw	r26, r24
    2890:	cb 01       	movw	r24, r22
    2892:	88 0f       	add	r24, r24
    2894:	99 1f       	adc	r25, r25
    2896:	aa 1f       	adc	r26, r26
    2898:	bb 1f       	adc	r27, r27
    289a:	9c 01       	movw	r18, r24
    289c:	ad 01       	movw	r20, r26
    289e:	2a 0d       	add	r18, r10
    28a0:	31 1d       	adc	r19, r1
    28a2:	41 1d       	adc	r20, r1
    28a4:	51 1d       	adc	r21, r1
    28a6:	28 39       	cpi	r18, 0x98	; 152
    28a8:	89 e9       	ldi	r24, 0x99	; 153
    28aa:	38 07       	cpc	r19, r24
    28ac:	48 07       	cpc	r20, r24
    28ae:	89 e1       	ldi	r24, 0x19	; 25
    28b0:	58 07       	cpc	r21, r24
    28b2:	48 f0       	brcs	.+18     	; 0x28c6 <strtod+0x138>
    28b4:	16 60       	ori	r17, 0x06	; 6
    28b6:	06 c0       	rjmp	.+12     	; 0x28c4 <strtod+0x136>
    28b8:	9e ef       	ldi	r25, 0xFE	; 254
    28ba:	a9 12       	cpse	r10, r25
    28bc:	0a c0       	rjmp	.+20     	; 0x28d2 <strtod+0x144>
    28be:	13 fd       	sbrc	r17, 3
    28c0:	40 c0       	rjmp	.+128    	; 0x2942 <strtod+0x1b4>
    28c2:	18 60       	ori	r17, 0x08	; 8
    28c4:	b1 2e       	mov	r11, r17
    28c6:	8f ef       	ldi	r24, 0xFF	; 255
    28c8:	e8 1a       	sub	r14, r24
    28ca:	f8 0a       	sbc	r15, r24
    28cc:	00 81       	ld	r16, Z
    28ce:	1b 2d       	mov	r17, r11
    28d0:	c6 cf       	rjmp	.-116    	; 0x285e <strtod+0xd0>
    28d2:	80 2f       	mov	r24, r16
    28d4:	8f 7d       	andi	r24, 0xDF	; 223
    28d6:	85 34       	cpi	r24, 0x45	; 69
    28d8:	a1 f5       	brne	.+104    	; 0x2942 <strtod+0x1b4>
    28da:	80 81       	ld	r24, Z
    28dc:	8d 32       	cpi	r24, 0x2D	; 45
    28de:	11 f4       	brne	.+4      	; 0x28e4 <strtod+0x156>
    28e0:	10 61       	ori	r17, 0x10	; 16
    28e2:	06 c0       	rjmp	.+12     	; 0x28f0 <strtod+0x162>
    28e4:	8b 32       	cpi	r24, 0x2B	; 43
    28e6:	21 f0       	breq	.+8      	; 0x28f0 <strtod+0x162>
    28e8:	31 96       	adiw	r30, 0x01	; 1
    28ea:	61 e0       	ldi	r22, 0x01	; 1
    28ec:	70 e0       	ldi	r23, 0x00	; 0
    28ee:	04 c0       	rjmp	.+8      	; 0x28f8 <strtod+0x16a>
    28f0:	81 81       	ldd	r24, Z+1	; 0x01
    28f2:	32 96       	adiw	r30, 0x02	; 2
    28f4:	62 e0       	ldi	r22, 0x02	; 2
    28f6:	70 e0       	ldi	r23, 0x00	; 0
    28f8:	80 53       	subi	r24, 0x30	; 48
    28fa:	8a 30       	cpi	r24, 0x0A	; 10
    28fc:	18 f0       	brcs	.+6      	; 0x2904 <strtod+0x176>
    28fe:	e6 1b       	sub	r30, r22
    2900:	f7 0b       	sbc	r31, r23
    2902:	1f c0       	rjmp	.+62     	; 0x2942 <strtod+0x1b4>
    2904:	60 e0       	ldi	r22, 0x00	; 0
    2906:	70 e0       	ldi	r23, 0x00	; 0
    2908:	60 38       	cpi	r22, 0x80	; 128
    290a:	9c e0       	ldi	r25, 0x0C	; 12
    290c:	79 07       	cpc	r23, r25
    290e:	5c f4       	brge	.+22     	; 0x2926 <strtod+0x198>
    2910:	db 01       	movw	r26, r22
    2912:	aa 0f       	add	r26, r26
    2914:	bb 1f       	adc	r27, r27
    2916:	aa 0f       	add	r26, r26
    2918:	bb 1f       	adc	r27, r27
    291a:	6a 0f       	add	r22, r26
    291c:	7b 1f       	adc	r23, r27
    291e:	66 0f       	add	r22, r22
    2920:	77 1f       	adc	r23, r23
    2922:	68 0f       	add	r22, r24
    2924:	71 1d       	adc	r23, r1
    2926:	31 96       	adiw	r30, 0x01	; 1
    2928:	df 01       	movw	r26, r30
    292a:	11 97       	sbiw	r26, 0x01	; 1
    292c:	8c 91       	ld	r24, X
    292e:	80 53       	subi	r24, 0x30	; 48
    2930:	8a 30       	cpi	r24, 0x0A	; 10
    2932:	50 f3       	brcs	.-44     	; 0x2908 <strtod+0x17a>
    2934:	14 ff       	sbrs	r17, 4
    2936:	03 c0       	rjmp	.+6      	; 0x293e <strtod+0x1b0>
    2938:	71 95       	neg	r23
    293a:	61 95       	neg	r22
    293c:	71 09       	sbc	r23, r1
    293e:	c6 0f       	add	r28, r22
    2940:	d7 1f       	adc	r29, r23
    2942:	11 ff       	sbrs	r17, 1
    2944:	08 c0       	rjmp	.+16     	; 0x2956 <strtod+0x1c8>
    2946:	c1 14       	cp	r12, r1
    2948:	d1 04       	cpc	r13, r1
    294a:	29 f0       	breq	.+10     	; 0x2956 <strtod+0x1c8>
    294c:	cf 01       	movw	r24, r30
    294e:	01 97       	sbiw	r24, 0x01	; 1
    2950:	f6 01       	movw	r30, r12
    2952:	91 83       	std	Z+1, r25	; 0x01
    2954:	80 83       	st	Z, r24
    2956:	ca 01       	movw	r24, r20
    2958:	b9 01       	movw	r22, r18
    295a:	0e 94 ae 10 	call	0x215c	; 0x215c <__floatunsisf>
    295e:	21 2f       	mov	r18, r17
    2960:	23 70       	andi	r18, 0x03	; 3
    2962:	23 30       	cpi	r18, 0x03	; 3
    2964:	19 f0       	breq	.+6      	; 0x296c <strtod+0x1de>
    2966:	4b 01       	movw	r8, r22
    2968:	5c 01       	movw	r10, r24
    296a:	06 c0       	rjmp	.+12     	; 0x2978 <strtod+0x1ea>
    296c:	4b 01       	movw	r8, r22
    296e:	5c 01       	movw	r10, r24
    2970:	b7 fa       	bst	r11, 7
    2972:	b0 94       	com	r11
    2974:	b7 f8       	bld	r11, 7
    2976:	b0 94       	com	r11
    2978:	20 e0       	ldi	r18, 0x00	; 0
    297a:	30 e0       	ldi	r19, 0x00	; 0
    297c:	a9 01       	movw	r20, r18
    297e:	c5 01       	movw	r24, r10
    2980:	b4 01       	movw	r22, r8
    2982:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <__cmpsf2>
    2986:	88 23       	and	r24, r24
    2988:	09 f4       	brne	.+2      	; 0x298c <strtod+0x1fe>
    298a:	3e c0       	rjmp	.+124    	; 0x2a08 <strtod+0x27a>
    298c:	d7 ff       	sbrs	r29, 7
    298e:	06 c0       	rjmp	.+12     	; 0x299c <strtod+0x20e>
    2990:	d1 95       	neg	r29
    2992:	c1 95       	neg	r28
    2994:	d1 09       	sbc	r29, r1
    2996:	07 e8       	ldi	r16, 0x87	; 135
    2998:	10 e0       	ldi	r17, 0x00	; 0
    299a:	02 c0       	rjmp	.+4      	; 0x29a0 <strtod+0x212>
    299c:	0f e9       	ldi	r16, 0x9F	; 159
    299e:	10 e0       	ldi	r17, 0x00	; 0
    29a0:	68 01       	movw	r12, r16
    29a2:	f8 e1       	ldi	r31, 0x18	; 24
    29a4:	cf 1a       	sub	r12, r31
    29a6:	d1 08       	sbc	r13, r1
    29a8:	90 e2       	ldi	r25, 0x20	; 32
    29aa:	e9 2e       	mov	r14, r25
    29ac:	f1 2c       	mov	r15, r1
    29ae:	ce 15       	cp	r28, r14
    29b0:	df 05       	cpc	r29, r15
    29b2:	74 f0       	brlt	.+28     	; 0x29d0 <strtod+0x242>
    29b4:	f8 01       	movw	r30, r16
    29b6:	25 91       	lpm	r18, Z+
    29b8:	35 91       	lpm	r19, Z+
    29ba:	45 91       	lpm	r20, Z+
    29bc:	54 91       	lpm	r21, Z
    29be:	c5 01       	movw	r24, r10
    29c0:	b4 01       	movw	r22, r8
    29c2:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3>
    29c6:	4b 01       	movw	r8, r22
    29c8:	5c 01       	movw	r10, r24
    29ca:	ce 19       	sub	r28, r14
    29cc:	df 09       	sbc	r29, r15
    29ce:	ef cf       	rjmp	.-34     	; 0x29ae <strtod+0x220>
    29d0:	04 50       	subi	r16, 0x04	; 4
    29d2:	11 09       	sbc	r17, r1
    29d4:	f5 94       	asr	r15
    29d6:	e7 94       	ror	r14
    29d8:	0c 15       	cp	r16, r12
    29da:	1d 05       	cpc	r17, r13
    29dc:	41 f7       	brne	.-48     	; 0x29ae <strtod+0x220>
    29de:	8a 2d       	mov	r24, r10
    29e0:	88 0f       	add	r24, r24
    29e2:	8b 2d       	mov	r24, r11
    29e4:	88 1f       	adc	r24, r24
    29e6:	8f 3f       	cpi	r24, 0xFF	; 255
    29e8:	49 f0       	breq	.+18     	; 0x29fc <strtod+0x26e>
    29ea:	20 e0       	ldi	r18, 0x00	; 0
    29ec:	30 e0       	ldi	r19, 0x00	; 0
    29ee:	a9 01       	movw	r20, r18
    29f0:	c5 01       	movw	r24, r10
    29f2:	b4 01       	movw	r22, r8
    29f4:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <__cmpsf2>
    29f8:	81 11       	cpse	r24, r1
    29fa:	06 c0       	rjmp	.+12     	; 0x2a08 <strtod+0x27a>
    29fc:	82 e2       	ldi	r24, 0x22	; 34
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	90 93 71 04 	sts	0x0471, r25	; 0x800471 <errno+0x1>
    2a04:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <errno>
    2a08:	c5 01       	movw	r24, r10
    2a0a:	b4 01       	movw	r22, r8
    2a0c:	09 c0       	rjmp	.+18     	; 0x2a20 <strtod+0x292>
    2a0e:	60 e0       	ldi	r22, 0x00	; 0
    2a10:	70 e0       	ldi	r23, 0x00	; 0
    2a12:	80 e8       	ldi	r24, 0x80	; 128
    2a14:	9f ef       	ldi	r25, 0xFF	; 255
    2a16:	04 c0       	rjmp	.+8      	; 0x2a20 <strtod+0x292>
    2a18:	60 e0       	ldi	r22, 0x00	; 0
    2a1a:	70 e0       	ldi	r23, 0x00	; 0
    2a1c:	80 ec       	ldi	r24, 0xC0	; 192
    2a1e:	9f e7       	ldi	r25, 0x7F	; 127
    2a20:	cd b7       	in	r28, 0x3d	; 61
    2a22:	de b7       	in	r29, 0x3e	; 62
    2a24:	ec e0       	ldi	r30, 0x0C	; 12
    2a26:	0c 94 ec 19 	jmp	0x33d8	; 0x33d8 <__epilogue_restores__+0xc>

00002a2a <strtol>:
    2a2a:	a0 e0       	ldi	r26, 0x00	; 0
    2a2c:	b0 e0       	ldi	r27, 0x00	; 0
    2a2e:	eb e1       	ldi	r30, 0x1B	; 27
    2a30:	f5 e1       	ldi	r31, 0x15	; 21
    2a32:	0c 94 cb 19 	jmp	0x3396	; 0x3396 <__prologue_saves__+0x2>
    2a36:	5c 01       	movw	r10, r24
    2a38:	6b 01       	movw	r12, r22
    2a3a:	7a 01       	movw	r14, r20
    2a3c:	61 15       	cp	r22, r1
    2a3e:	71 05       	cpc	r23, r1
    2a40:	19 f0       	breq	.+6      	; 0x2a48 <strtol+0x1e>
    2a42:	fb 01       	movw	r30, r22
    2a44:	91 83       	std	Z+1, r25	; 0x01
    2a46:	80 83       	st	Z, r24
    2a48:	e1 14       	cp	r14, r1
    2a4a:	f1 04       	cpc	r15, r1
    2a4c:	29 f0       	breq	.+10     	; 0x2a58 <strtol+0x2e>
    2a4e:	c7 01       	movw	r24, r14
    2a50:	02 97       	sbiw	r24, 0x02	; 2
    2a52:	83 97       	sbiw	r24, 0x23	; 35
    2a54:	08 f0       	brcs	.+2      	; 0x2a58 <strtol+0x2e>
    2a56:	e5 c0       	rjmp	.+458    	; 0x2c22 <strtol+0x1f8>
    2a58:	e5 01       	movw	r28, r10
    2a5a:	21 96       	adiw	r28, 0x01	; 1
    2a5c:	f5 01       	movw	r30, r10
    2a5e:	10 81       	ld	r17, Z
    2a60:	81 2f       	mov	r24, r17
    2a62:	90 e0       	ldi	r25, 0x00	; 0
    2a64:	0e 94 2b 16 	call	0x2c56	; 0x2c56 <isspace>
    2a68:	89 2b       	or	r24, r25
    2a6a:	11 f0       	breq	.+4      	; 0x2a70 <strtol+0x46>
    2a6c:	5e 01       	movw	r10, r28
    2a6e:	f4 cf       	rjmp	.-24     	; 0x2a58 <strtol+0x2e>
    2a70:	1d 32       	cpi	r17, 0x2D	; 45
    2a72:	29 f4       	brne	.+10     	; 0x2a7e <strtol+0x54>
    2a74:	21 96       	adiw	r28, 0x01	; 1
    2a76:	f5 01       	movw	r30, r10
    2a78:	11 81       	ldd	r17, Z+1	; 0x01
    2a7a:	01 e0       	ldi	r16, 0x01	; 1
    2a7c:	07 c0       	rjmp	.+14     	; 0x2a8c <strtol+0x62>
    2a7e:	1b 32       	cpi	r17, 0x2B	; 43
    2a80:	21 f4       	brne	.+8      	; 0x2a8a <strtol+0x60>
    2a82:	e5 01       	movw	r28, r10
    2a84:	22 96       	adiw	r28, 0x02	; 2
    2a86:	f5 01       	movw	r30, r10
    2a88:	11 81       	ldd	r17, Z+1	; 0x01
    2a8a:	00 e0       	ldi	r16, 0x00	; 0
    2a8c:	e1 14       	cp	r14, r1
    2a8e:	f1 04       	cpc	r15, r1
    2a90:	09 f1       	breq	.+66     	; 0x2ad4 <strtol+0xaa>
    2a92:	f0 e1       	ldi	r31, 0x10	; 16
    2a94:	ef 16       	cp	r14, r31
    2a96:	f1 04       	cpc	r15, r1
    2a98:	29 f4       	brne	.+10     	; 0x2aa4 <strtol+0x7a>
    2a9a:	3f c0       	rjmp	.+126    	; 0x2b1a <strtol+0xf0>
    2a9c:	10 e3       	ldi	r17, 0x30	; 48
    2a9e:	e1 14       	cp	r14, r1
    2aa0:	f1 04       	cpc	r15, r1
    2aa2:	21 f1       	breq	.+72     	; 0x2aec <strtol+0xc2>
    2aa4:	28 e0       	ldi	r18, 0x08	; 8
    2aa6:	e2 16       	cp	r14, r18
    2aa8:	f1 04       	cpc	r15, r1
    2aaa:	01 f1       	breq	.+64     	; 0x2aec <strtol+0xc2>
    2aac:	54 f4       	brge	.+20     	; 0x2ac2 <strtol+0x98>
    2aae:	e2 e0       	ldi	r30, 0x02	; 2
    2ab0:	ee 16       	cp	r14, r30
    2ab2:	f1 04       	cpc	r15, r1
    2ab4:	21 f5       	brne	.+72     	; 0x2afe <strtol+0xd4>
    2ab6:	81 2c       	mov	r8, r1
    2ab8:	91 2c       	mov	r9, r1
    2aba:	a1 2c       	mov	r10, r1
    2abc:	b0 e4       	ldi	r27, 0x40	; 64
    2abe:	bb 2e       	mov	r11, r27
    2ac0:	3e c0       	rjmp	.+124    	; 0x2b3e <strtol+0x114>
    2ac2:	fa e0       	ldi	r31, 0x0A	; 10
    2ac4:	ef 16       	cp	r14, r31
    2ac6:	f1 04       	cpc	r15, r1
    2ac8:	39 f0       	breq	.+14     	; 0x2ad8 <strtol+0xae>
    2aca:	20 e1       	ldi	r18, 0x10	; 16
    2acc:	e2 16       	cp	r14, r18
    2ace:	f1 04       	cpc	r15, r1
    2ad0:	b1 f4       	brne	.+44     	; 0x2afe <strtol+0xd4>
    2ad2:	30 c0       	rjmp	.+96     	; 0x2b34 <strtol+0x10a>
    2ad4:	10 33       	cpi	r17, 0x30	; 48
    2ad6:	19 f1       	breq	.+70     	; 0x2b1e <strtol+0xf4>
    2ad8:	fa e0       	ldi	r31, 0x0A	; 10
    2ada:	ef 2e       	mov	r14, r31
    2adc:	f1 2c       	mov	r15, r1
    2ade:	ac ec       	ldi	r26, 0xCC	; 204
    2ae0:	8a 2e       	mov	r8, r26
    2ae2:	98 2c       	mov	r9, r8
    2ae4:	a8 2c       	mov	r10, r8
    2ae6:	ac e0       	ldi	r26, 0x0C	; 12
    2ae8:	ba 2e       	mov	r11, r26
    2aea:	29 c0       	rjmp	.+82     	; 0x2b3e <strtol+0x114>
    2aec:	78 e0       	ldi	r23, 0x08	; 8
    2aee:	e7 2e       	mov	r14, r23
    2af0:	f1 2c       	mov	r15, r1
    2af2:	81 2c       	mov	r8, r1
    2af4:	91 2c       	mov	r9, r1
    2af6:	a1 2c       	mov	r10, r1
    2af8:	e0 e1       	ldi	r30, 0x10	; 16
    2afa:	be 2e       	mov	r11, r30
    2afc:	20 c0       	rjmp	.+64     	; 0x2b3e <strtol+0x114>
    2afe:	60 e0       	ldi	r22, 0x00	; 0
    2b00:	70 e0       	ldi	r23, 0x00	; 0
    2b02:	80 e0       	ldi	r24, 0x00	; 0
    2b04:	90 e8       	ldi	r25, 0x80	; 128
    2b06:	97 01       	movw	r18, r14
    2b08:	0f 2c       	mov	r0, r15
    2b0a:	00 0c       	add	r0, r0
    2b0c:	44 0b       	sbc	r20, r20
    2b0e:	55 0b       	sbc	r21, r21
    2b10:	0e 94 9d 19 	call	0x333a	; 0x333a <__udivmodsi4>
    2b14:	49 01       	movw	r8, r18
    2b16:	5a 01       	movw	r10, r20
    2b18:	12 c0       	rjmp	.+36     	; 0x2b3e <strtol+0x114>
    2b1a:	10 33       	cpi	r17, 0x30	; 48
    2b1c:	59 f4       	brne	.+22     	; 0x2b34 <strtol+0x10a>
    2b1e:	88 81       	ld	r24, Y
    2b20:	8f 7d       	andi	r24, 0xDF	; 223
    2b22:	88 35       	cpi	r24, 0x58	; 88
    2b24:	09 f0       	breq	.+2      	; 0x2b28 <strtol+0xfe>
    2b26:	ba cf       	rjmp	.-140    	; 0x2a9c <strtol+0x72>
    2b28:	19 81       	ldd	r17, Y+1	; 0x01
    2b2a:	22 96       	adiw	r28, 0x02	; 2
    2b2c:	02 60       	ori	r16, 0x02	; 2
    2b2e:	80 e1       	ldi	r24, 0x10	; 16
    2b30:	e8 2e       	mov	r14, r24
    2b32:	f1 2c       	mov	r15, r1
    2b34:	81 2c       	mov	r8, r1
    2b36:	91 2c       	mov	r9, r1
    2b38:	a1 2c       	mov	r10, r1
    2b3a:	68 e0       	ldi	r22, 0x08	; 8
    2b3c:	b6 2e       	mov	r11, r22
    2b3e:	40 e0       	ldi	r20, 0x00	; 0
    2b40:	60 e0       	ldi	r22, 0x00	; 0
    2b42:	70 e0       	ldi	r23, 0x00	; 0
    2b44:	cb 01       	movw	r24, r22
    2b46:	27 01       	movw	r4, r14
    2b48:	0f 2c       	mov	r0, r15
    2b4a:	00 0c       	add	r0, r0
    2b4c:	66 08       	sbc	r6, r6
    2b4e:	77 08       	sbc	r7, r7
    2b50:	fe 01       	movw	r30, r28
    2b52:	50 ed       	ldi	r21, 0xD0	; 208
    2b54:	35 2e       	mov	r3, r21
    2b56:	31 0e       	add	r3, r17
    2b58:	29 e0       	ldi	r18, 0x09	; 9
    2b5a:	23 15       	cp	r18, r3
    2b5c:	70 f4       	brcc	.+28     	; 0x2b7a <strtol+0x150>
    2b5e:	2f eb       	ldi	r18, 0xBF	; 191
    2b60:	21 0f       	add	r18, r17
    2b62:	2a 31       	cpi	r18, 0x1A	; 26
    2b64:	18 f4       	brcc	.+6      	; 0x2b6c <strtol+0x142>
    2b66:	39 ec       	ldi	r19, 0xC9	; 201
    2b68:	33 2e       	mov	r3, r19
    2b6a:	06 c0       	rjmp	.+12     	; 0x2b78 <strtol+0x14e>
    2b6c:	2f e9       	ldi	r18, 0x9F	; 159
    2b6e:	21 0f       	add	r18, r17
    2b70:	2a 31       	cpi	r18, 0x1A	; 26
    2b72:	18 f5       	brcc	.+70     	; 0x2bba <strtol+0x190>
    2b74:	29 ea       	ldi	r18, 0xA9	; 169
    2b76:	32 2e       	mov	r3, r18
    2b78:	31 0e       	add	r3, r17
    2b7a:	23 2d       	mov	r18, r3
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	2e 15       	cp	r18, r14
    2b80:	3f 05       	cpc	r19, r15
    2b82:	dc f4       	brge	.+54     	; 0x2bba <strtol+0x190>
    2b84:	47 fd       	sbrc	r20, 7
    2b86:	16 c0       	rjmp	.+44     	; 0x2bb4 <strtol+0x18a>
    2b88:	86 16       	cp	r8, r22
    2b8a:	97 06       	cpc	r9, r23
    2b8c:	a8 06       	cpc	r10, r24
    2b8e:	b9 06       	cpc	r11, r25
    2b90:	70 f0       	brcs	.+28     	; 0x2bae <strtol+0x184>
    2b92:	a3 01       	movw	r20, r6
    2b94:	92 01       	movw	r18, r4
    2b96:	0e 94 8d 19 	call	0x331a	; 0x331a <__mulsi3>
    2b9a:	63 0d       	add	r22, r3
    2b9c:	71 1d       	adc	r23, r1
    2b9e:	81 1d       	adc	r24, r1
    2ba0:	91 1d       	adc	r25, r1
    2ba2:	61 30       	cpi	r22, 0x01	; 1
    2ba4:	71 05       	cpc	r23, r1
    2ba6:	81 05       	cpc	r24, r1
    2ba8:	20 e8       	ldi	r18, 0x80	; 128
    2baa:	92 07       	cpc	r25, r18
    2bac:	10 f0       	brcs	.+4      	; 0x2bb2 <strtol+0x188>
    2bae:	4f ef       	ldi	r20, 0xFF	; 255
    2bb0:	01 c0       	rjmp	.+2      	; 0x2bb4 <strtol+0x18a>
    2bb2:	41 e0       	ldi	r20, 0x01	; 1
    2bb4:	21 96       	adiw	r28, 0x01	; 1
    2bb6:	10 81       	ld	r17, Z
    2bb8:	cb cf       	rjmp	.-106    	; 0x2b50 <strtol+0x126>
    2bba:	20 2f       	mov	r18, r16
    2bbc:	21 70       	andi	r18, 0x01	; 1
    2bbe:	c1 14       	cp	r12, r1
    2bc0:	d1 04       	cpc	r13, r1
    2bc2:	71 f0       	breq	.+28     	; 0x2be0 <strtol+0x1b6>
    2bc4:	44 23       	and	r20, r20
    2bc6:	29 f0       	breq	.+10     	; 0x2bd2 <strtol+0x1a8>
    2bc8:	21 97       	sbiw	r28, 0x01	; 1
    2bca:	f6 01       	movw	r30, r12
    2bcc:	d1 83       	std	Z+1, r29	; 0x01
    2bce:	c0 83       	st	Z, r28
    2bd0:	07 c0       	rjmp	.+14     	; 0x2be0 <strtol+0x1b6>
    2bd2:	01 ff       	sbrs	r16, 1
    2bd4:	19 c0       	rjmp	.+50     	; 0x2c08 <strtol+0x1de>
    2bd6:	22 97       	sbiw	r28, 0x02	; 2
    2bd8:	f6 01       	movw	r30, r12
    2bda:	d1 83       	std	Z+1, r29	; 0x01
    2bdc:	c0 83       	st	Z, r28
    2bde:	14 c0       	rjmp	.+40     	; 0x2c08 <strtol+0x1de>
    2be0:	47 ff       	sbrs	r20, 7
    2be2:	12 c0       	rjmp	.+36     	; 0x2c08 <strtol+0x1de>
    2be4:	22 23       	and	r18, r18
    2be6:	29 f0       	breq	.+10     	; 0x2bf2 <strtol+0x1c8>
    2be8:	60 e0       	ldi	r22, 0x00	; 0
    2bea:	70 e0       	ldi	r23, 0x00	; 0
    2bec:	80 e0       	ldi	r24, 0x00	; 0
    2bee:	90 e8       	ldi	r25, 0x80	; 128
    2bf0:	04 c0       	rjmp	.+8      	; 0x2bfa <strtol+0x1d0>
    2bf2:	6f ef       	ldi	r22, 0xFF	; 255
    2bf4:	7f ef       	ldi	r23, 0xFF	; 255
    2bf6:	8f ef       	ldi	r24, 0xFF	; 255
    2bf8:	9f e7       	ldi	r25, 0x7F	; 127
    2bfa:	22 e2       	ldi	r18, 0x22	; 34
    2bfc:	30 e0       	ldi	r19, 0x00	; 0
    2bfe:	30 93 71 04 	sts	0x0471, r19	; 0x800471 <errno+0x1>
    2c02:	20 93 70 04 	sts	0x0470, r18	; 0x800470 <errno>
    2c06:	09 c0       	rjmp	.+18     	; 0x2c1a <strtol+0x1f0>
    2c08:	22 23       	and	r18, r18
    2c0a:	81 f0       	breq	.+32     	; 0x2c2c <strtol+0x202>
    2c0c:	90 95       	com	r25
    2c0e:	80 95       	com	r24
    2c10:	70 95       	com	r23
    2c12:	61 95       	neg	r22
    2c14:	7f 4f       	sbci	r23, 0xFF	; 255
    2c16:	8f 4f       	sbci	r24, 0xFF	; 255
    2c18:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1a:	46 2f       	mov	r20, r22
    2c1c:	37 2f       	mov	r19, r23
    2c1e:	28 2f       	mov	r18, r24
    2c20:	12 c0       	rjmp	.+36     	; 0x2c46 <strtol+0x21c>
    2c22:	40 e0       	ldi	r20, 0x00	; 0
    2c24:	30 e0       	ldi	r19, 0x00	; 0
    2c26:	20 e0       	ldi	r18, 0x00	; 0
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	0d c0       	rjmp	.+26     	; 0x2c46 <strtol+0x21c>
    2c2c:	97 ff       	sbrs	r25, 7
    2c2e:	f5 cf       	rjmp	.-22     	; 0x2c1a <strtol+0x1f0>
    2c30:	82 e2       	ldi	r24, 0x22	; 34
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	90 93 71 04 	sts	0x0471, r25	; 0x800471 <errno+0x1>
    2c38:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <errno>
    2c3c:	6f ef       	ldi	r22, 0xFF	; 255
    2c3e:	7f ef       	ldi	r23, 0xFF	; 255
    2c40:	8f ef       	ldi	r24, 0xFF	; 255
    2c42:	9f e7       	ldi	r25, 0x7F	; 127
    2c44:	ea cf       	rjmp	.-44     	; 0x2c1a <strtol+0x1f0>
    2c46:	64 2f       	mov	r22, r20
    2c48:	73 2f       	mov	r23, r19
    2c4a:	82 2f       	mov	r24, r18
    2c4c:	cd b7       	in	r28, 0x3d	; 61
    2c4e:	de b7       	in	r29, 0x3e	; 62
    2c50:	e1 e1       	ldi	r30, 0x11	; 17
    2c52:	0c 94 e7 19 	jmp	0x33ce	; 0x33ce <__epilogue_restores__+0x2>

00002c56 <isspace>:
    2c56:	91 11       	cpse	r25, r1
    2c58:	0c 94 ca 18 	jmp	0x3194	; 0x3194 <__ctype_isfalse>
    2c5c:	80 32       	cpi	r24, 0x20	; 32
    2c5e:	19 f0       	breq	.+6      	; 0x2c66 <isspace+0x10>
    2c60:	89 50       	subi	r24, 0x09	; 9
    2c62:	85 50       	subi	r24, 0x05	; 5
    2c64:	c8 f7       	brcc	.-14     	; 0x2c58 <isspace+0x2>
    2c66:	08 95       	ret

00002c68 <strncasecmp_P>:
    2c68:	fb 01       	movw	r30, r22
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	41 50       	subi	r20, 0x01	; 1
    2c6e:	50 40       	sbci	r21, 0x00	; 0
    2c70:	88 f0       	brcs	.+34     	; 0x2c94 <strncasecmp_P+0x2c>
    2c72:	8d 91       	ld	r24, X+
    2c74:	81 34       	cpi	r24, 0x41	; 65
    2c76:	1c f0       	brlt	.+6      	; 0x2c7e <strncasecmp_P+0x16>
    2c78:	8b 35       	cpi	r24, 0x5B	; 91
    2c7a:	0c f4       	brge	.+2      	; 0x2c7e <strncasecmp_P+0x16>
    2c7c:	80 5e       	subi	r24, 0xE0	; 224
    2c7e:	65 91       	lpm	r22, Z+
    2c80:	61 34       	cpi	r22, 0x41	; 65
    2c82:	1c f0       	brlt	.+6      	; 0x2c8a <strncasecmp_P+0x22>
    2c84:	6b 35       	cpi	r22, 0x5B	; 91
    2c86:	0c f4       	brge	.+2      	; 0x2c8a <strncasecmp_P+0x22>
    2c88:	60 5e       	subi	r22, 0xE0	; 224
    2c8a:	86 1b       	sub	r24, r22
    2c8c:	61 11       	cpse	r22, r1
    2c8e:	71 f3       	breq	.-36     	; 0x2c6c <strncasecmp_P+0x4>
    2c90:	99 0b       	sbc	r25, r25
    2c92:	08 95       	ret
    2c94:	88 1b       	sub	r24, r24
    2c96:	fc cf       	rjmp	.-8      	; 0x2c90 <strncasecmp_P+0x28>

00002c98 <memcmp>:
    2c98:	fb 01       	movw	r30, r22
    2c9a:	dc 01       	movw	r26, r24
    2c9c:	04 c0       	rjmp	.+8      	; 0x2ca6 <memcmp+0xe>
    2c9e:	8d 91       	ld	r24, X+
    2ca0:	01 90       	ld	r0, Z+
    2ca2:	80 19       	sub	r24, r0
    2ca4:	21 f4       	brne	.+8      	; 0x2cae <memcmp+0x16>
    2ca6:	41 50       	subi	r20, 0x01	; 1
    2ca8:	50 40       	sbci	r21, 0x00	; 0
    2caa:	c8 f7       	brcc	.-14     	; 0x2c9e <memcmp+0x6>
    2cac:	88 1b       	sub	r24, r24
    2cae:	99 0b       	sbc	r25, r25
    2cb0:	08 95       	ret

00002cb2 <memcpy>:
    2cb2:	fb 01       	movw	r30, r22
    2cb4:	dc 01       	movw	r26, r24
    2cb6:	02 c0       	rjmp	.+4      	; 0x2cbc <memcpy+0xa>
    2cb8:	01 90       	ld	r0, Z+
    2cba:	0d 92       	st	X+, r0
    2cbc:	41 50       	subi	r20, 0x01	; 1
    2cbe:	50 40       	sbci	r21, 0x00	; 0
    2cc0:	d8 f7       	brcc	.-10     	; 0x2cb8 <memcpy+0x6>
    2cc2:	08 95       	ret

00002cc4 <strcmp>:
    2cc4:	fb 01       	movw	r30, r22
    2cc6:	dc 01       	movw	r26, r24
    2cc8:	8d 91       	ld	r24, X+
    2cca:	01 90       	ld	r0, Z+
    2ccc:	80 19       	sub	r24, r0
    2cce:	01 10       	cpse	r0, r1
    2cd0:	d9 f3       	breq	.-10     	; 0x2cc8 <strcmp+0x4>
    2cd2:	99 0b       	sbc	r25, r25
    2cd4:	08 95       	ret

00002cd6 <__itoa_ncheck>:
    2cd6:	bb 27       	eor	r27, r27
    2cd8:	4a 30       	cpi	r20, 0x0A	; 10
    2cda:	31 f4       	brne	.+12     	; 0x2ce8 <__itoa_ncheck+0x12>
    2cdc:	99 23       	and	r25, r25
    2cde:	22 f4       	brpl	.+8      	; 0x2ce8 <__itoa_ncheck+0x12>
    2ce0:	bd e2       	ldi	r27, 0x2D	; 45
    2ce2:	90 95       	com	r25
    2ce4:	81 95       	neg	r24
    2ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ce8:	0c 94 77 16 	jmp	0x2cee	; 0x2cee <__utoa_common>

00002cec <__utoa_ncheck>:
    2cec:	bb 27       	eor	r27, r27

00002cee <__utoa_common>:
    2cee:	fb 01       	movw	r30, r22
    2cf0:	55 27       	eor	r21, r21
    2cf2:	aa 27       	eor	r26, r26
    2cf4:	88 0f       	add	r24, r24
    2cf6:	99 1f       	adc	r25, r25
    2cf8:	aa 1f       	adc	r26, r26
    2cfa:	a4 17       	cp	r26, r20
    2cfc:	10 f0       	brcs	.+4      	; 0x2d02 <__utoa_common+0x14>
    2cfe:	a4 1b       	sub	r26, r20
    2d00:	83 95       	inc	r24
    2d02:	50 51       	subi	r21, 0x10	; 16
    2d04:	b9 f7       	brne	.-18     	; 0x2cf4 <__utoa_common+0x6>
    2d06:	a0 5d       	subi	r26, 0xD0	; 208
    2d08:	aa 33       	cpi	r26, 0x3A	; 58
    2d0a:	08 f0       	brcs	.+2      	; 0x2d0e <__utoa_common+0x20>
    2d0c:	a9 5d       	subi	r26, 0xD9	; 217
    2d0e:	a1 93       	st	Z+, r26
    2d10:	00 97       	sbiw	r24, 0x00	; 0
    2d12:	79 f7       	brne	.-34     	; 0x2cf2 <__utoa_common+0x4>
    2d14:	b1 11       	cpse	r27, r1
    2d16:	b1 93       	st	Z+, r27
    2d18:	11 92       	st	Z+, r1
    2d1a:	cb 01       	movw	r24, r22
    2d1c:	0c 94 e3 18 	jmp	0x31c6	; 0x31c6 <strrev>

00002d20 <snprintf>:
    2d20:	ae e0       	ldi	r26, 0x0E	; 14
    2d22:	b0 e0       	ldi	r27, 0x00	; 0
    2d24:	e6 e9       	ldi	r30, 0x96	; 150
    2d26:	f6 e1       	ldi	r31, 0x16	; 22
    2d28:	0c 94 d8 19 	jmp	0x33b0	; 0x33b0 <__prologue_saves__+0x1c>
    2d2c:	0d 89       	ldd	r16, Y+21	; 0x15
    2d2e:	1e 89       	ldd	r17, Y+22	; 0x16
    2d30:	8f 89       	ldd	r24, Y+23	; 0x17
    2d32:	98 8d       	ldd	r25, Y+24	; 0x18
    2d34:	26 e0       	ldi	r18, 0x06	; 6
    2d36:	2c 83       	std	Y+4, r18	; 0x04
    2d38:	1a 83       	std	Y+2, r17	; 0x02
    2d3a:	09 83       	std	Y+1, r16	; 0x01
    2d3c:	97 ff       	sbrs	r25, 7
    2d3e:	02 c0       	rjmp	.+4      	; 0x2d44 <snprintf+0x24>
    2d40:	80 e0       	ldi	r24, 0x00	; 0
    2d42:	90 e8       	ldi	r25, 0x80	; 128
    2d44:	01 97       	sbiw	r24, 0x01	; 1
    2d46:	9e 83       	std	Y+6, r25	; 0x06
    2d48:	8d 83       	std	Y+5, r24	; 0x05
    2d4a:	ae 01       	movw	r20, r28
    2d4c:	45 5e       	subi	r20, 0xE5	; 229
    2d4e:	5f 4f       	sbci	r21, 0xFF	; 255
    2d50:	69 8d       	ldd	r22, Y+25	; 0x19
    2d52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d54:	ce 01       	movw	r24, r28
    2d56:	01 96       	adiw	r24, 0x01	; 1
    2d58:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <vfprintf>
    2d5c:	4d 81       	ldd	r20, Y+5	; 0x05
    2d5e:	5e 81       	ldd	r21, Y+6	; 0x06
    2d60:	57 fd       	sbrc	r21, 7
    2d62:	0a c0       	rjmp	.+20     	; 0x2d78 <snprintf+0x58>
    2d64:	2f 81       	ldd	r18, Y+7	; 0x07
    2d66:	38 85       	ldd	r19, Y+8	; 0x08
    2d68:	42 17       	cp	r20, r18
    2d6a:	53 07       	cpc	r21, r19
    2d6c:	0c f4       	brge	.+2      	; 0x2d70 <snprintf+0x50>
    2d6e:	9a 01       	movw	r18, r20
    2d70:	f8 01       	movw	r30, r16
    2d72:	e2 0f       	add	r30, r18
    2d74:	f3 1f       	adc	r31, r19
    2d76:	10 82       	st	Z, r1
    2d78:	2e 96       	adiw	r28, 0x0e	; 14
    2d7a:	e4 e0       	ldi	r30, 0x04	; 4
    2d7c:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__epilogue_restores__+0x1c>

00002d80 <__cmpsf2>:
    2d80:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__fp_cmp>
    2d84:	08 f4       	brcc	.+2      	; 0x2d88 <__cmpsf2+0x8>
    2d86:	81 e0       	ldi	r24, 0x01	; 1
    2d88:	08 95       	ret

00002d8a <__fp_cmp>:
    2d8a:	99 0f       	add	r25, r25
    2d8c:	00 08       	sbc	r0, r0
    2d8e:	55 0f       	add	r21, r21
    2d90:	aa 0b       	sbc	r26, r26
    2d92:	e0 e8       	ldi	r30, 0x80	; 128
    2d94:	fe ef       	ldi	r31, 0xFE	; 254
    2d96:	16 16       	cp	r1, r22
    2d98:	17 06       	cpc	r1, r23
    2d9a:	e8 07       	cpc	r30, r24
    2d9c:	f9 07       	cpc	r31, r25
    2d9e:	c0 f0       	brcs	.+48     	; 0x2dd0 <__fp_cmp+0x46>
    2da0:	12 16       	cp	r1, r18
    2da2:	13 06       	cpc	r1, r19
    2da4:	e4 07       	cpc	r30, r20
    2da6:	f5 07       	cpc	r31, r21
    2da8:	98 f0       	brcs	.+38     	; 0x2dd0 <__fp_cmp+0x46>
    2daa:	62 1b       	sub	r22, r18
    2dac:	73 0b       	sbc	r23, r19
    2dae:	84 0b       	sbc	r24, r20
    2db0:	95 0b       	sbc	r25, r21
    2db2:	39 f4       	brne	.+14     	; 0x2dc2 <__fp_cmp+0x38>
    2db4:	0a 26       	eor	r0, r26
    2db6:	61 f0       	breq	.+24     	; 0x2dd0 <__fp_cmp+0x46>
    2db8:	23 2b       	or	r18, r19
    2dba:	24 2b       	or	r18, r20
    2dbc:	25 2b       	or	r18, r21
    2dbe:	21 f4       	brne	.+8      	; 0x2dc8 <__fp_cmp+0x3e>
    2dc0:	08 95       	ret
    2dc2:	0a 26       	eor	r0, r26
    2dc4:	09 f4       	brne	.+2      	; 0x2dc8 <__fp_cmp+0x3e>
    2dc6:	a1 40       	sbci	r26, 0x01	; 1
    2dc8:	a6 95       	lsr	r26
    2dca:	8f ef       	ldi	r24, 0xFF	; 255
    2dcc:	81 1d       	adc	r24, r1
    2dce:	81 1d       	adc	r24, r1
    2dd0:	08 95       	ret

00002dd2 <vfprintf>:
    2dd2:	ab e0       	ldi	r26, 0x0B	; 11
    2dd4:	b0 e0       	ldi	r27, 0x00	; 0
    2dd6:	ef ee       	ldi	r30, 0xEF	; 239
    2dd8:	f6 e1       	ldi	r31, 0x16	; 22
    2dda:	0c 94 ca 19 	jmp	0x3394	; 0x3394 <__prologue_saves__>
    2dde:	6c 01       	movw	r12, r24
    2de0:	7b 01       	movw	r14, r22
    2de2:	8a 01       	movw	r16, r20
    2de4:	fc 01       	movw	r30, r24
    2de6:	17 82       	std	Z+7, r1	; 0x07
    2de8:	16 82       	std	Z+6, r1	; 0x06
    2dea:	83 81       	ldd	r24, Z+3	; 0x03
    2dec:	81 ff       	sbrs	r24, 1
    2dee:	cc c1       	rjmp	.+920    	; 0x3188 <vfprintf+0x3b6>
    2df0:	ce 01       	movw	r24, r28
    2df2:	01 96       	adiw	r24, 0x01	; 1
    2df4:	3c 01       	movw	r6, r24
    2df6:	f6 01       	movw	r30, r12
    2df8:	93 81       	ldd	r25, Z+3	; 0x03
    2dfa:	f7 01       	movw	r30, r14
    2dfc:	93 fd       	sbrc	r25, 3
    2dfe:	85 91       	lpm	r24, Z+
    2e00:	93 ff       	sbrs	r25, 3
    2e02:	81 91       	ld	r24, Z+
    2e04:	7f 01       	movw	r14, r30
    2e06:	88 23       	and	r24, r24
    2e08:	09 f4       	brne	.+2      	; 0x2e0c <vfprintf+0x3a>
    2e0a:	ba c1       	rjmp	.+884    	; 0x3180 <vfprintf+0x3ae>
    2e0c:	85 32       	cpi	r24, 0x25	; 37
    2e0e:	39 f4       	brne	.+14     	; 0x2e1e <vfprintf+0x4c>
    2e10:	93 fd       	sbrc	r25, 3
    2e12:	85 91       	lpm	r24, Z+
    2e14:	93 ff       	sbrs	r25, 3
    2e16:	81 91       	ld	r24, Z+
    2e18:	7f 01       	movw	r14, r30
    2e1a:	85 32       	cpi	r24, 0x25	; 37
    2e1c:	29 f4       	brne	.+10     	; 0x2e28 <vfprintf+0x56>
    2e1e:	b6 01       	movw	r22, r12
    2e20:	90 e0       	ldi	r25, 0x00	; 0
    2e22:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    2e26:	e7 cf       	rjmp	.-50     	; 0x2df6 <vfprintf+0x24>
    2e28:	91 2c       	mov	r9, r1
    2e2a:	21 2c       	mov	r2, r1
    2e2c:	31 2c       	mov	r3, r1
    2e2e:	ff e1       	ldi	r31, 0x1F	; 31
    2e30:	f3 15       	cp	r31, r3
    2e32:	d8 f0       	brcs	.+54     	; 0x2e6a <vfprintf+0x98>
    2e34:	8b 32       	cpi	r24, 0x2B	; 43
    2e36:	79 f0       	breq	.+30     	; 0x2e56 <vfprintf+0x84>
    2e38:	38 f4       	brcc	.+14     	; 0x2e48 <vfprintf+0x76>
    2e3a:	80 32       	cpi	r24, 0x20	; 32
    2e3c:	79 f0       	breq	.+30     	; 0x2e5c <vfprintf+0x8a>
    2e3e:	83 32       	cpi	r24, 0x23	; 35
    2e40:	a1 f4       	brne	.+40     	; 0x2e6a <vfprintf+0x98>
    2e42:	23 2d       	mov	r18, r3
    2e44:	20 61       	ori	r18, 0x10	; 16
    2e46:	1d c0       	rjmp	.+58     	; 0x2e82 <vfprintf+0xb0>
    2e48:	8d 32       	cpi	r24, 0x2D	; 45
    2e4a:	61 f0       	breq	.+24     	; 0x2e64 <vfprintf+0x92>
    2e4c:	80 33       	cpi	r24, 0x30	; 48
    2e4e:	69 f4       	brne	.+26     	; 0x2e6a <vfprintf+0x98>
    2e50:	23 2d       	mov	r18, r3
    2e52:	21 60       	ori	r18, 0x01	; 1
    2e54:	16 c0       	rjmp	.+44     	; 0x2e82 <vfprintf+0xb0>
    2e56:	83 2d       	mov	r24, r3
    2e58:	82 60       	ori	r24, 0x02	; 2
    2e5a:	38 2e       	mov	r3, r24
    2e5c:	e3 2d       	mov	r30, r3
    2e5e:	e4 60       	ori	r30, 0x04	; 4
    2e60:	3e 2e       	mov	r3, r30
    2e62:	2a c0       	rjmp	.+84     	; 0x2eb8 <vfprintf+0xe6>
    2e64:	f3 2d       	mov	r31, r3
    2e66:	f8 60       	ori	r31, 0x08	; 8
    2e68:	1d c0       	rjmp	.+58     	; 0x2ea4 <vfprintf+0xd2>
    2e6a:	37 fc       	sbrc	r3, 7
    2e6c:	2d c0       	rjmp	.+90     	; 0x2ec8 <vfprintf+0xf6>
    2e6e:	20 ed       	ldi	r18, 0xD0	; 208
    2e70:	28 0f       	add	r18, r24
    2e72:	2a 30       	cpi	r18, 0x0A	; 10
    2e74:	40 f0       	brcs	.+16     	; 0x2e86 <vfprintf+0xb4>
    2e76:	8e 32       	cpi	r24, 0x2E	; 46
    2e78:	b9 f4       	brne	.+46     	; 0x2ea8 <vfprintf+0xd6>
    2e7a:	36 fc       	sbrc	r3, 6
    2e7c:	81 c1       	rjmp	.+770    	; 0x3180 <vfprintf+0x3ae>
    2e7e:	23 2d       	mov	r18, r3
    2e80:	20 64       	ori	r18, 0x40	; 64
    2e82:	32 2e       	mov	r3, r18
    2e84:	19 c0       	rjmp	.+50     	; 0x2eb8 <vfprintf+0xe6>
    2e86:	36 fe       	sbrs	r3, 6
    2e88:	06 c0       	rjmp	.+12     	; 0x2e96 <vfprintf+0xc4>
    2e8a:	8a e0       	ldi	r24, 0x0A	; 10
    2e8c:	98 9e       	mul	r9, r24
    2e8e:	20 0d       	add	r18, r0
    2e90:	11 24       	eor	r1, r1
    2e92:	92 2e       	mov	r9, r18
    2e94:	11 c0       	rjmp	.+34     	; 0x2eb8 <vfprintf+0xe6>
    2e96:	ea e0       	ldi	r30, 0x0A	; 10
    2e98:	2e 9e       	mul	r2, r30
    2e9a:	20 0d       	add	r18, r0
    2e9c:	11 24       	eor	r1, r1
    2e9e:	22 2e       	mov	r2, r18
    2ea0:	f3 2d       	mov	r31, r3
    2ea2:	f0 62       	ori	r31, 0x20	; 32
    2ea4:	3f 2e       	mov	r3, r31
    2ea6:	08 c0       	rjmp	.+16     	; 0x2eb8 <vfprintf+0xe6>
    2ea8:	8c 36       	cpi	r24, 0x6C	; 108
    2eaa:	21 f4       	brne	.+8      	; 0x2eb4 <vfprintf+0xe2>
    2eac:	83 2d       	mov	r24, r3
    2eae:	80 68       	ori	r24, 0x80	; 128
    2eb0:	38 2e       	mov	r3, r24
    2eb2:	02 c0       	rjmp	.+4      	; 0x2eb8 <vfprintf+0xe6>
    2eb4:	88 36       	cpi	r24, 0x68	; 104
    2eb6:	41 f4       	brne	.+16     	; 0x2ec8 <vfprintf+0xf6>
    2eb8:	f7 01       	movw	r30, r14
    2eba:	93 fd       	sbrc	r25, 3
    2ebc:	85 91       	lpm	r24, Z+
    2ebe:	93 ff       	sbrs	r25, 3
    2ec0:	81 91       	ld	r24, Z+
    2ec2:	7f 01       	movw	r14, r30
    2ec4:	81 11       	cpse	r24, r1
    2ec6:	b3 cf       	rjmp	.-154    	; 0x2e2e <vfprintf+0x5c>
    2ec8:	98 2f       	mov	r25, r24
    2eca:	9f 7d       	andi	r25, 0xDF	; 223
    2ecc:	95 54       	subi	r25, 0x45	; 69
    2ece:	93 30       	cpi	r25, 0x03	; 3
    2ed0:	28 f4       	brcc	.+10     	; 0x2edc <vfprintf+0x10a>
    2ed2:	0c 5f       	subi	r16, 0xFC	; 252
    2ed4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ed6:	9f e3       	ldi	r25, 0x3F	; 63
    2ed8:	99 83       	std	Y+1, r25	; 0x01
    2eda:	0d c0       	rjmp	.+26     	; 0x2ef6 <vfprintf+0x124>
    2edc:	83 36       	cpi	r24, 0x63	; 99
    2ede:	31 f0       	breq	.+12     	; 0x2eec <vfprintf+0x11a>
    2ee0:	83 37       	cpi	r24, 0x73	; 115
    2ee2:	71 f0       	breq	.+28     	; 0x2f00 <vfprintf+0x12e>
    2ee4:	83 35       	cpi	r24, 0x53	; 83
    2ee6:	09 f0       	breq	.+2      	; 0x2eea <vfprintf+0x118>
    2ee8:	59 c0       	rjmp	.+178    	; 0x2f9c <vfprintf+0x1ca>
    2eea:	21 c0       	rjmp	.+66     	; 0x2f2e <vfprintf+0x15c>
    2eec:	f8 01       	movw	r30, r16
    2eee:	80 81       	ld	r24, Z
    2ef0:	89 83       	std	Y+1, r24	; 0x01
    2ef2:	0e 5f       	subi	r16, 0xFE	; 254
    2ef4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef6:	88 24       	eor	r8, r8
    2ef8:	83 94       	inc	r8
    2efa:	91 2c       	mov	r9, r1
    2efc:	53 01       	movw	r10, r6
    2efe:	13 c0       	rjmp	.+38     	; 0x2f26 <vfprintf+0x154>
    2f00:	28 01       	movw	r4, r16
    2f02:	f2 e0       	ldi	r31, 0x02	; 2
    2f04:	4f 0e       	add	r4, r31
    2f06:	51 1c       	adc	r5, r1
    2f08:	f8 01       	movw	r30, r16
    2f0a:	a0 80       	ld	r10, Z
    2f0c:	b1 80       	ldd	r11, Z+1	; 0x01
    2f0e:	36 fe       	sbrs	r3, 6
    2f10:	03 c0       	rjmp	.+6      	; 0x2f18 <vfprintf+0x146>
    2f12:	69 2d       	mov	r22, r9
    2f14:	70 e0       	ldi	r23, 0x00	; 0
    2f16:	02 c0       	rjmp	.+4      	; 0x2f1c <vfprintf+0x14a>
    2f18:	6f ef       	ldi	r22, 0xFF	; 255
    2f1a:	7f ef       	ldi	r23, 0xFF	; 255
    2f1c:	c5 01       	movw	r24, r10
    2f1e:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <strnlen>
    2f22:	4c 01       	movw	r8, r24
    2f24:	82 01       	movw	r16, r4
    2f26:	f3 2d       	mov	r31, r3
    2f28:	ff 77       	andi	r31, 0x7F	; 127
    2f2a:	3f 2e       	mov	r3, r31
    2f2c:	16 c0       	rjmp	.+44     	; 0x2f5a <vfprintf+0x188>
    2f2e:	28 01       	movw	r4, r16
    2f30:	22 e0       	ldi	r18, 0x02	; 2
    2f32:	42 0e       	add	r4, r18
    2f34:	51 1c       	adc	r5, r1
    2f36:	f8 01       	movw	r30, r16
    2f38:	a0 80       	ld	r10, Z
    2f3a:	b1 80       	ldd	r11, Z+1	; 0x01
    2f3c:	36 fe       	sbrs	r3, 6
    2f3e:	03 c0       	rjmp	.+6      	; 0x2f46 <vfprintf+0x174>
    2f40:	69 2d       	mov	r22, r9
    2f42:	70 e0       	ldi	r23, 0x00	; 0
    2f44:	02 c0       	rjmp	.+4      	; 0x2f4a <vfprintf+0x178>
    2f46:	6f ef       	ldi	r22, 0xFF	; 255
    2f48:	7f ef       	ldi	r23, 0xFF	; 255
    2f4a:	c5 01       	movw	r24, r10
    2f4c:	0e 94 cd 18 	call	0x319a	; 0x319a <strnlen_P>
    2f50:	4c 01       	movw	r8, r24
    2f52:	f3 2d       	mov	r31, r3
    2f54:	f0 68       	ori	r31, 0x80	; 128
    2f56:	3f 2e       	mov	r3, r31
    2f58:	82 01       	movw	r16, r4
    2f5a:	33 fc       	sbrc	r3, 3
    2f5c:	1b c0       	rjmp	.+54     	; 0x2f94 <vfprintf+0x1c2>
    2f5e:	82 2d       	mov	r24, r2
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	88 16       	cp	r8, r24
    2f64:	99 06       	cpc	r9, r25
    2f66:	b0 f4       	brcc	.+44     	; 0x2f94 <vfprintf+0x1c2>
    2f68:	b6 01       	movw	r22, r12
    2f6a:	80 e2       	ldi	r24, 0x20	; 32
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    2f72:	2a 94       	dec	r2
    2f74:	f4 cf       	rjmp	.-24     	; 0x2f5e <vfprintf+0x18c>
    2f76:	f5 01       	movw	r30, r10
    2f78:	37 fc       	sbrc	r3, 7
    2f7a:	85 91       	lpm	r24, Z+
    2f7c:	37 fe       	sbrs	r3, 7
    2f7e:	81 91       	ld	r24, Z+
    2f80:	5f 01       	movw	r10, r30
    2f82:	b6 01       	movw	r22, r12
    2f84:	90 e0       	ldi	r25, 0x00	; 0
    2f86:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    2f8a:	21 10       	cpse	r2, r1
    2f8c:	2a 94       	dec	r2
    2f8e:	21 e0       	ldi	r18, 0x01	; 1
    2f90:	82 1a       	sub	r8, r18
    2f92:	91 08       	sbc	r9, r1
    2f94:	81 14       	cp	r8, r1
    2f96:	91 04       	cpc	r9, r1
    2f98:	71 f7       	brne	.-36     	; 0x2f76 <vfprintf+0x1a4>
    2f9a:	e8 c0       	rjmp	.+464    	; 0x316c <vfprintf+0x39a>
    2f9c:	84 36       	cpi	r24, 0x64	; 100
    2f9e:	11 f0       	breq	.+4      	; 0x2fa4 <vfprintf+0x1d2>
    2fa0:	89 36       	cpi	r24, 0x69	; 105
    2fa2:	41 f5       	brne	.+80     	; 0x2ff4 <vfprintf+0x222>
    2fa4:	f8 01       	movw	r30, r16
    2fa6:	37 fe       	sbrs	r3, 7
    2fa8:	07 c0       	rjmp	.+14     	; 0x2fb8 <vfprintf+0x1e6>
    2faa:	60 81       	ld	r22, Z
    2fac:	71 81       	ldd	r23, Z+1	; 0x01
    2fae:	82 81       	ldd	r24, Z+2	; 0x02
    2fb0:	93 81       	ldd	r25, Z+3	; 0x03
    2fb2:	0c 5f       	subi	r16, 0xFC	; 252
    2fb4:	1f 4f       	sbci	r17, 0xFF	; 255
    2fb6:	08 c0       	rjmp	.+16     	; 0x2fc8 <vfprintf+0x1f6>
    2fb8:	60 81       	ld	r22, Z
    2fba:	71 81       	ldd	r23, Z+1	; 0x01
    2fbc:	07 2e       	mov	r0, r23
    2fbe:	00 0c       	add	r0, r0
    2fc0:	88 0b       	sbc	r24, r24
    2fc2:	99 0b       	sbc	r25, r25
    2fc4:	0e 5f       	subi	r16, 0xFE	; 254
    2fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2fc8:	f3 2d       	mov	r31, r3
    2fca:	ff 76       	andi	r31, 0x6F	; 111
    2fcc:	3f 2e       	mov	r3, r31
    2fce:	97 ff       	sbrs	r25, 7
    2fd0:	09 c0       	rjmp	.+18     	; 0x2fe4 <vfprintf+0x212>
    2fd2:	90 95       	com	r25
    2fd4:	80 95       	com	r24
    2fd6:	70 95       	com	r23
    2fd8:	61 95       	neg	r22
    2fda:	7f 4f       	sbci	r23, 0xFF	; 255
    2fdc:	8f 4f       	sbci	r24, 0xFF	; 255
    2fde:	9f 4f       	sbci	r25, 0xFF	; 255
    2fe0:	f0 68       	ori	r31, 0x80	; 128
    2fe2:	3f 2e       	mov	r3, r31
    2fe4:	2a e0       	ldi	r18, 0x0A	; 10
    2fe6:	30 e0       	ldi	r19, 0x00	; 0
    2fe8:	a3 01       	movw	r20, r6
    2fea:	0e 94 2f 19 	call	0x325e	; 0x325e <__ultoa_invert>
    2fee:	88 2e       	mov	r8, r24
    2ff0:	86 18       	sub	r8, r6
    2ff2:	45 c0       	rjmp	.+138    	; 0x307e <vfprintf+0x2ac>
    2ff4:	85 37       	cpi	r24, 0x75	; 117
    2ff6:	31 f4       	brne	.+12     	; 0x3004 <vfprintf+0x232>
    2ff8:	23 2d       	mov	r18, r3
    2ffa:	2f 7e       	andi	r18, 0xEF	; 239
    2ffc:	b2 2e       	mov	r11, r18
    2ffe:	2a e0       	ldi	r18, 0x0A	; 10
    3000:	30 e0       	ldi	r19, 0x00	; 0
    3002:	25 c0       	rjmp	.+74     	; 0x304e <vfprintf+0x27c>
    3004:	93 2d       	mov	r25, r3
    3006:	99 7f       	andi	r25, 0xF9	; 249
    3008:	b9 2e       	mov	r11, r25
    300a:	8f 36       	cpi	r24, 0x6F	; 111
    300c:	c1 f0       	breq	.+48     	; 0x303e <vfprintf+0x26c>
    300e:	18 f4       	brcc	.+6      	; 0x3016 <vfprintf+0x244>
    3010:	88 35       	cpi	r24, 0x58	; 88
    3012:	79 f0       	breq	.+30     	; 0x3032 <vfprintf+0x260>
    3014:	b5 c0       	rjmp	.+362    	; 0x3180 <vfprintf+0x3ae>
    3016:	80 37       	cpi	r24, 0x70	; 112
    3018:	19 f0       	breq	.+6      	; 0x3020 <vfprintf+0x24e>
    301a:	88 37       	cpi	r24, 0x78	; 120
    301c:	21 f0       	breq	.+8      	; 0x3026 <vfprintf+0x254>
    301e:	b0 c0       	rjmp	.+352    	; 0x3180 <vfprintf+0x3ae>
    3020:	e9 2f       	mov	r30, r25
    3022:	e0 61       	ori	r30, 0x10	; 16
    3024:	be 2e       	mov	r11, r30
    3026:	b4 fe       	sbrs	r11, 4
    3028:	0d c0       	rjmp	.+26     	; 0x3044 <vfprintf+0x272>
    302a:	fb 2d       	mov	r31, r11
    302c:	f4 60       	ori	r31, 0x04	; 4
    302e:	bf 2e       	mov	r11, r31
    3030:	09 c0       	rjmp	.+18     	; 0x3044 <vfprintf+0x272>
    3032:	34 fe       	sbrs	r3, 4
    3034:	0a c0       	rjmp	.+20     	; 0x304a <vfprintf+0x278>
    3036:	29 2f       	mov	r18, r25
    3038:	26 60       	ori	r18, 0x06	; 6
    303a:	b2 2e       	mov	r11, r18
    303c:	06 c0       	rjmp	.+12     	; 0x304a <vfprintf+0x278>
    303e:	28 e0       	ldi	r18, 0x08	; 8
    3040:	30 e0       	ldi	r19, 0x00	; 0
    3042:	05 c0       	rjmp	.+10     	; 0x304e <vfprintf+0x27c>
    3044:	20 e1       	ldi	r18, 0x10	; 16
    3046:	30 e0       	ldi	r19, 0x00	; 0
    3048:	02 c0       	rjmp	.+4      	; 0x304e <vfprintf+0x27c>
    304a:	20 e1       	ldi	r18, 0x10	; 16
    304c:	32 e0       	ldi	r19, 0x02	; 2
    304e:	f8 01       	movw	r30, r16
    3050:	b7 fe       	sbrs	r11, 7
    3052:	07 c0       	rjmp	.+14     	; 0x3062 <vfprintf+0x290>
    3054:	60 81       	ld	r22, Z
    3056:	71 81       	ldd	r23, Z+1	; 0x01
    3058:	82 81       	ldd	r24, Z+2	; 0x02
    305a:	93 81       	ldd	r25, Z+3	; 0x03
    305c:	0c 5f       	subi	r16, 0xFC	; 252
    305e:	1f 4f       	sbci	r17, 0xFF	; 255
    3060:	06 c0       	rjmp	.+12     	; 0x306e <vfprintf+0x29c>
    3062:	60 81       	ld	r22, Z
    3064:	71 81       	ldd	r23, Z+1	; 0x01
    3066:	80 e0       	ldi	r24, 0x00	; 0
    3068:	90 e0       	ldi	r25, 0x00	; 0
    306a:	0e 5f       	subi	r16, 0xFE	; 254
    306c:	1f 4f       	sbci	r17, 0xFF	; 255
    306e:	a3 01       	movw	r20, r6
    3070:	0e 94 2f 19 	call	0x325e	; 0x325e <__ultoa_invert>
    3074:	88 2e       	mov	r8, r24
    3076:	86 18       	sub	r8, r6
    3078:	fb 2d       	mov	r31, r11
    307a:	ff 77       	andi	r31, 0x7F	; 127
    307c:	3f 2e       	mov	r3, r31
    307e:	36 fe       	sbrs	r3, 6
    3080:	0d c0       	rjmp	.+26     	; 0x309c <vfprintf+0x2ca>
    3082:	23 2d       	mov	r18, r3
    3084:	2e 7f       	andi	r18, 0xFE	; 254
    3086:	a2 2e       	mov	r10, r18
    3088:	89 14       	cp	r8, r9
    308a:	58 f4       	brcc	.+22     	; 0x30a2 <vfprintf+0x2d0>
    308c:	34 fe       	sbrs	r3, 4
    308e:	0b c0       	rjmp	.+22     	; 0x30a6 <vfprintf+0x2d4>
    3090:	32 fc       	sbrc	r3, 2
    3092:	09 c0       	rjmp	.+18     	; 0x30a6 <vfprintf+0x2d4>
    3094:	83 2d       	mov	r24, r3
    3096:	8e 7e       	andi	r24, 0xEE	; 238
    3098:	a8 2e       	mov	r10, r24
    309a:	05 c0       	rjmp	.+10     	; 0x30a6 <vfprintf+0x2d4>
    309c:	b8 2c       	mov	r11, r8
    309e:	a3 2c       	mov	r10, r3
    30a0:	03 c0       	rjmp	.+6      	; 0x30a8 <vfprintf+0x2d6>
    30a2:	b8 2c       	mov	r11, r8
    30a4:	01 c0       	rjmp	.+2      	; 0x30a8 <vfprintf+0x2d6>
    30a6:	b9 2c       	mov	r11, r9
    30a8:	a4 fe       	sbrs	r10, 4
    30aa:	0f c0       	rjmp	.+30     	; 0x30ca <vfprintf+0x2f8>
    30ac:	fe 01       	movw	r30, r28
    30ae:	e8 0d       	add	r30, r8
    30b0:	f1 1d       	adc	r31, r1
    30b2:	80 81       	ld	r24, Z
    30b4:	80 33       	cpi	r24, 0x30	; 48
    30b6:	21 f4       	brne	.+8      	; 0x30c0 <vfprintf+0x2ee>
    30b8:	9a 2d       	mov	r25, r10
    30ba:	99 7e       	andi	r25, 0xE9	; 233
    30bc:	a9 2e       	mov	r10, r25
    30be:	09 c0       	rjmp	.+18     	; 0x30d2 <vfprintf+0x300>
    30c0:	a2 fe       	sbrs	r10, 2
    30c2:	06 c0       	rjmp	.+12     	; 0x30d0 <vfprintf+0x2fe>
    30c4:	b3 94       	inc	r11
    30c6:	b3 94       	inc	r11
    30c8:	04 c0       	rjmp	.+8      	; 0x30d2 <vfprintf+0x300>
    30ca:	8a 2d       	mov	r24, r10
    30cc:	86 78       	andi	r24, 0x86	; 134
    30ce:	09 f0       	breq	.+2      	; 0x30d2 <vfprintf+0x300>
    30d0:	b3 94       	inc	r11
    30d2:	a3 fc       	sbrc	r10, 3
    30d4:	11 c0       	rjmp	.+34     	; 0x30f8 <vfprintf+0x326>
    30d6:	a0 fe       	sbrs	r10, 0
    30d8:	06 c0       	rjmp	.+12     	; 0x30e6 <vfprintf+0x314>
    30da:	b2 14       	cp	r11, r2
    30dc:	88 f4       	brcc	.+34     	; 0x3100 <vfprintf+0x32e>
    30de:	28 0c       	add	r2, r8
    30e0:	92 2c       	mov	r9, r2
    30e2:	9b 18       	sub	r9, r11
    30e4:	0e c0       	rjmp	.+28     	; 0x3102 <vfprintf+0x330>
    30e6:	b2 14       	cp	r11, r2
    30e8:	60 f4       	brcc	.+24     	; 0x3102 <vfprintf+0x330>
    30ea:	b6 01       	movw	r22, r12
    30ec:	80 e2       	ldi	r24, 0x20	; 32
    30ee:	90 e0       	ldi	r25, 0x00	; 0
    30f0:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    30f4:	b3 94       	inc	r11
    30f6:	f7 cf       	rjmp	.-18     	; 0x30e6 <vfprintf+0x314>
    30f8:	b2 14       	cp	r11, r2
    30fa:	18 f4       	brcc	.+6      	; 0x3102 <vfprintf+0x330>
    30fc:	2b 18       	sub	r2, r11
    30fe:	02 c0       	rjmp	.+4      	; 0x3104 <vfprintf+0x332>
    3100:	98 2c       	mov	r9, r8
    3102:	21 2c       	mov	r2, r1
    3104:	a4 fe       	sbrs	r10, 4
    3106:	10 c0       	rjmp	.+32     	; 0x3128 <vfprintf+0x356>
    3108:	b6 01       	movw	r22, r12
    310a:	80 e3       	ldi	r24, 0x30	; 48
    310c:	90 e0       	ldi	r25, 0x00	; 0
    310e:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    3112:	a2 fe       	sbrs	r10, 2
    3114:	17 c0       	rjmp	.+46     	; 0x3144 <vfprintf+0x372>
    3116:	a1 fc       	sbrc	r10, 1
    3118:	03 c0       	rjmp	.+6      	; 0x3120 <vfprintf+0x34e>
    311a:	88 e7       	ldi	r24, 0x78	; 120
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	02 c0       	rjmp	.+4      	; 0x3124 <vfprintf+0x352>
    3120:	88 e5       	ldi	r24, 0x58	; 88
    3122:	90 e0       	ldi	r25, 0x00	; 0
    3124:	b6 01       	movw	r22, r12
    3126:	0c c0       	rjmp	.+24     	; 0x3140 <vfprintf+0x36e>
    3128:	8a 2d       	mov	r24, r10
    312a:	86 78       	andi	r24, 0x86	; 134
    312c:	59 f0       	breq	.+22     	; 0x3144 <vfprintf+0x372>
    312e:	a1 fe       	sbrs	r10, 1
    3130:	02 c0       	rjmp	.+4      	; 0x3136 <vfprintf+0x364>
    3132:	8b e2       	ldi	r24, 0x2B	; 43
    3134:	01 c0       	rjmp	.+2      	; 0x3138 <vfprintf+0x366>
    3136:	80 e2       	ldi	r24, 0x20	; 32
    3138:	a7 fc       	sbrc	r10, 7
    313a:	8d e2       	ldi	r24, 0x2D	; 45
    313c:	b6 01       	movw	r22, r12
    313e:	90 e0       	ldi	r25, 0x00	; 0
    3140:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    3144:	89 14       	cp	r8, r9
    3146:	38 f4       	brcc	.+14     	; 0x3156 <vfprintf+0x384>
    3148:	b6 01       	movw	r22, r12
    314a:	80 e3       	ldi	r24, 0x30	; 48
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    3152:	9a 94       	dec	r9
    3154:	f7 cf       	rjmp	.-18     	; 0x3144 <vfprintf+0x372>
    3156:	8a 94       	dec	r8
    3158:	f3 01       	movw	r30, r6
    315a:	e8 0d       	add	r30, r8
    315c:	f1 1d       	adc	r31, r1
    315e:	80 81       	ld	r24, Z
    3160:	b6 01       	movw	r22, r12
    3162:	90 e0       	ldi	r25, 0x00	; 0
    3164:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    3168:	81 10       	cpse	r8, r1
    316a:	f5 cf       	rjmp	.-22     	; 0x3156 <vfprintf+0x384>
    316c:	22 20       	and	r2, r2
    316e:	09 f4       	brne	.+2      	; 0x3172 <vfprintf+0x3a0>
    3170:	42 ce       	rjmp	.-892    	; 0x2df6 <vfprintf+0x24>
    3172:	b6 01       	movw	r22, r12
    3174:	80 e2       	ldi	r24, 0x20	; 32
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <fputc>
    317c:	2a 94       	dec	r2
    317e:	f6 cf       	rjmp	.-20     	; 0x316c <vfprintf+0x39a>
    3180:	f6 01       	movw	r30, r12
    3182:	86 81       	ldd	r24, Z+6	; 0x06
    3184:	97 81       	ldd	r25, Z+7	; 0x07
    3186:	02 c0       	rjmp	.+4      	; 0x318c <vfprintf+0x3ba>
    3188:	8f ef       	ldi	r24, 0xFF	; 255
    318a:	9f ef       	ldi	r25, 0xFF	; 255
    318c:	2b 96       	adiw	r28, 0x0b	; 11
    318e:	e2 e1       	ldi	r30, 0x12	; 18
    3190:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <__epilogue_restores__>

00003194 <__ctype_isfalse>:
    3194:	99 27       	eor	r25, r25
    3196:	88 27       	eor	r24, r24

00003198 <__ctype_istrue>:
    3198:	08 95       	ret

0000319a <strnlen_P>:
    319a:	fc 01       	movw	r30, r24
    319c:	05 90       	lpm	r0, Z+
    319e:	61 50       	subi	r22, 0x01	; 1
    31a0:	70 40       	sbci	r23, 0x00	; 0
    31a2:	01 10       	cpse	r0, r1
    31a4:	d8 f7       	brcc	.-10     	; 0x319c <strnlen_P+0x2>
    31a6:	80 95       	com	r24
    31a8:	90 95       	com	r25
    31aa:	8e 0f       	add	r24, r30
    31ac:	9f 1f       	adc	r25, r31
    31ae:	08 95       	ret

000031b0 <strnlen>:
    31b0:	fc 01       	movw	r30, r24
    31b2:	61 50       	subi	r22, 0x01	; 1
    31b4:	70 40       	sbci	r23, 0x00	; 0
    31b6:	01 90       	ld	r0, Z+
    31b8:	01 10       	cpse	r0, r1
    31ba:	d8 f7       	brcc	.-10     	; 0x31b2 <strnlen+0x2>
    31bc:	80 95       	com	r24
    31be:	90 95       	com	r25
    31c0:	8e 0f       	add	r24, r30
    31c2:	9f 1f       	adc	r25, r31
    31c4:	08 95       	ret

000031c6 <strrev>:
    31c6:	dc 01       	movw	r26, r24
    31c8:	fc 01       	movw	r30, r24
    31ca:	67 2f       	mov	r22, r23
    31cc:	71 91       	ld	r23, Z+
    31ce:	77 23       	and	r23, r23
    31d0:	e1 f7       	brne	.-8      	; 0x31ca <strrev+0x4>
    31d2:	32 97       	sbiw	r30, 0x02	; 2
    31d4:	04 c0       	rjmp	.+8      	; 0x31de <strrev+0x18>
    31d6:	7c 91       	ld	r23, X
    31d8:	6d 93       	st	X+, r22
    31da:	70 83       	st	Z, r23
    31dc:	62 91       	ld	r22, -Z
    31de:	ae 17       	cp	r26, r30
    31e0:	bf 07       	cpc	r27, r31
    31e2:	c8 f3       	brcs	.-14     	; 0x31d6 <strrev+0x10>
    31e4:	08 95       	ret

000031e6 <fputc>:
    31e6:	0f 93       	push	r16
    31e8:	1f 93       	push	r17
    31ea:	cf 93       	push	r28
    31ec:	df 93       	push	r29
    31ee:	fb 01       	movw	r30, r22
    31f0:	23 81       	ldd	r18, Z+3	; 0x03
    31f2:	21 fd       	sbrc	r18, 1
    31f4:	03 c0       	rjmp	.+6      	; 0x31fc <fputc+0x16>
    31f6:	8f ef       	ldi	r24, 0xFF	; 255
    31f8:	9f ef       	ldi	r25, 0xFF	; 255
    31fa:	2c c0       	rjmp	.+88     	; 0x3254 <fputc+0x6e>
    31fc:	22 ff       	sbrs	r18, 2
    31fe:	16 c0       	rjmp	.+44     	; 0x322c <fputc+0x46>
    3200:	46 81       	ldd	r20, Z+6	; 0x06
    3202:	57 81       	ldd	r21, Z+7	; 0x07
    3204:	24 81       	ldd	r18, Z+4	; 0x04
    3206:	35 81       	ldd	r19, Z+5	; 0x05
    3208:	42 17       	cp	r20, r18
    320a:	53 07       	cpc	r21, r19
    320c:	44 f4       	brge	.+16     	; 0x321e <fputc+0x38>
    320e:	a0 81       	ld	r26, Z
    3210:	b1 81       	ldd	r27, Z+1	; 0x01
    3212:	9d 01       	movw	r18, r26
    3214:	2f 5f       	subi	r18, 0xFF	; 255
    3216:	3f 4f       	sbci	r19, 0xFF	; 255
    3218:	31 83       	std	Z+1, r19	; 0x01
    321a:	20 83       	st	Z, r18
    321c:	8c 93       	st	X, r24
    321e:	26 81       	ldd	r18, Z+6	; 0x06
    3220:	37 81       	ldd	r19, Z+7	; 0x07
    3222:	2f 5f       	subi	r18, 0xFF	; 255
    3224:	3f 4f       	sbci	r19, 0xFF	; 255
    3226:	37 83       	std	Z+7, r19	; 0x07
    3228:	26 83       	std	Z+6, r18	; 0x06
    322a:	14 c0       	rjmp	.+40     	; 0x3254 <fputc+0x6e>
    322c:	8b 01       	movw	r16, r22
    322e:	ec 01       	movw	r28, r24
    3230:	fb 01       	movw	r30, r22
    3232:	00 84       	ldd	r0, Z+8	; 0x08
    3234:	f1 85       	ldd	r31, Z+9	; 0x09
    3236:	e0 2d       	mov	r30, r0
    3238:	09 95       	icall
    323a:	89 2b       	or	r24, r25
    323c:	e1 f6       	brne	.-72     	; 0x31f6 <fputc+0x10>
    323e:	d8 01       	movw	r26, r16
    3240:	16 96       	adiw	r26, 0x06	; 6
    3242:	8d 91       	ld	r24, X+
    3244:	9c 91       	ld	r25, X
    3246:	17 97       	sbiw	r26, 0x07	; 7
    3248:	01 96       	adiw	r24, 0x01	; 1
    324a:	17 96       	adiw	r26, 0x07	; 7
    324c:	9c 93       	st	X, r25
    324e:	8e 93       	st	-X, r24
    3250:	16 97       	sbiw	r26, 0x06	; 6
    3252:	ce 01       	movw	r24, r28
    3254:	df 91       	pop	r29
    3256:	cf 91       	pop	r28
    3258:	1f 91       	pop	r17
    325a:	0f 91       	pop	r16
    325c:	08 95       	ret

0000325e <__ultoa_invert>:
    325e:	fa 01       	movw	r30, r20
    3260:	aa 27       	eor	r26, r26
    3262:	28 30       	cpi	r18, 0x08	; 8
    3264:	51 f1       	breq	.+84     	; 0x32ba <__ultoa_invert+0x5c>
    3266:	20 31       	cpi	r18, 0x10	; 16
    3268:	81 f1       	breq	.+96     	; 0x32ca <__ultoa_invert+0x6c>
    326a:	e8 94       	clt
    326c:	6f 93       	push	r22
    326e:	6e 7f       	andi	r22, 0xFE	; 254
    3270:	6e 5f       	subi	r22, 0xFE	; 254
    3272:	7f 4f       	sbci	r23, 0xFF	; 255
    3274:	8f 4f       	sbci	r24, 0xFF	; 255
    3276:	9f 4f       	sbci	r25, 0xFF	; 255
    3278:	af 4f       	sbci	r26, 0xFF	; 255
    327a:	b1 e0       	ldi	r27, 0x01	; 1
    327c:	3e d0       	rcall	.+124    	; 0x32fa <__ultoa_invert+0x9c>
    327e:	b4 e0       	ldi	r27, 0x04	; 4
    3280:	3c d0       	rcall	.+120    	; 0x32fa <__ultoa_invert+0x9c>
    3282:	67 0f       	add	r22, r23
    3284:	78 1f       	adc	r23, r24
    3286:	89 1f       	adc	r24, r25
    3288:	9a 1f       	adc	r25, r26
    328a:	a1 1d       	adc	r26, r1
    328c:	68 0f       	add	r22, r24
    328e:	79 1f       	adc	r23, r25
    3290:	8a 1f       	adc	r24, r26
    3292:	91 1d       	adc	r25, r1
    3294:	a1 1d       	adc	r26, r1
    3296:	6a 0f       	add	r22, r26
    3298:	71 1d       	adc	r23, r1
    329a:	81 1d       	adc	r24, r1
    329c:	91 1d       	adc	r25, r1
    329e:	a1 1d       	adc	r26, r1
    32a0:	20 d0       	rcall	.+64     	; 0x32e2 <__ultoa_invert+0x84>
    32a2:	09 f4       	brne	.+2      	; 0x32a6 <__ultoa_invert+0x48>
    32a4:	68 94       	set
    32a6:	3f 91       	pop	r19
    32a8:	2a e0       	ldi	r18, 0x0A	; 10
    32aa:	26 9f       	mul	r18, r22
    32ac:	11 24       	eor	r1, r1
    32ae:	30 19       	sub	r19, r0
    32b0:	30 5d       	subi	r19, 0xD0	; 208
    32b2:	31 93       	st	Z+, r19
    32b4:	de f6       	brtc	.-74     	; 0x326c <__ultoa_invert+0xe>
    32b6:	cf 01       	movw	r24, r30
    32b8:	08 95       	ret
    32ba:	46 2f       	mov	r20, r22
    32bc:	47 70       	andi	r20, 0x07	; 7
    32be:	40 5d       	subi	r20, 0xD0	; 208
    32c0:	41 93       	st	Z+, r20
    32c2:	b3 e0       	ldi	r27, 0x03	; 3
    32c4:	0f d0       	rcall	.+30     	; 0x32e4 <__ultoa_invert+0x86>
    32c6:	c9 f7       	brne	.-14     	; 0x32ba <__ultoa_invert+0x5c>
    32c8:	f6 cf       	rjmp	.-20     	; 0x32b6 <__ultoa_invert+0x58>
    32ca:	46 2f       	mov	r20, r22
    32cc:	4f 70       	andi	r20, 0x0F	; 15
    32ce:	40 5d       	subi	r20, 0xD0	; 208
    32d0:	4a 33       	cpi	r20, 0x3A	; 58
    32d2:	18 f0       	brcs	.+6      	; 0x32da <__ultoa_invert+0x7c>
    32d4:	49 5d       	subi	r20, 0xD9	; 217
    32d6:	31 fd       	sbrc	r19, 1
    32d8:	40 52       	subi	r20, 0x20	; 32
    32da:	41 93       	st	Z+, r20
    32dc:	02 d0       	rcall	.+4      	; 0x32e2 <__ultoa_invert+0x84>
    32de:	a9 f7       	brne	.-22     	; 0x32ca <__ultoa_invert+0x6c>
    32e0:	ea cf       	rjmp	.-44     	; 0x32b6 <__ultoa_invert+0x58>
    32e2:	b4 e0       	ldi	r27, 0x04	; 4
    32e4:	a6 95       	lsr	r26
    32e6:	97 95       	ror	r25
    32e8:	87 95       	ror	r24
    32ea:	77 95       	ror	r23
    32ec:	67 95       	ror	r22
    32ee:	ba 95       	dec	r27
    32f0:	c9 f7       	brne	.-14     	; 0x32e4 <__ultoa_invert+0x86>
    32f2:	00 97       	sbiw	r24, 0x00	; 0
    32f4:	61 05       	cpc	r22, r1
    32f6:	71 05       	cpc	r23, r1
    32f8:	08 95       	ret
    32fa:	9b 01       	movw	r18, r22
    32fc:	ac 01       	movw	r20, r24
    32fe:	0a 2e       	mov	r0, r26
    3300:	06 94       	lsr	r0
    3302:	57 95       	ror	r21
    3304:	47 95       	ror	r20
    3306:	37 95       	ror	r19
    3308:	27 95       	ror	r18
    330a:	ba 95       	dec	r27
    330c:	c9 f7       	brne	.-14     	; 0x3300 <__ultoa_invert+0xa2>
    330e:	62 0f       	add	r22, r18
    3310:	73 1f       	adc	r23, r19
    3312:	84 1f       	adc	r24, r20
    3314:	95 1f       	adc	r25, r21
    3316:	a0 1d       	adc	r26, r0
    3318:	08 95       	ret

0000331a <__mulsi3>:
    331a:	db 01       	movw	r26, r22
    331c:	8f 93       	push	r24
    331e:	9f 93       	push	r25
    3320:	0e 94 bf 19 	call	0x337e	; 0x337e <__muluhisi3>
    3324:	bf 91       	pop	r27
    3326:	af 91       	pop	r26
    3328:	a2 9f       	mul	r26, r18
    332a:	80 0d       	add	r24, r0
    332c:	91 1d       	adc	r25, r1
    332e:	a3 9f       	mul	r26, r19
    3330:	90 0d       	add	r25, r0
    3332:	b2 9f       	mul	r27, r18
    3334:	90 0d       	add	r25, r0
    3336:	11 24       	eor	r1, r1
    3338:	08 95       	ret

0000333a <__udivmodsi4>:
    333a:	a1 e2       	ldi	r26, 0x21	; 33
    333c:	1a 2e       	mov	r1, r26
    333e:	aa 1b       	sub	r26, r26
    3340:	bb 1b       	sub	r27, r27
    3342:	fd 01       	movw	r30, r26
    3344:	0d c0       	rjmp	.+26     	; 0x3360 <__udivmodsi4_ep>

00003346 <__udivmodsi4_loop>:
    3346:	aa 1f       	adc	r26, r26
    3348:	bb 1f       	adc	r27, r27
    334a:	ee 1f       	adc	r30, r30
    334c:	ff 1f       	adc	r31, r31
    334e:	a2 17       	cp	r26, r18
    3350:	b3 07       	cpc	r27, r19
    3352:	e4 07       	cpc	r30, r20
    3354:	f5 07       	cpc	r31, r21
    3356:	20 f0       	brcs	.+8      	; 0x3360 <__udivmodsi4_ep>
    3358:	a2 1b       	sub	r26, r18
    335a:	b3 0b       	sbc	r27, r19
    335c:	e4 0b       	sbc	r30, r20
    335e:	f5 0b       	sbc	r31, r21

00003360 <__udivmodsi4_ep>:
    3360:	66 1f       	adc	r22, r22
    3362:	77 1f       	adc	r23, r23
    3364:	88 1f       	adc	r24, r24
    3366:	99 1f       	adc	r25, r25
    3368:	1a 94       	dec	r1
    336a:	69 f7       	brne	.-38     	; 0x3346 <__udivmodsi4_loop>
    336c:	60 95       	com	r22
    336e:	70 95       	com	r23
    3370:	80 95       	com	r24
    3372:	90 95       	com	r25
    3374:	9b 01       	movw	r18, r22
    3376:	ac 01       	movw	r20, r24
    3378:	bd 01       	movw	r22, r26
    337a:	cf 01       	movw	r24, r30
    337c:	08 95       	ret

0000337e <__muluhisi3>:
    337e:	0e 94 bd 11 	call	0x237a	; 0x237a <__umulhisi3>
    3382:	a5 9f       	mul	r26, r21
    3384:	90 0d       	add	r25, r0
    3386:	b4 9f       	mul	r27, r20
    3388:	90 0d       	add	r25, r0
    338a:	a4 9f       	mul	r26, r20
    338c:	80 0d       	add	r24, r0
    338e:	91 1d       	adc	r25, r1
    3390:	11 24       	eor	r1, r1
    3392:	08 95       	ret

00003394 <__prologue_saves__>:
    3394:	2f 92       	push	r2
    3396:	3f 92       	push	r3
    3398:	4f 92       	push	r4
    339a:	5f 92       	push	r5
    339c:	6f 92       	push	r6
    339e:	7f 92       	push	r7
    33a0:	8f 92       	push	r8
    33a2:	9f 92       	push	r9
    33a4:	af 92       	push	r10
    33a6:	bf 92       	push	r11
    33a8:	cf 92       	push	r12
    33aa:	df 92       	push	r13
    33ac:	ef 92       	push	r14
    33ae:	ff 92       	push	r15
    33b0:	0f 93       	push	r16
    33b2:	1f 93       	push	r17
    33b4:	cf 93       	push	r28
    33b6:	df 93       	push	r29
    33b8:	cd b7       	in	r28, 0x3d	; 61
    33ba:	de b7       	in	r29, 0x3e	; 62
    33bc:	ca 1b       	sub	r28, r26
    33be:	db 0b       	sbc	r29, r27
    33c0:	0f b6       	in	r0, 0x3f	; 63
    33c2:	f8 94       	cli
    33c4:	de bf       	out	0x3e, r29	; 62
    33c6:	0f be       	out	0x3f, r0	; 63
    33c8:	cd bf       	out	0x3d, r28	; 61
    33ca:	09 94       	ijmp

000033cc <__epilogue_restores__>:
    33cc:	2a 88       	ldd	r2, Y+18	; 0x12
    33ce:	39 88       	ldd	r3, Y+17	; 0x11
    33d0:	48 88       	ldd	r4, Y+16	; 0x10
    33d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    33d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    33d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    33d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    33da:	9b 84       	ldd	r9, Y+11	; 0x0b
    33dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    33de:	b9 84       	ldd	r11, Y+9	; 0x09
    33e0:	c8 84       	ldd	r12, Y+8	; 0x08
    33e2:	df 80       	ldd	r13, Y+7	; 0x07
    33e4:	ee 80       	ldd	r14, Y+6	; 0x06
    33e6:	fd 80       	ldd	r15, Y+5	; 0x05
    33e8:	0c 81       	ldd	r16, Y+4	; 0x04
    33ea:	1b 81       	ldd	r17, Y+3	; 0x03
    33ec:	aa 81       	ldd	r26, Y+2	; 0x02
    33ee:	b9 81       	ldd	r27, Y+1	; 0x01
    33f0:	ce 0f       	add	r28, r30
    33f2:	d1 1d       	adc	r29, r1
    33f4:	0f b6       	in	r0, 0x3f	; 63
    33f6:	f8 94       	cli
    33f8:	de bf       	out	0x3e, r29	; 62
    33fa:	0f be       	out	0x3f, r0	; 63
    33fc:	cd bf       	out	0x3d, r28	; 61
    33fe:	ed 01       	movw	r28, r26
    3400:	08 95       	ret

00003402 <_exit>:
    3402:	f8 94       	cli

00003404 <__stop_program>:
    3404:	ff cf       	rjmp	.-2      	; 0x3404 <__stop_program>
