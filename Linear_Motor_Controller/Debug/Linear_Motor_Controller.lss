
Linear_Motor_Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000008d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000860  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  000008d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000904  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000095e  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000072b  00000000  00000000  00001312  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044a  00000000  00000000  00001a3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  00001e88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000466  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000030b  00000000  00000000  00002446  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002751  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 28 01 	jmp	0x250	; 0x250 <__vector_7>
  20:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_8>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 88 01 	jmp	0x310	; 0x310 <__vector_11>
  30:	0c 94 48 01 	jmp	0x290	; 0x290 <__vector_12>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 a0 01 	call	0x340	; 0x340 <main>
  88:	0c 94 2e 04 	jmp	0x85c	; 0x85c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <driverTimers_Init>:
		

	
}

void driverTimersInterrupts_Init(){
  90:	e1 eb       	ldi	r30, 0xB1	; 177
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	81 60       	ori	r24, 0x01	; 1
  98:	80 83       	st	Z, r24
  9a:	80 ed       	ldi	r24, 0xD0	; 208
  9c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  a0:	88 e1       	ldi	r24, 0x18	; 24
  a2:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
  a6:	e1 e8       	ldi	r30, 0x81	; 129
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	80 83       	st	Z, r24
  b0:	20 9a       	sbi	0x04, 0	; 4
  b2:	8a b1       	in	r24, 0x0a	; 10
  b4:	80 6e       	ori	r24, 0xE0	; 224
  b6:	8a b9       	out	0x0a, r24	; 10
  b8:	28 98       	cbi	0x05, 0	; 5
  ba:	5d 98       	cbi	0x0b, 5	; 11
  bc:	5f 98       	cbi	0x0b, 7	; 11
  be:	5e 98       	cbi	0x0b, 6	; 11
  c0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <isNegativeCycle>
  c4:	08 95       	ret

000000c6 <setFrequency>:
  c6:	4f 92       	push	r4
  c8:	5f 92       	push	r5
  ca:	6f 92       	push	r6
  cc:	7f 92       	push	r7
  ce:	8f 92       	push	r8
  d0:	9f 92       	push	r9
  d2:	af 92       	push	r10
  d4:	bf 92       	push	r11
  d6:	cf 92       	push	r12
  d8:	df 92       	push	r13
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	2b 01       	movw	r4, r22
  e0:	3c 01       	movw	r6, r24
  e2:	69 01       	movw	r12, r18
  e4:	7a 01       	movw	r14, r20
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	80 e8       	ldi	r24, 0x80	; 128
  ec:	9f e3       	ldi	r25, 0x3F	; 63
  ee:	0e 94 af 01 	call	0x35e	; 0x35e <__subsf3>
  f2:	4b 01       	movw	r8, r22
  f4:	5c 01       	movw	r10, r24
  f6:	a7 01       	movw	r20, r14
  f8:	96 01       	movw	r18, r12
  fa:	c7 01       	movw	r24, r14
  fc:	b6 01       	movw	r22, r12
  fe:	0e 94 b0 01 	call	0x360	; 0x360 <__addsf3>
 102:	a5 01       	movw	r20, r10
 104:	94 01       	movw	r18, r8
 106:	0e 94 21 02 	call	0x442	; 0x442 <__divsf3>
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	50 e4       	ldi	r21, 0x40	; 64
 112:	0e 94 b0 01 	call	0x360	; 0x360 <__addsf3>
 116:	a3 01       	movw	r20, r6
 118:	92 01       	movw	r18, r4
 11a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__mulsf3>
 11e:	9b 01       	movw	r18, r22
 120:	ac 01       	movw	r20, r24
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	8a e7       	ldi	r24, 0x7A	; 122
 128:	94 e4       	ldi	r25, 0x44	; 68
 12a:	0e 94 21 02 	call	0x442	; 0x442 <__divsf3>
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	4a e7       	ldi	r20, 0x7A	; 122
 134:	54 e4       	ldi	r21, 0x44	; 68
 136:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__mulsf3>
 13a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <round>
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	48 ee       	ldi	r20, 0xE8	; 232
 144:	54 e4       	ldi	r21, 0x44	; 68
 146:	0e 94 b0 01 	call	0x360	; 0x360 <__addsf3>
 14a:	0e 94 93 02 	call	0x526	; 0x526 <__fixunssfsi>
 14e:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <T_OFF1+0x1>
 152:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <T_OFF1>
 156:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <T_OFF2+0x1>
 15a:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <T_OFF2>
 15e:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <T_OFF1>
 162:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <T_OFF1+0x1>
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 c2 02 	call	0x584	; 0x584 <__floatunsisf>
 16e:	a7 01       	movw	r20, r14
 170:	96 01       	movw	r18, r12
 172:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__mulsf3>
 176:	a5 01       	movw	r20, r10
 178:	94 01       	movw	r18, r8
 17a:	0e 94 21 02 	call	0x442	; 0x442 <__divsf3>
 17e:	0e 94 93 02 	call	0x526	; 0x526 <__fixunssfsi>
 182:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <T_ON+0x1>
 186:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <T_ON>
 18a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <T_ON>
 18e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <T_ON+0x1>
 192:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 196:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 19a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <T_ON>
 19e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <T_ON+0x1>
 1a2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <T_OFF1>
 1a6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <T_OFF1+0x1>
 1aa:	82 0f       	add	r24, r18
 1ac:	93 1f       	adc	r25, r19
 1ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1b6:	20 e0       	ldi	r18, 0x00	; 0
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	a9 01       	movw	r20, r18
 1bc:	c7 01       	movw	r24, r14
 1be:	b6 01       	movw	r22, r12
 1c0:	0e 94 1c 02 	call	0x438	; 0x438 <__cmpsf2>
 1c4:	81 11       	cpse	r24, r1
 1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <setFrequency+0x10a>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1ce:	07 c0       	rjmp	.+14     	; 0x1de <setFrequency+0x118>
 1d0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 1d4:	ef e6       	ldi	r30, 0x6F	; 111
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	86 60       	ori	r24, 0x06	; 6
 1dc:	80 83       	st	Z, r24
 1de:	ff 90       	pop	r15
 1e0:	ef 90       	pop	r14
 1e2:	df 90       	pop	r13
 1e4:	cf 90       	pop	r12
 1e6:	bf 90       	pop	r11
 1e8:	af 90       	pop	r10
 1ea:	9f 90       	pop	r9
 1ec:	8f 90       	pop	r8
 1ee:	7f 90       	pop	r7
 1f0:	6f 90       	pop	r6
 1f2:	5f 90       	pop	r5
 1f4:	4f 90       	pop	r4
 1f6:	08 95       	ret

000001f8 <__vector_8>:
		


}

  ISR(TIMER2_COMPB_vect){
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	8f 93       	push	r24
 204:	9f 93       	push	r25
 206:	ef 93       	push	r30
 208:	ff 93       	push	r31

		TIMSK2 &= ~(1<<OCIE2B);
 20a:	e0 e7       	ldi	r30, 0x70	; 112
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	8b 7f       	andi	r24, 0xFB	; 251
 212:	80 83       	st	Z, r24
		TCNT1 = 0; //clear timer 1 count  to start next half cycle
 214:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 218:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 		if (stopDriver==0){
 21c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 220:	81 11       	cpse	r24, r1
 222:	07 c0       	rjmp	.+14     	; 0x232 <__vector_8+0x3a>
			 if (isNegativeCycle){		//Set pins for next half cycle
 224:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 228:	88 23       	and	r24, r24
 22a:	11 f0       	breq	.+4      	; 0x230 <__vector_8+0x38>
				SET_SW1; //sets pins for positive cycle
 22c:	28 9a       	sbi	0x05, 0	; 5
 22e:	01 c0       	rjmp	.+2      	; 0x232 <__vector_8+0x3a>
			} else {
				SET_SW2;//set pins on for positive cycle
 230:	5d 9a       	sbi	0x0b, 5	; 11
			}
		 
		 }
		
		isNegativeCycle = !isNegativeCycle; //set flag to indicate next half cycle
 232:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <isNegativeCycle>
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	89 27       	eor	r24, r25
 23a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <isNegativeCycle>
	  
	
  }
 23e:	ff 91       	pop	r31
 240:	ef 91       	pop	r30
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <__vector_7>:

 																		
ISR(TIMER2_COMPA_vect){
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	8f 93       	push	r24
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31

		 TIMSK2 &= ~(1<<OCIE2A);	// Disable high dead time timer interrupts
 260:	e0 e7       	ldi	r30, 0x70	; 112
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	8d 7f       	andi	r24, 0xFD	; 253
 268:	80 83       	st	Z, r24
		 
		 if (stopDriver==0){
 26a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 26e:	81 11       	cpse	r24, r1
 270:	07 c0       	rjmp	.+14     	; 0x280 <__vector_7+0x30>
		 	if (isNegativeCycle){
 272:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 276:	88 23       	and	r24, r24
 278:	11 f0       	breq	.+4      	; 0x27e <__vector_7+0x2e>
				SET_SW4; //turn on SW4
 27a:	5e 9a       	sbi	0x0b, 6	; 11
 27c:	01 c0       	rjmp	.+2      	; 0x280 <__vector_7+0x30>
			} else {
				SET_SW3; //turn on SW3
 27e:	5f 9a       	sbi	0x0b, 7	; 11
		 
		 }

	 
	
}
 280:	ff 91       	pop	r31
 282:	ef 91       	pop	r30
 284:	8f 91       	pop	r24
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <__vector_12>:
									



ISR(TIMER1_COMPB_vect){
 290:	1f 92       	push	r1
 292:	0f 92       	push	r0
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	0f 92       	push	r0
 298:	11 24       	eor	r1, r1
 29a:	2f 93       	push	r18
 29c:	3f 93       	push	r19
 29e:	8f 93       	push	r24
 2a0:	9f 93       	push	r25
 2a2:	ef 93       	push	r30
 2a4:	ff 93       	push	r31
	
		  if (isNegativeCycle){		//set to correct timer upper value for each half cycle
 2a6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 2aa:	88 23       	and	r24, r24
 2ac:	81 f0       	breq	.+32     	; 0x2ce <__vector_12+0x3e>
 		CLEAR_SW2; //turn off SW2
 2ae:	5d 98       	cbi	0x0b, 5	; 11
		 OCR1A = T_ON + T_OFF2; 
 2b0:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <T_ON>
 2b4:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <T_ON+0x1>
 2b8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <T_OFF2>
 2bc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <T_OFF2+0x1>
 2c0:	82 0f       	add	r24, r18
 2c2:	93 1f       	adc	r25, r19
 2c4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2c8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2cc:	0f c0       	rjmp	.+30     	; 0x2ec <__vector_12+0x5c>
 	} else {
 		CLEAR_SW1; //TURN OFF SW1
 2ce:	28 98       	cbi	0x05, 0	; 5
		 OCR1A = T_ON + T_OFF1;
 2d0:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <T_ON>
 2d4:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <T_ON+0x1>
 2d8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <T_OFF1>
 2dc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <T_OFF1+0x1>
 2e0:	82 0f       	add	r24, r18
 2e2:	93 1f       	adc	r25, r19
 2e4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 	}

	TCNT2=0; 													//clear counter to start dead time timer
 2ec:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	TIMSK2 |= (1<<OCIE2A);			
 2f0:	e0 e7       	ldi	r30, 0x70	; 112
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	82 60       	ori	r24, 0x02	; 2
 2f8:	80 83       	st	Z, r24
	  
 								// Enable dead time timer compare match A interrupts
}	
 2fa:	ff 91       	pop	r31
 2fc:	ef 91       	pop	r30
 2fe:	9f 91       	pop	r25
 300:	8f 91       	pop	r24
 302:	3f 91       	pop	r19
 304:	2f 91       	pop	r18
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <__vector_11>:

	
ISR(TIMER1_COMPA_vect){
 310:	1f 92       	push	r1
 312:	0f 92       	push	r0
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	0f 92       	push	r0
 318:	11 24       	eor	r1, r1
 31a:	8f 93       	push	r24
	 
		  if (isNegativeCycle){
 31c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 320:	88 23       	and	r24, r24
 322:	11 f0       	breq	.+4      	; 0x328 <__vector_11+0x18>
 			CLEAR_SW3; //turns off SW3
 324:	5f 98       	cbi	0x0b, 7	; 11
 326:	01 c0       	rjmp	.+2      	; 0x32a <__vector_11+0x1a>
 		} else {
 			CLEAR_SW4; //turns off SW4
 328:	5e 98       	cbi	0x0b, 6	; 11
 		}
 			TCNT2 = 0 ; //reset timer 0
 32a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 			TIMSK2 = (1<<OCIE2B); //enable low deadtime timer interrupts		
 32e:	84 e0       	ldi	r24, 0x04	; 4
 330:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>


}
 334:	8f 91       	pop	r24
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <main>:
{
	/*
	uart_initiate(UBRR_VALUE);
	char message[MAX_SIZE] = "Hello we are Team 1!\n\r";
	*/
	sei();	
 340:	78 94       	sei
	stopDriver = 0;
 342:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		float frequency = 13.0;
		float dutyCycle= 0.00; //must be greater than 0, less that 1
	
		setFrequency(frequency, dutyCycle);//acquire on/off times or alternatively could manually set on and off times
 346:	20 e0       	ldi	r18, 0x00	; 0
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	a9 01       	movw	r20, r18
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	80 e5       	ldi	r24, 0x50	; 80
 352:	91 e4       	ldi	r25, 0x41	; 65
 354:	0e 94 63 00 	call	0xc6	; 0xc6 <setFrequency>
		driverTimers_Init();
 358:	0e 94 48 00 	call	0x90	; 0x90 <driverTimers_Init>
 35c:	ff cf       	rjmp	.-2      	; 0x35c <main+0x1c>

0000035e <__subsf3>:
 35e:	50 58       	subi	r21, 0x80	; 128

00000360 <__addsf3>:
 360:	bb 27       	eor	r27, r27
 362:	aa 27       	eor	r26, r26
 364:	0e 94 c7 01 	call	0x38e	; 0x38e <__addsf3x>
 368:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_round>
 36c:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscA>
 370:	38 f0       	brcs	.+14     	; 0x380 <__addsf3+0x20>
 372:	0e 94 33 03 	call	0x666	; 0x666 <__fp_pscB>
 376:	20 f0       	brcs	.+8      	; 0x380 <__addsf3+0x20>
 378:	39 f4       	brne	.+14     	; 0x388 <__addsf3+0x28>
 37a:	9f 3f       	cpi	r25, 0xFF	; 255
 37c:	19 f4       	brne	.+6      	; 0x384 <__addsf3+0x24>
 37e:	26 f4       	brtc	.+8      	; 0x388 <__addsf3+0x28>
 380:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_nan>
 384:	0e f4       	brtc	.+2      	; 0x388 <__addsf3+0x28>
 386:	e0 95       	com	r30
 388:	e7 fb       	bst	r30, 7
 38a:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_inf>

0000038e <__addsf3x>:
 38e:	e9 2f       	mov	r30, r25
 390:	0e 94 4b 03 	call	0x696	; 0x696 <__fp_split3>
 394:	58 f3       	brcs	.-42     	; 0x36c <__addsf3+0xc>
 396:	ba 17       	cp	r27, r26
 398:	62 07       	cpc	r22, r18
 39a:	73 07       	cpc	r23, r19
 39c:	84 07       	cpc	r24, r20
 39e:	95 07       	cpc	r25, r21
 3a0:	20 f0       	brcs	.+8      	; 0x3aa <__addsf3x+0x1c>
 3a2:	79 f4       	brne	.+30     	; 0x3c2 <__addsf3x+0x34>
 3a4:	a6 f5       	brtc	.+104    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3a6:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_zero>
 3aa:	0e f4       	brtc	.+2      	; 0x3ae <__addsf3x+0x20>
 3ac:	e0 95       	com	r30
 3ae:	0b 2e       	mov	r0, r27
 3b0:	ba 2f       	mov	r27, r26
 3b2:	a0 2d       	mov	r26, r0
 3b4:	0b 01       	movw	r0, r22
 3b6:	b9 01       	movw	r22, r18
 3b8:	90 01       	movw	r18, r0
 3ba:	0c 01       	movw	r0, r24
 3bc:	ca 01       	movw	r24, r20
 3be:	a0 01       	movw	r20, r0
 3c0:	11 24       	eor	r1, r1
 3c2:	ff 27       	eor	r31, r31
 3c4:	59 1b       	sub	r21, r25
 3c6:	99 f0       	breq	.+38     	; 0x3ee <__addsf3x+0x60>
 3c8:	59 3f       	cpi	r21, 0xF9	; 249
 3ca:	50 f4       	brcc	.+20     	; 0x3e0 <__addsf3x+0x52>
 3cc:	50 3e       	cpi	r21, 0xE0	; 224
 3ce:	68 f1       	brcs	.+90     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3d0:	1a 16       	cp	r1, r26
 3d2:	f0 40       	sbci	r31, 0x00	; 0
 3d4:	a2 2f       	mov	r26, r18
 3d6:	23 2f       	mov	r18, r19
 3d8:	34 2f       	mov	r19, r20
 3da:	44 27       	eor	r20, r20
 3dc:	58 5f       	subi	r21, 0xF8	; 248
 3de:	f3 cf       	rjmp	.-26     	; 0x3c6 <__addsf3x+0x38>
 3e0:	46 95       	lsr	r20
 3e2:	37 95       	ror	r19
 3e4:	27 95       	ror	r18
 3e6:	a7 95       	ror	r26
 3e8:	f0 40       	sbci	r31, 0x00	; 0
 3ea:	53 95       	inc	r21
 3ec:	c9 f7       	brne	.-14     	; 0x3e0 <__addsf3x+0x52>
 3ee:	7e f4       	brtc	.+30     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f0:	1f 16       	cp	r1, r31
 3f2:	ba 0b       	sbc	r27, r26
 3f4:	62 0b       	sbc	r22, r18
 3f6:	73 0b       	sbc	r23, r19
 3f8:	84 0b       	sbc	r24, r20
 3fa:	ba f0       	brmi	.+46     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3fc:	91 50       	subi	r25, 0x01	; 1
 3fe:	a1 f0       	breq	.+40     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 400:	ff 0f       	add	r31, r31
 402:	bb 1f       	adc	r27, r27
 404:	66 1f       	adc	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	88 1f       	adc	r24, r24
 40a:	c2 f7       	brpl	.-16     	; 0x3fc <__addsf3x+0x6e>
 40c:	0e c0       	rjmp	.+28     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 40e:	ba 0f       	add	r27, r26
 410:	62 1f       	adc	r22, r18
 412:	73 1f       	adc	r23, r19
 414:	84 1f       	adc	r24, r20
 416:	48 f4       	brcc	.+18     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 418:	87 95       	ror	r24
 41a:	77 95       	ror	r23
 41c:	67 95       	ror	r22
 41e:	b7 95       	ror	r27
 420:	f7 95       	ror	r31
 422:	9e 3f       	cpi	r25, 0xFE	; 254
 424:	08 f0       	brcs	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 426:	b0 cf       	rjmp	.-160    	; 0x388 <__addsf3+0x28>
 428:	93 95       	inc	r25
 42a:	88 0f       	add	r24, r24
 42c:	08 f0       	brcs	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	99 27       	eor	r25, r25
 430:	ee 0f       	add	r30, r30
 432:	97 95       	ror	r25
 434:	87 95       	ror	r24
 436:	08 95       	ret

00000438 <__cmpsf2>:
 438:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_cmp>
 43c:	08 f4       	brcc	.+2      	; 0x440 <__cmpsf2+0x8>
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	08 95       	ret

00000442 <__divsf3>:
 442:	0e 94 35 02 	call	0x46a	; 0x46a <__divsf3x>
 446:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_round>
 44a:	0e 94 33 03 	call	0x666	; 0x666 <__fp_pscB>
 44e:	58 f0       	brcs	.+22     	; 0x466 <__divsf3+0x24>
 450:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscA>
 454:	40 f0       	brcs	.+16     	; 0x466 <__divsf3+0x24>
 456:	29 f4       	brne	.+10     	; 0x462 <__divsf3+0x20>
 458:	5f 3f       	cpi	r21, 0xFF	; 255
 45a:	29 f0       	breq	.+10     	; 0x466 <__divsf3+0x24>
 45c:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_inf>
 460:	51 11       	cpse	r21, r1
 462:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_szero>
 466:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_nan>

0000046a <__divsf3x>:
 46a:	0e 94 4b 03 	call	0x696	; 0x696 <__fp_split3>
 46e:	68 f3       	brcs	.-38     	; 0x44a <__divsf3+0x8>

00000470 <__divsf3_pse>:
 470:	99 23       	and	r25, r25
 472:	b1 f3       	breq	.-20     	; 0x460 <__divsf3+0x1e>
 474:	55 23       	and	r21, r21
 476:	91 f3       	breq	.-28     	; 0x45c <__divsf3+0x1a>
 478:	95 1b       	sub	r25, r21
 47a:	55 0b       	sbc	r21, r21
 47c:	bb 27       	eor	r27, r27
 47e:	aa 27       	eor	r26, r26
 480:	62 17       	cp	r22, r18
 482:	73 07       	cpc	r23, r19
 484:	84 07       	cpc	r24, r20
 486:	38 f0       	brcs	.+14     	; 0x496 <__divsf3_pse+0x26>
 488:	9f 5f       	subi	r25, 0xFF	; 255
 48a:	5f 4f       	sbci	r21, 0xFF	; 255
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	44 1f       	adc	r20, r20
 492:	aa 1f       	adc	r26, r26
 494:	a9 f3       	breq	.-22     	; 0x480 <__divsf3_pse+0x10>
 496:	35 d0       	rcall	.+106    	; 0x502 <__divsf3_pse+0x92>
 498:	0e 2e       	mov	r0, r30
 49a:	3a f0       	brmi	.+14     	; 0x4aa <__divsf3_pse+0x3a>
 49c:	e0 e8       	ldi	r30, 0x80	; 128
 49e:	32 d0       	rcall	.+100    	; 0x504 <__divsf3_pse+0x94>
 4a0:	91 50       	subi	r25, 0x01	; 1
 4a2:	50 40       	sbci	r21, 0x00	; 0
 4a4:	e6 95       	lsr	r30
 4a6:	00 1c       	adc	r0, r0
 4a8:	ca f7       	brpl	.-14     	; 0x49c <__divsf3_pse+0x2c>
 4aa:	2b d0       	rcall	.+86     	; 0x502 <__divsf3_pse+0x92>
 4ac:	fe 2f       	mov	r31, r30
 4ae:	29 d0       	rcall	.+82     	; 0x502 <__divsf3_pse+0x92>
 4b0:	66 0f       	add	r22, r22
 4b2:	77 1f       	adc	r23, r23
 4b4:	88 1f       	adc	r24, r24
 4b6:	bb 1f       	adc	r27, r27
 4b8:	26 17       	cp	r18, r22
 4ba:	37 07       	cpc	r19, r23
 4bc:	48 07       	cpc	r20, r24
 4be:	ab 07       	cpc	r26, r27
 4c0:	b0 e8       	ldi	r27, 0x80	; 128
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <__divsf3_pse+0x56>
 4c4:	bb 0b       	sbc	r27, r27
 4c6:	80 2d       	mov	r24, r0
 4c8:	bf 01       	movw	r22, r30
 4ca:	ff 27       	eor	r31, r31
 4cc:	93 58       	subi	r25, 0x83	; 131
 4ce:	5f 4f       	sbci	r21, 0xFF	; 255
 4d0:	3a f0       	brmi	.+14     	; 0x4e0 <__divsf3_pse+0x70>
 4d2:	9e 3f       	cpi	r25, 0xFE	; 254
 4d4:	51 05       	cpc	r21, r1
 4d6:	78 f0       	brcs	.+30     	; 0x4f6 <__divsf3_pse+0x86>
 4d8:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_inf>
 4dc:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_szero>
 4e0:	5f 3f       	cpi	r21, 0xFF	; 255
 4e2:	e4 f3       	brlt	.-8      	; 0x4dc <__divsf3_pse+0x6c>
 4e4:	98 3e       	cpi	r25, 0xE8	; 232
 4e6:	d4 f3       	brlt	.-12     	; 0x4dc <__divsf3_pse+0x6c>
 4e8:	86 95       	lsr	r24
 4ea:	77 95       	ror	r23
 4ec:	67 95       	ror	r22
 4ee:	b7 95       	ror	r27
 4f0:	f7 95       	ror	r31
 4f2:	9f 5f       	subi	r25, 0xFF	; 255
 4f4:	c9 f7       	brne	.-14     	; 0x4e8 <__divsf3_pse+0x78>
 4f6:	88 0f       	add	r24, r24
 4f8:	91 1d       	adc	r25, r1
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	97 f9       	bld	r25, 7
 500:	08 95       	ret
 502:	e1 e0       	ldi	r30, 0x01	; 1
 504:	66 0f       	add	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	88 1f       	adc	r24, r24
 50a:	bb 1f       	adc	r27, r27
 50c:	62 17       	cp	r22, r18
 50e:	73 07       	cpc	r23, r19
 510:	84 07       	cpc	r24, r20
 512:	ba 07       	cpc	r27, r26
 514:	20 f0       	brcs	.+8      	; 0x51e <__divsf3_pse+0xae>
 516:	62 1b       	sub	r22, r18
 518:	73 0b       	sbc	r23, r19
 51a:	84 0b       	sbc	r24, r20
 51c:	ba 0b       	sbc	r27, r26
 51e:	ee 1f       	adc	r30, r30
 520:	88 f7       	brcc	.-30     	; 0x504 <__divsf3_pse+0x94>
 522:	e0 95       	com	r30
 524:	08 95       	ret

00000526 <__fixunssfsi>:
 526:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_splitA>
 52a:	88 f0       	brcs	.+34     	; 0x54e <__fixunssfsi+0x28>
 52c:	9f 57       	subi	r25, 0x7F	; 127
 52e:	98 f0       	brcs	.+38     	; 0x556 <__fixunssfsi+0x30>
 530:	b9 2f       	mov	r27, r25
 532:	99 27       	eor	r25, r25
 534:	b7 51       	subi	r27, 0x17	; 23
 536:	b0 f0       	brcs	.+44     	; 0x564 <__fixunssfsi+0x3e>
 538:	e1 f0       	breq	.+56     	; 0x572 <__fixunssfsi+0x4c>
 53a:	66 0f       	add	r22, r22
 53c:	77 1f       	adc	r23, r23
 53e:	88 1f       	adc	r24, r24
 540:	99 1f       	adc	r25, r25
 542:	1a f0       	brmi	.+6      	; 0x54a <__fixunssfsi+0x24>
 544:	ba 95       	dec	r27
 546:	c9 f7       	brne	.-14     	; 0x53a <__fixunssfsi+0x14>
 548:	14 c0       	rjmp	.+40     	; 0x572 <__fixunssfsi+0x4c>
 54a:	b1 30       	cpi	r27, 0x01	; 1
 54c:	91 f0       	breq	.+36     	; 0x572 <__fixunssfsi+0x4c>
 54e:	0e 94 6d 03 	call	0x6da	; 0x6da <__fp_zero>
 552:	b1 e0       	ldi	r27, 0x01	; 1
 554:	08 95       	ret
 556:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_zero>
 55a:	67 2f       	mov	r22, r23
 55c:	78 2f       	mov	r23, r24
 55e:	88 27       	eor	r24, r24
 560:	b8 5f       	subi	r27, 0xF8	; 248
 562:	39 f0       	breq	.+14     	; 0x572 <__fixunssfsi+0x4c>
 564:	b9 3f       	cpi	r27, 0xF9	; 249
 566:	cc f3       	brlt	.-14     	; 0x55a <__fixunssfsi+0x34>
 568:	86 95       	lsr	r24
 56a:	77 95       	ror	r23
 56c:	67 95       	ror	r22
 56e:	b3 95       	inc	r27
 570:	d9 f7       	brne	.-10     	; 0x568 <__fixunssfsi+0x42>
 572:	3e f4       	brtc	.+14     	; 0x582 <__fixunssfsi+0x5c>
 574:	90 95       	com	r25
 576:	80 95       	com	r24
 578:	70 95       	com	r23
 57a:	61 95       	neg	r22
 57c:	7f 4f       	sbci	r23, 0xFF	; 255
 57e:	8f 4f       	sbci	r24, 0xFF	; 255
 580:	9f 4f       	sbci	r25, 0xFF	; 255
 582:	08 95       	ret

00000584 <__floatunsisf>:
 584:	e8 94       	clt
 586:	09 c0       	rjmp	.+18     	; 0x59a <__floatsisf+0x12>

00000588 <__floatsisf>:
 588:	97 fb       	bst	r25, 7
 58a:	3e f4       	brtc	.+14     	; 0x59a <__floatsisf+0x12>
 58c:	90 95       	com	r25
 58e:	80 95       	com	r24
 590:	70 95       	com	r23
 592:	61 95       	neg	r22
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	99 23       	and	r25, r25
 59c:	a9 f0       	breq	.+42     	; 0x5c8 <__floatsisf+0x40>
 59e:	f9 2f       	mov	r31, r25
 5a0:	96 e9       	ldi	r25, 0x96	; 150
 5a2:	bb 27       	eor	r27, r27
 5a4:	93 95       	inc	r25
 5a6:	f6 95       	lsr	r31
 5a8:	87 95       	ror	r24
 5aa:	77 95       	ror	r23
 5ac:	67 95       	ror	r22
 5ae:	b7 95       	ror	r27
 5b0:	f1 11       	cpse	r31, r1
 5b2:	f8 cf       	rjmp	.-16     	; 0x5a4 <__floatsisf+0x1c>
 5b4:	fa f4       	brpl	.+62     	; 0x5f4 <__floatsisf+0x6c>
 5b6:	bb 0f       	add	r27, r27
 5b8:	11 f4       	brne	.+4      	; 0x5be <__floatsisf+0x36>
 5ba:	60 ff       	sbrs	r22, 0
 5bc:	1b c0       	rjmp	.+54     	; 0x5f4 <__floatsisf+0x6c>
 5be:	6f 5f       	subi	r22, 0xFF	; 255
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	16 c0       	rjmp	.+44     	; 0x5f4 <__floatsisf+0x6c>
 5c8:	88 23       	and	r24, r24
 5ca:	11 f0       	breq	.+4      	; 0x5d0 <__floatsisf+0x48>
 5cc:	96 e9       	ldi	r25, 0x96	; 150
 5ce:	11 c0       	rjmp	.+34     	; 0x5f2 <__floatsisf+0x6a>
 5d0:	77 23       	and	r23, r23
 5d2:	21 f0       	breq	.+8      	; 0x5dc <__floatsisf+0x54>
 5d4:	9e e8       	ldi	r25, 0x8E	; 142
 5d6:	87 2f       	mov	r24, r23
 5d8:	76 2f       	mov	r23, r22
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <__floatsisf+0x5e>
 5dc:	66 23       	and	r22, r22
 5de:	71 f0       	breq	.+28     	; 0x5fc <__floatsisf+0x74>
 5e0:	96 e8       	ldi	r25, 0x86	; 134
 5e2:	86 2f       	mov	r24, r22
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	2a f0       	brmi	.+10     	; 0x5f4 <__floatsisf+0x6c>
 5ea:	9a 95       	dec	r25
 5ec:	66 0f       	add	r22, r22
 5ee:	77 1f       	adc	r23, r23
 5f0:	88 1f       	adc	r24, r24
 5f2:	da f7       	brpl	.-10     	; 0x5ea <__floatsisf+0x62>
 5f4:	88 0f       	add	r24, r24
 5f6:	96 95       	lsr	r25
 5f8:	87 95       	ror	r24
 5fa:	97 f9       	bld	r25, 7
 5fc:	08 95       	ret

000005fe <__fp_cmp>:
 5fe:	99 0f       	add	r25, r25
 600:	00 08       	sbc	r0, r0
 602:	55 0f       	add	r21, r21
 604:	aa 0b       	sbc	r26, r26
 606:	e0 e8       	ldi	r30, 0x80	; 128
 608:	fe ef       	ldi	r31, 0xFE	; 254
 60a:	16 16       	cp	r1, r22
 60c:	17 06       	cpc	r1, r23
 60e:	e8 07       	cpc	r30, r24
 610:	f9 07       	cpc	r31, r25
 612:	c0 f0       	brcs	.+48     	; 0x644 <__fp_cmp+0x46>
 614:	12 16       	cp	r1, r18
 616:	13 06       	cpc	r1, r19
 618:	e4 07       	cpc	r30, r20
 61a:	f5 07       	cpc	r31, r21
 61c:	98 f0       	brcs	.+38     	; 0x644 <__fp_cmp+0x46>
 61e:	62 1b       	sub	r22, r18
 620:	73 0b       	sbc	r23, r19
 622:	84 0b       	sbc	r24, r20
 624:	95 0b       	sbc	r25, r21
 626:	39 f4       	brne	.+14     	; 0x636 <__fp_cmp+0x38>
 628:	0a 26       	eor	r0, r26
 62a:	61 f0       	breq	.+24     	; 0x644 <__fp_cmp+0x46>
 62c:	23 2b       	or	r18, r19
 62e:	24 2b       	or	r18, r20
 630:	25 2b       	or	r18, r21
 632:	21 f4       	brne	.+8      	; 0x63c <__fp_cmp+0x3e>
 634:	08 95       	ret
 636:	0a 26       	eor	r0, r26
 638:	09 f4       	brne	.+2      	; 0x63c <__fp_cmp+0x3e>
 63a:	a1 40       	sbci	r26, 0x01	; 1
 63c:	a6 95       	lsr	r26
 63e:	8f ef       	ldi	r24, 0xFF	; 255
 640:	81 1d       	adc	r24, r1
 642:	81 1d       	adc	r24, r1
 644:	08 95       	ret

00000646 <__fp_inf>:
 646:	97 f9       	bld	r25, 7
 648:	9f 67       	ori	r25, 0x7F	; 127
 64a:	80 e8       	ldi	r24, 0x80	; 128
 64c:	70 e0       	ldi	r23, 0x00	; 0
 64e:	60 e0       	ldi	r22, 0x00	; 0
 650:	08 95       	ret

00000652 <__fp_nan>:
 652:	9f ef       	ldi	r25, 0xFF	; 255
 654:	80 ec       	ldi	r24, 0xC0	; 192
 656:	08 95       	ret

00000658 <__fp_pscA>:
 658:	00 24       	eor	r0, r0
 65a:	0a 94       	dec	r0
 65c:	16 16       	cp	r1, r22
 65e:	17 06       	cpc	r1, r23
 660:	18 06       	cpc	r1, r24
 662:	09 06       	cpc	r0, r25
 664:	08 95       	ret

00000666 <__fp_pscB>:
 666:	00 24       	eor	r0, r0
 668:	0a 94       	dec	r0
 66a:	12 16       	cp	r1, r18
 66c:	13 06       	cpc	r1, r19
 66e:	14 06       	cpc	r1, r20
 670:	05 06       	cpc	r0, r21
 672:	08 95       	ret

00000674 <__fp_round>:
 674:	09 2e       	mov	r0, r25
 676:	03 94       	inc	r0
 678:	00 0c       	add	r0, r0
 67a:	11 f4       	brne	.+4      	; 0x680 <__fp_round+0xc>
 67c:	88 23       	and	r24, r24
 67e:	52 f0       	brmi	.+20     	; 0x694 <__fp_round+0x20>
 680:	bb 0f       	add	r27, r27
 682:	40 f4       	brcc	.+16     	; 0x694 <__fp_round+0x20>
 684:	bf 2b       	or	r27, r31
 686:	11 f4       	brne	.+4      	; 0x68c <__fp_round+0x18>
 688:	60 ff       	sbrs	r22, 0
 68a:	04 c0       	rjmp	.+8      	; 0x694 <__fp_round+0x20>
 68c:	6f 5f       	subi	r22, 0xFF	; 255
 68e:	7f 4f       	sbci	r23, 0xFF	; 255
 690:	8f 4f       	sbci	r24, 0xFF	; 255
 692:	9f 4f       	sbci	r25, 0xFF	; 255
 694:	08 95       	ret

00000696 <__fp_split3>:
 696:	57 fd       	sbrc	r21, 7
 698:	90 58       	subi	r25, 0x80	; 128
 69a:	44 0f       	add	r20, r20
 69c:	55 1f       	adc	r21, r21
 69e:	59 f0       	breq	.+22     	; 0x6b6 <__fp_splitA+0x10>
 6a0:	5f 3f       	cpi	r21, 0xFF	; 255
 6a2:	71 f0       	breq	.+28     	; 0x6c0 <__fp_splitA+0x1a>
 6a4:	47 95       	ror	r20

000006a6 <__fp_splitA>:
 6a6:	88 0f       	add	r24, r24
 6a8:	97 fb       	bst	r25, 7
 6aa:	99 1f       	adc	r25, r25
 6ac:	61 f0       	breq	.+24     	; 0x6c6 <__fp_splitA+0x20>
 6ae:	9f 3f       	cpi	r25, 0xFF	; 255
 6b0:	79 f0       	breq	.+30     	; 0x6d0 <__fp_splitA+0x2a>
 6b2:	87 95       	ror	r24
 6b4:	08 95       	ret
 6b6:	12 16       	cp	r1, r18
 6b8:	13 06       	cpc	r1, r19
 6ba:	14 06       	cpc	r1, r20
 6bc:	55 1f       	adc	r21, r21
 6be:	f2 cf       	rjmp	.-28     	; 0x6a4 <__fp_split3+0xe>
 6c0:	46 95       	lsr	r20
 6c2:	f1 df       	rcall	.-30     	; 0x6a6 <__fp_splitA>
 6c4:	08 c0       	rjmp	.+16     	; 0x6d6 <__fp_splitA+0x30>
 6c6:	16 16       	cp	r1, r22
 6c8:	17 06       	cpc	r1, r23
 6ca:	18 06       	cpc	r1, r24
 6cc:	99 1f       	adc	r25, r25
 6ce:	f1 cf       	rjmp	.-30     	; 0x6b2 <__fp_splitA+0xc>
 6d0:	86 95       	lsr	r24
 6d2:	71 05       	cpc	r23, r1
 6d4:	61 05       	cpc	r22, r1
 6d6:	08 94       	sec
 6d8:	08 95       	ret

000006da <__fp_zero>:
 6da:	e8 94       	clt

000006dc <__fp_szero>:
 6dc:	bb 27       	eor	r27, r27
 6de:	66 27       	eor	r22, r22
 6e0:	77 27       	eor	r23, r23
 6e2:	cb 01       	movw	r24, r22
 6e4:	97 f9       	bld	r25, 7
 6e6:	08 95       	ret

000006e8 <__mulsf3>:
 6e8:	0e 94 87 03 	call	0x70e	; 0x70e <__mulsf3x>
 6ec:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_round>
 6f0:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscA>
 6f4:	38 f0       	brcs	.+14     	; 0x704 <__mulsf3+0x1c>
 6f6:	0e 94 33 03 	call	0x666	; 0x666 <__fp_pscB>
 6fa:	20 f0       	brcs	.+8      	; 0x704 <__mulsf3+0x1c>
 6fc:	95 23       	and	r25, r21
 6fe:	11 f0       	breq	.+4      	; 0x704 <__mulsf3+0x1c>
 700:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_inf>
 704:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_nan>
 708:	11 24       	eor	r1, r1
 70a:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_szero>

0000070e <__mulsf3x>:
 70e:	0e 94 4b 03 	call	0x696	; 0x696 <__fp_split3>
 712:	70 f3       	brcs	.-36     	; 0x6f0 <__mulsf3+0x8>

00000714 <__mulsf3_pse>:
 714:	95 9f       	mul	r25, r21
 716:	c1 f3       	breq	.-16     	; 0x708 <__mulsf3+0x20>
 718:	95 0f       	add	r25, r21
 71a:	50 e0       	ldi	r21, 0x00	; 0
 71c:	55 1f       	adc	r21, r21
 71e:	62 9f       	mul	r22, r18
 720:	f0 01       	movw	r30, r0
 722:	72 9f       	mul	r23, r18
 724:	bb 27       	eor	r27, r27
 726:	f0 0d       	add	r31, r0
 728:	b1 1d       	adc	r27, r1
 72a:	63 9f       	mul	r22, r19
 72c:	aa 27       	eor	r26, r26
 72e:	f0 0d       	add	r31, r0
 730:	b1 1d       	adc	r27, r1
 732:	aa 1f       	adc	r26, r26
 734:	64 9f       	mul	r22, r20
 736:	66 27       	eor	r22, r22
 738:	b0 0d       	add	r27, r0
 73a:	a1 1d       	adc	r26, r1
 73c:	66 1f       	adc	r22, r22
 73e:	82 9f       	mul	r24, r18
 740:	22 27       	eor	r18, r18
 742:	b0 0d       	add	r27, r0
 744:	a1 1d       	adc	r26, r1
 746:	62 1f       	adc	r22, r18
 748:	73 9f       	mul	r23, r19
 74a:	b0 0d       	add	r27, r0
 74c:	a1 1d       	adc	r26, r1
 74e:	62 1f       	adc	r22, r18
 750:	83 9f       	mul	r24, r19
 752:	a0 0d       	add	r26, r0
 754:	61 1d       	adc	r22, r1
 756:	22 1f       	adc	r18, r18
 758:	74 9f       	mul	r23, r20
 75a:	33 27       	eor	r19, r19
 75c:	a0 0d       	add	r26, r0
 75e:	61 1d       	adc	r22, r1
 760:	23 1f       	adc	r18, r19
 762:	84 9f       	mul	r24, r20
 764:	60 0d       	add	r22, r0
 766:	21 1d       	adc	r18, r1
 768:	82 2f       	mov	r24, r18
 76a:	76 2f       	mov	r23, r22
 76c:	6a 2f       	mov	r22, r26
 76e:	11 24       	eor	r1, r1
 770:	9f 57       	subi	r25, 0x7F	; 127
 772:	50 40       	sbci	r21, 0x00	; 0
 774:	9a f0       	brmi	.+38     	; 0x79c <__mulsf3_pse+0x88>
 776:	f1 f0       	breq	.+60     	; 0x7b4 <__mulsf3_pse+0xa0>
 778:	88 23       	and	r24, r24
 77a:	4a f0       	brmi	.+18     	; 0x78e <__mulsf3_pse+0x7a>
 77c:	ee 0f       	add	r30, r30
 77e:	ff 1f       	adc	r31, r31
 780:	bb 1f       	adc	r27, r27
 782:	66 1f       	adc	r22, r22
 784:	77 1f       	adc	r23, r23
 786:	88 1f       	adc	r24, r24
 788:	91 50       	subi	r25, 0x01	; 1
 78a:	50 40       	sbci	r21, 0x00	; 0
 78c:	a9 f7       	brne	.-22     	; 0x778 <__mulsf3_pse+0x64>
 78e:	9e 3f       	cpi	r25, 0xFE	; 254
 790:	51 05       	cpc	r21, r1
 792:	80 f0       	brcs	.+32     	; 0x7b4 <__mulsf3_pse+0xa0>
 794:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_inf>
 798:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_szero>
 79c:	5f 3f       	cpi	r21, 0xFF	; 255
 79e:	e4 f3       	brlt	.-8      	; 0x798 <__mulsf3_pse+0x84>
 7a0:	98 3e       	cpi	r25, 0xE8	; 232
 7a2:	d4 f3       	brlt	.-12     	; 0x798 <__mulsf3_pse+0x84>
 7a4:	86 95       	lsr	r24
 7a6:	77 95       	ror	r23
 7a8:	67 95       	ror	r22
 7aa:	b7 95       	ror	r27
 7ac:	f7 95       	ror	r31
 7ae:	e7 95       	ror	r30
 7b0:	9f 5f       	subi	r25, 0xFF	; 255
 7b2:	c1 f7       	brne	.-16     	; 0x7a4 <__mulsf3_pse+0x90>
 7b4:	fe 2b       	or	r31, r30
 7b6:	88 0f       	add	r24, r24
 7b8:	91 1d       	adc	r25, r1
 7ba:	96 95       	lsr	r25
 7bc:	87 95       	ror	r24
 7be:	97 f9       	bld	r25, 7
 7c0:	08 95       	ret

000007c2 <round>:
 7c2:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_splitA>
 7c6:	e8 f0       	brcs	.+58     	; 0x802 <round+0x40>
 7c8:	9e 37       	cpi	r25, 0x7E	; 126
 7ca:	e8 f0       	brcs	.+58     	; 0x806 <round+0x44>
 7cc:	96 39       	cpi	r25, 0x96	; 150
 7ce:	b8 f4       	brcc	.+46     	; 0x7fe <round+0x3c>
 7d0:	9e 38       	cpi	r25, 0x8E	; 142
 7d2:	48 f4       	brcc	.+18     	; 0x7e6 <round+0x24>
 7d4:	67 2f       	mov	r22, r23
 7d6:	78 2f       	mov	r23, r24
 7d8:	88 27       	eor	r24, r24
 7da:	98 5f       	subi	r25, 0xF8	; 248
 7dc:	f9 cf       	rjmp	.-14     	; 0x7d0 <round+0xe>
 7de:	86 95       	lsr	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	93 95       	inc	r25
 7e6:	95 39       	cpi	r25, 0x95	; 149
 7e8:	d0 f3       	brcs	.-12     	; 0x7de <round+0x1c>
 7ea:	b6 2f       	mov	r27, r22
 7ec:	b1 70       	andi	r27, 0x01	; 1
 7ee:	6b 0f       	add	r22, r27
 7f0:	71 1d       	adc	r23, r1
 7f2:	81 1d       	adc	r24, r1
 7f4:	20 f4       	brcc	.+8      	; 0x7fe <round+0x3c>
 7f6:	87 95       	ror	r24
 7f8:	77 95       	ror	r23
 7fa:	67 95       	ror	r22
 7fc:	93 95       	inc	r25
 7fe:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_mintl>
 802:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_mpack>
 806:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_szero>

0000080a <__fp_mintl>:
 80a:	88 23       	and	r24, r24
 80c:	71 f4       	brne	.+28     	; 0x82a <__fp_mintl+0x20>
 80e:	77 23       	and	r23, r23
 810:	21 f0       	breq	.+8      	; 0x81a <__fp_mintl+0x10>
 812:	98 50       	subi	r25, 0x08	; 8
 814:	87 2b       	or	r24, r23
 816:	76 2f       	mov	r23, r22
 818:	07 c0       	rjmp	.+14     	; 0x828 <__fp_mintl+0x1e>
 81a:	66 23       	and	r22, r22
 81c:	11 f4       	brne	.+4      	; 0x822 <__fp_mintl+0x18>
 81e:	99 27       	eor	r25, r25
 820:	0d c0       	rjmp	.+26     	; 0x83c <__fp_mintl+0x32>
 822:	90 51       	subi	r25, 0x10	; 16
 824:	86 2b       	or	r24, r22
 826:	70 e0       	ldi	r23, 0x00	; 0
 828:	60 e0       	ldi	r22, 0x00	; 0
 82a:	2a f0       	brmi	.+10     	; 0x836 <__fp_mintl+0x2c>
 82c:	9a 95       	dec	r25
 82e:	66 0f       	add	r22, r22
 830:	77 1f       	adc	r23, r23
 832:	88 1f       	adc	r24, r24
 834:	da f7       	brpl	.-10     	; 0x82c <__fp_mintl+0x22>
 836:	88 0f       	add	r24, r24
 838:	96 95       	lsr	r25
 83a:	87 95       	ror	r24
 83c:	97 f9       	bld	r25, 7
 83e:	08 95       	ret

00000840 <__fp_mpack>:
 840:	9f 3f       	cpi	r25, 0xFF	; 255
 842:	31 f0       	breq	.+12     	; 0x850 <__fp_mpack_finite+0xc>

00000844 <__fp_mpack_finite>:
 844:	91 50       	subi	r25, 0x01	; 1
 846:	20 f4       	brcc	.+8      	; 0x850 <__fp_mpack_finite+0xc>
 848:	87 95       	ror	r24
 84a:	77 95       	ror	r23
 84c:	67 95       	ror	r22
 84e:	b7 95       	ror	r27
 850:	88 0f       	add	r24, r24
 852:	91 1d       	adc	r25, r1
 854:	96 95       	lsr	r25
 856:	87 95       	ror	r24
 858:	97 f9       	bld	r25, 7
 85a:	08 95       	ret

0000085c <_exit>:
 85c:	f8 94       	cli

0000085e <__stop_program>:
 85e:	ff cf       	rjmp	.-2      	; 0x85e <__stop_program>
