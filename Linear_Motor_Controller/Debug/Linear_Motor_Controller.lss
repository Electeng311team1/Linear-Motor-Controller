
Linear_Motor_Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000730  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000730  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000760  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000956  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070e  00000000  00000000  00001166  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000428  00000000  00000000  00001874  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00001c9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000474  00000000  00000000  00001de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ca  00000000  00000000  0000225c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002526  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 01 01 	jmp	0x202	; 0x202 <__vector_7>
  20:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__vector_8>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 3f 01 	jmp	0x27e	; 0x27e <__vector_11>
  30:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_12>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 57 01 	call	0x2ae	; 0x2ae <main>
  88:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <driverTimers_Init>:
		

	
}

void driverTimersInterrupts_Init(){
  90:	e1 eb       	ldi	r30, 0xB1	; 177
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	81 60       	ori	r24, 0x01	; 1
  98:	80 83       	st	Z, r24
  9a:	80 ed       	ldi	r24, 0xD0	; 208
  9c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  a0:	88 e1       	ldi	r24, 0x18	; 24
  a2:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
  a6:	e1 e8       	ldi	r30, 0x81	; 129
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	80 83       	st	Z, r24
  b0:	20 9a       	sbi	0x04, 0	; 4
  b2:	8a b1       	in	r24, 0x0a	; 10
  b4:	80 6e       	ori	r24, 0xE0	; 224
  b6:	8a b9       	out	0x0a, r24	; 10
  b8:	28 98       	cbi	0x05, 0	; 5
  ba:	5d 98       	cbi	0x0b, 5	; 11
  bc:	5f 98       	cbi	0x0b, 7	; 11
  be:	5e 98       	cbi	0x0b, 6	; 11
  c0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <isNegativeCycle>
  c4:	08 95       	ret

000000c6 <setFrequency>:
  c6:	4f 92       	push	r4
  c8:	5f 92       	push	r5
  ca:	6f 92       	push	r6
  cc:	7f 92       	push	r7
  ce:	8f 92       	push	r8
  d0:	9f 92       	push	r9
  d2:	af 92       	push	r10
  d4:	bf 92       	push	r11
  d6:	cf 92       	push	r12
  d8:	df 92       	push	r13
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	69 01       	movw	r12, r18
  e0:	7a 01       	movw	r14, r20
  e2:	9b 01       	movw	r18, r22
  e4:	ac 01       	movw	r20, r24
  e6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__addsf3>
  ea:	9b 01       	movw	r18, r22
  ec:	ac 01       	movw	r20, r24
  ee:	60 e0       	ldi	r22, 0x00	; 0
  f0:	70 e0       	ldi	r23, 0x00	; 0
  f2:	8a e7       	ldi	r24, 0x7A	; 122
  f4:	94 e4       	ldi	r25, 0x44	; 68
  f6:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__divsf3>
  fa:	2b 01       	movw	r4, r22
  fc:	3c 01       	movw	r6, r24
  fe:	a7 01       	movw	r20, r14
 100:	96 01       	movw	r18, r12
 102:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulsf3>
 106:	4b 01       	movw	r8, r22
 108:	5c 01       	movw	r10, r24
 10a:	a7 01       	movw	r20, r14
 10c:	96 01       	movw	r18, r12
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	80 e8       	ldi	r24, 0x80	; 128
 114:	9f e3       	ldi	r25, 0x3F	; 63
 116:	0e 94 67 01 	call	0x2ce	; 0x2ce <__subsf3>
 11a:	a3 01       	movw	r20, r6
 11c:	92 01       	movw	r18, r4
 11e:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulsf3>
 122:	a5 01       	movw	r20, r10
 124:	94 01       	movw	r18, r8
 126:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__addsf3>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	a9 01       	movw	r20, r18
 130:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__addsf3>
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	4a e7       	ldi	r20, 0x7A	; 122
 13a:	54 e4       	ldi	r21, 0x44	; 68
 13c:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulsf3>
 140:	0e 94 4b 02 	call	0x496	; 0x496 <__fixunssfsi>
 144:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 148:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	4a e7       	ldi	r20, 0x7A	; 122
 152:	54 e4       	ldi	r21, 0x44	; 68
 154:	c5 01       	movw	r24, r10
 156:	b4 01       	movw	r22, r8
 158:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulsf3>
 15c:	0e 94 4b 02 	call	0x496	; 0x496 <__fixunssfsi>
 160:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 164:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	a9 01       	movw	r20, r18
 16e:	c7 01       	movw	r24, r14
 170:	b6 01       	movw	r22, r12
 172:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__cmpsf2>
 176:	81 11       	cpse	r24, r1
 178:	04 c0       	rjmp	.+8      	; 0x182 <setFrequency+0xbc>
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 180:	07 c0       	rjmp	.+14     	; 0x190 <setFrequency+0xca>
 182:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 186:	ef e6       	ldi	r30, 0x6F	; 111
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	86 60       	ori	r24, 0x06	; 6
 18e:	80 83       	st	Z, r24
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	df 90       	pop	r13
 196:	cf 90       	pop	r12
 198:	bf 90       	pop	r11
 19a:	af 90       	pop	r10
 19c:	9f 90       	pop	r9
 19e:	8f 90       	pop	r8
 1a0:	7f 90       	pop	r7
 1a2:	6f 90       	pop	r6
 1a4:	5f 90       	pop	r5
 1a6:	4f 90       	pop	r4
 1a8:	08 95       	ret

000001aa <__vector_8>:
		


}

  ISR(TIMER2_COMPB_vect){
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
 1b8:	ef 93       	push	r30
 1ba:	ff 93       	push	r31

		TIMSK2 &= ~(1<<OCIE2B);
 1bc:	e0 e7       	ldi	r30, 0x70	; 112
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	8b 7f       	andi	r24, 0xFB	; 251
 1c4:	80 83       	st	Z, r24
		TCNT1 = 0; //clear timer 1 count  to start next half cycle
 1c6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1ca:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 		if (stopDriver==0){
 1ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1d2:	81 11       	cpse	r24, r1
 1d4:	07 c0       	rjmp	.+14     	; 0x1e4 <__vector_8+0x3a>
			 if (isNegativeCycle){		//Set pins for next half cycle
 1d6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 1da:	88 23       	and	r24, r24
 1dc:	11 f0       	breq	.+4      	; 0x1e2 <__vector_8+0x38>
				SET_SW1; //sets pins for positive cycle
 1de:	28 9a       	sbi	0x05, 0	; 5
 1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <__vector_8+0x3a>
			} else {
				SET_SW2;//set pins on for positive cycle
 1e2:	5d 9a       	sbi	0x0b, 5	; 11
			}
		 
		 }
		
		isNegativeCycle = !isNegativeCycle; //set flag to indicate next half cycle
 1e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <isNegativeCycle>
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	89 27       	eor	r24, r25
 1ec:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <isNegativeCycle>
	  
	
  }
 1f0:	ff 91       	pop	r31
 1f2:	ef 91       	pop	r30
 1f4:	9f 91       	pop	r25
 1f6:	8f 91       	pop	r24
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <__vector_7>:

 																		
ISR(TIMER2_COMPA_vect){
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	8f 93       	push	r24
 20e:	ef 93       	push	r30
 210:	ff 93       	push	r31

		 TIMSK2 &= ~(1<<OCIE2A);	// Disable high dead time timer interrupts
 212:	e0 e7       	ldi	r30, 0x70	; 112
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	8d 7f       	andi	r24, 0xFD	; 253
 21a:	80 83       	st	Z, r24
		 
		 if (stopDriver==0){
 21c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 220:	81 11       	cpse	r24, r1
 222:	07 c0       	rjmp	.+14     	; 0x232 <__vector_7+0x30>
		 	if (isNegativeCycle){
 224:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 228:	88 23       	and	r24, r24
 22a:	11 f0       	breq	.+4      	; 0x230 <__vector_7+0x2e>
				SET_SW4; //turn on SW4
 22c:	5e 9a       	sbi	0x0b, 6	; 11
 22e:	01 c0       	rjmp	.+2      	; 0x232 <__vector_7+0x30>
			} else {
				SET_SW3; //turn on SW3
 230:	5f 9a       	sbi	0x0b, 7	; 11
		 
		 }

	 
	
}
 232:	ff 91       	pop	r31
 234:	ef 91       	pop	r30
 236:	8f 91       	pop	r24
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <__vector_12>:
									



ISR(TIMER1_COMPB_vect){
 242:	1f 92       	push	r1
 244:	0f 92       	push	r0
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	0f 92       	push	r0
 24a:	11 24       	eor	r1, r1
 24c:	8f 93       	push	r24
 24e:	ef 93       	push	r30
 250:	ff 93       	push	r31
	
		  if (isNegativeCycle){		//set to correct timer upper value for each half cycle
 252:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 256:	88 23       	and	r24, r24
 258:	11 f0       	breq	.+4      	; 0x25e <__vector_12+0x1c>
 		CLEAR_SW2; //turn off SW2
 25a:	5d 98       	cbi	0x0b, 5	; 11
 25c:	01 c0       	rjmp	.+2      	; 0x260 <__vector_12+0x1e>
		 //OCR1A = T_ON + T_OFF2; 
 	} else {
 		CLEAR_SW1; //TURN OFF SW1
 25e:	28 98       	cbi	0x05, 0	; 5
		 //OCR1A = T_ON + T_OFF1;
 	}

	TCNT2=0; 													//clear counter to start dead time timer
 260:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	TIMSK2 |= (1<<OCIE2A);			
 264:	e0 e7       	ldi	r30, 0x70	; 112
 266:	f0 e0       	ldi	r31, 0x00	; 0
 268:	80 81       	ld	r24, Z
 26a:	82 60       	ori	r24, 0x02	; 2
 26c:	80 83       	st	Z, r24
	  
 								// Enable dead time timer compare match A interrupts
}	
 26e:	ff 91       	pop	r31
 270:	ef 91       	pop	r30
 272:	8f 91       	pop	r24
 274:	0f 90       	pop	r0
 276:	0f be       	out	0x3f, r0	; 63
 278:	0f 90       	pop	r0
 27a:	1f 90       	pop	r1
 27c:	18 95       	reti

0000027e <__vector_11>:

	
ISR(TIMER1_COMPA_vect){
 27e:	1f 92       	push	r1
 280:	0f 92       	push	r0
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	0f 92       	push	r0
 286:	11 24       	eor	r1, r1
 288:	8f 93       	push	r24
	 
		  if (isNegativeCycle){
 28a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isNegativeCycle>
 28e:	88 23       	and	r24, r24
 290:	11 f0       	breq	.+4      	; 0x296 <__vector_11+0x18>
 			CLEAR_SW3; //turns off SW3
 292:	5f 98       	cbi	0x0b, 7	; 11
 294:	01 c0       	rjmp	.+2      	; 0x298 <__vector_11+0x1a>
 		} else {
 			CLEAR_SW4; //turns off SW4
 296:	5e 98       	cbi	0x0b, 6	; 11
 		}
 			TCNT2 = 0 ; //reset timer 0
 298:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 			TIMSK2 = (1<<OCIE2B); //enable low deadtime timer interrupts		
 29c:	84 e0       	ldi	r24, 0x04	; 4
 29e:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>


}
 2a2:	8f 91       	pop	r24
 2a4:	0f 90       	pop	r0
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	0f 90       	pop	r0
 2aa:	1f 90       	pop	r1
 2ac:	18 95       	reti

000002ae <main>:
{
	/*
	uart_initiate(UBRR_VALUE);
	char message[MAX_SIZE] = "Hello we are Team 1!\n\r";
	*/
	sei();	
 2ae:	78 94       	sei
	stopDriver = 0;
 2b0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>

	float frequency = 12.4;
// 	*mfc = 10;	
	
	float dutyCycle= 0.50; //must be greater than 0, less that 1
	setFrequency(frequency, dutyCycle);//acquire on/off times or alternatively could manually set on and off times
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	40 e0       	ldi	r20, 0x00	; 0
 2ba:	5f e3       	ldi	r21, 0x3F	; 63
 2bc:	66 e6       	ldi	r22, 0x66	; 102
 2be:	76 e6       	ldi	r23, 0x66	; 102
 2c0:	86 e4       	ldi	r24, 0x46	; 70
 2c2:	91 e4       	ldi	r25, 0x41	; 65
 2c4:	0e 94 63 00 	call	0xc6	; 0xc6 <setFrequency>
	driverTimers_Init();
 2c8:	0e 94 48 00 	call	0x90	; 0x90 <driverTimers_Init>
 2cc:	ff cf       	rjmp	.-2      	; 0x2cc <main+0x1e>

000002ce <__subsf3>:
 2ce:	50 58       	subi	r21, 0x80	; 128

000002d0 <__addsf3>:
 2d0:	bb 27       	eor	r27, r27
 2d2:	aa 27       	eor	r26, r26
 2d4:	0e 94 7f 01 	call	0x2fe	; 0x2fe <__addsf3x>
 2d8:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 2dc:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 2e0:	38 f0       	brcs	.+14     	; 0x2f0 <__addsf3+0x20>
 2e2:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 2e6:	20 f0       	brcs	.+8      	; 0x2f0 <__addsf3+0x20>
 2e8:	39 f4       	brne	.+14     	; 0x2f8 <__addsf3+0x28>
 2ea:	9f 3f       	cpi	r25, 0xFF	; 255
 2ec:	19 f4       	brne	.+6      	; 0x2f4 <__addsf3+0x24>
 2ee:	26 f4       	brtc	.+8      	; 0x2f8 <__addsf3+0x28>
 2f0:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
 2f4:	0e f4       	brtc	.+2      	; 0x2f8 <__addsf3+0x28>
 2f6:	e0 95       	com	r30
 2f8:	e7 fb       	bst	r30, 7
 2fa:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>

000002fe <__addsf3x>:
 2fe:	e9 2f       	mov	r30, r25
 300:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 304:	58 f3       	brcs	.-42     	; 0x2dc <__addsf3+0xc>
 306:	ba 17       	cp	r27, r26
 308:	62 07       	cpc	r22, r18
 30a:	73 07       	cpc	r23, r19
 30c:	84 07       	cpc	r24, r20
 30e:	95 07       	cpc	r25, r21
 310:	20 f0       	brcs	.+8      	; 0x31a <__addsf3x+0x1c>
 312:	79 f4       	brne	.+30     	; 0x332 <__addsf3x+0x34>
 314:	a6 f5       	brtc	.+104    	; 0x37e <__addsf3x+0x80>
 316:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_zero>
 31a:	0e f4       	brtc	.+2      	; 0x31e <__addsf3x+0x20>
 31c:	e0 95       	com	r30
 31e:	0b 2e       	mov	r0, r27
 320:	ba 2f       	mov	r27, r26
 322:	a0 2d       	mov	r26, r0
 324:	0b 01       	movw	r0, r22
 326:	b9 01       	movw	r22, r18
 328:	90 01       	movw	r18, r0
 32a:	0c 01       	movw	r0, r24
 32c:	ca 01       	movw	r24, r20
 32e:	a0 01       	movw	r20, r0
 330:	11 24       	eor	r1, r1
 332:	ff 27       	eor	r31, r31
 334:	59 1b       	sub	r21, r25
 336:	99 f0       	breq	.+38     	; 0x35e <__addsf3x+0x60>
 338:	59 3f       	cpi	r21, 0xF9	; 249
 33a:	50 f4       	brcc	.+20     	; 0x350 <__addsf3x+0x52>
 33c:	50 3e       	cpi	r21, 0xE0	; 224
 33e:	68 f1       	brcs	.+90     	; 0x39a <__addsf3x+0x9c>
 340:	1a 16       	cp	r1, r26
 342:	f0 40       	sbci	r31, 0x00	; 0
 344:	a2 2f       	mov	r26, r18
 346:	23 2f       	mov	r18, r19
 348:	34 2f       	mov	r19, r20
 34a:	44 27       	eor	r20, r20
 34c:	58 5f       	subi	r21, 0xF8	; 248
 34e:	f3 cf       	rjmp	.-26     	; 0x336 <__addsf3x+0x38>
 350:	46 95       	lsr	r20
 352:	37 95       	ror	r19
 354:	27 95       	ror	r18
 356:	a7 95       	ror	r26
 358:	f0 40       	sbci	r31, 0x00	; 0
 35a:	53 95       	inc	r21
 35c:	c9 f7       	brne	.-14     	; 0x350 <__addsf3x+0x52>
 35e:	7e f4       	brtc	.+30     	; 0x37e <__addsf3x+0x80>
 360:	1f 16       	cp	r1, r31
 362:	ba 0b       	sbc	r27, r26
 364:	62 0b       	sbc	r22, r18
 366:	73 0b       	sbc	r23, r19
 368:	84 0b       	sbc	r24, r20
 36a:	ba f0       	brmi	.+46     	; 0x39a <__addsf3x+0x9c>
 36c:	91 50       	subi	r25, 0x01	; 1
 36e:	a1 f0       	breq	.+40     	; 0x398 <__addsf3x+0x9a>
 370:	ff 0f       	add	r31, r31
 372:	bb 1f       	adc	r27, r27
 374:	66 1f       	adc	r22, r22
 376:	77 1f       	adc	r23, r23
 378:	88 1f       	adc	r24, r24
 37a:	c2 f7       	brpl	.-16     	; 0x36c <__addsf3x+0x6e>
 37c:	0e c0       	rjmp	.+28     	; 0x39a <__addsf3x+0x9c>
 37e:	ba 0f       	add	r27, r26
 380:	62 1f       	adc	r22, r18
 382:	73 1f       	adc	r23, r19
 384:	84 1f       	adc	r24, r20
 386:	48 f4       	brcc	.+18     	; 0x39a <__addsf3x+0x9c>
 388:	87 95       	ror	r24
 38a:	77 95       	ror	r23
 38c:	67 95       	ror	r22
 38e:	b7 95       	ror	r27
 390:	f7 95       	ror	r31
 392:	9e 3f       	cpi	r25, 0xFE	; 254
 394:	08 f0       	brcs	.+2      	; 0x398 <__addsf3x+0x9a>
 396:	b0 cf       	rjmp	.-160    	; 0x2f8 <__addsf3+0x28>
 398:	93 95       	inc	r25
 39a:	88 0f       	add	r24, r24
 39c:	08 f0       	brcs	.+2      	; 0x3a0 <__addsf3x+0xa2>
 39e:	99 27       	eor	r25, r25
 3a0:	ee 0f       	add	r30, r30
 3a2:	97 95       	ror	r25
 3a4:	87 95       	ror	r24
 3a6:	08 95       	ret

000003a8 <__cmpsf2>:
 3a8:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_cmp>
 3ac:	08 f4       	brcc	.+2      	; 0x3b0 <__cmpsf2+0x8>
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	08 95       	ret

000003b2 <__divsf3>:
 3b2:	0e 94 ed 01 	call	0x3da	; 0x3da <__divsf3x>
 3b6:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 3ba:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 3be:	58 f0       	brcs	.+22     	; 0x3d6 <__divsf3+0x24>
 3c0:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 3c4:	40 f0       	brcs	.+16     	; 0x3d6 <__divsf3+0x24>
 3c6:	29 f4       	brne	.+10     	; 0x3d2 <__divsf3+0x20>
 3c8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ca:	29 f0       	breq	.+10     	; 0x3d6 <__divsf3+0x24>
 3cc:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 3d0:	51 11       	cpse	r21, r1
 3d2:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 3d6:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>

000003da <__divsf3x>:
 3da:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 3de:	68 f3       	brcs	.-38     	; 0x3ba <__divsf3+0x8>

000003e0 <__divsf3_pse>:
 3e0:	99 23       	and	r25, r25
 3e2:	b1 f3       	breq	.-20     	; 0x3d0 <__divsf3+0x1e>
 3e4:	55 23       	and	r21, r21
 3e6:	91 f3       	breq	.-28     	; 0x3cc <__divsf3+0x1a>
 3e8:	95 1b       	sub	r25, r21
 3ea:	55 0b       	sbc	r21, r21
 3ec:	bb 27       	eor	r27, r27
 3ee:	aa 27       	eor	r26, r26
 3f0:	62 17       	cp	r22, r18
 3f2:	73 07       	cpc	r23, r19
 3f4:	84 07       	cpc	r24, r20
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f8:	9f 5f       	subi	r25, 0xFF	; 255
 3fa:	5f 4f       	sbci	r21, 0xFF	; 255
 3fc:	22 0f       	add	r18, r18
 3fe:	33 1f       	adc	r19, r19
 400:	44 1f       	adc	r20, r20
 402:	aa 1f       	adc	r26, r26
 404:	a9 f3       	breq	.-22     	; 0x3f0 <__divsf3_pse+0x10>
 406:	35 d0       	rcall	.+106    	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 408:	0e 2e       	mov	r0, r30
 40a:	3a f0       	brmi	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40c:	e0 e8       	ldi	r30, 0x80	; 128
 40e:	32 d0       	rcall	.+100    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 410:	91 50       	subi	r25, 0x01	; 1
 412:	50 40       	sbci	r21, 0x00	; 0
 414:	e6 95       	lsr	r30
 416:	00 1c       	adc	r0, r0
 418:	ca f7       	brpl	.-14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 41a:	2b d0       	rcall	.+86     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 41c:	fe 2f       	mov	r31, r30
 41e:	29 d0       	rcall	.+82     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 420:	66 0f       	add	r22, r22
 422:	77 1f       	adc	r23, r23
 424:	88 1f       	adc	r24, r24
 426:	bb 1f       	adc	r27, r27
 428:	26 17       	cp	r18, r22
 42a:	37 07       	cpc	r19, r23
 42c:	48 07       	cpc	r20, r24
 42e:	ab 07       	cpc	r26, r27
 430:	b0 e8       	ldi	r27, 0x80	; 128
 432:	09 f0       	breq	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	bb 0b       	sbc	r27, r27
 436:	80 2d       	mov	r24, r0
 438:	bf 01       	movw	r22, r30
 43a:	ff 27       	eor	r31, r31
 43c:	93 58       	subi	r25, 0x83	; 131
 43e:	5f 4f       	sbci	r21, 0xFF	; 255
 440:	3a f0       	brmi	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	9e 3f       	cpi	r25, 0xFE	; 254
 444:	51 05       	cpc	r21, r1
 446:	78 f0       	brcs	.+30     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 448:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 44c:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 450:	5f 3f       	cpi	r21, 0xFF	; 255
 452:	e4 f3       	brlt	.-8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 454:	98 3e       	cpi	r25, 0xE8	; 232
 456:	d4 f3       	brlt	.-12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 458:	86 95       	lsr	r24
 45a:	77 95       	ror	r23
 45c:	67 95       	ror	r22
 45e:	b7 95       	ror	r27
 460:	f7 95       	ror	r31
 462:	9f 5f       	subi	r25, 0xFF	; 255
 464:	c9 f7       	brne	.-14     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 466:	88 0f       	add	r24, r24
 468:	91 1d       	adc	r25, r1
 46a:	96 95       	lsr	r25
 46c:	87 95       	ror	r24
 46e:	97 f9       	bld	r25, 7
 470:	08 95       	ret
 472:	e1 e0       	ldi	r30, 0x01	; 1
 474:	66 0f       	add	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	88 1f       	adc	r24, r24
 47a:	bb 1f       	adc	r27, r27
 47c:	62 17       	cp	r22, r18
 47e:	73 07       	cpc	r23, r19
 480:	84 07       	cpc	r24, r20
 482:	ba 07       	cpc	r27, r26
 484:	20 f0       	brcs	.+8      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 486:	62 1b       	sub	r22, r18
 488:	73 0b       	sbc	r23, r19
 48a:	84 0b       	sbc	r24, r20
 48c:	ba 0b       	sbc	r27, r26
 48e:	ee 1f       	adc	r30, r30
 490:	88 f7       	brcc	.-30     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 492:	e0 95       	com	r30
 494:	08 95       	ret

00000496 <__fixunssfsi>:
 496:	0e 94 ce 02 	call	0x59c	; 0x59c <__fp_splitA>
 49a:	88 f0       	brcs	.+34     	; 0x4be <__fixunssfsi+0x28>
 49c:	9f 57       	subi	r25, 0x7F	; 127
 49e:	98 f0       	brcs	.+38     	; 0x4c6 <__fixunssfsi+0x30>
 4a0:	b9 2f       	mov	r27, r25
 4a2:	99 27       	eor	r25, r25
 4a4:	b7 51       	subi	r27, 0x17	; 23
 4a6:	b0 f0       	brcs	.+44     	; 0x4d4 <__fixunssfsi+0x3e>
 4a8:	e1 f0       	breq	.+56     	; 0x4e2 <__fixunssfsi+0x4c>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	1a f0       	brmi	.+6      	; 0x4ba <__fixunssfsi+0x24>
 4b4:	ba 95       	dec	r27
 4b6:	c9 f7       	brne	.-14     	; 0x4aa <__fixunssfsi+0x14>
 4b8:	14 c0       	rjmp	.+40     	; 0x4e2 <__fixunssfsi+0x4c>
 4ba:	b1 30       	cpi	r27, 0x01	; 1
 4bc:	91 f0       	breq	.+36     	; 0x4e2 <__fixunssfsi+0x4c>
 4be:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_zero>
 4c2:	b1 e0       	ldi	r27, 0x01	; 1
 4c4:	08 95       	ret
 4c6:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_zero>
 4ca:	67 2f       	mov	r22, r23
 4cc:	78 2f       	mov	r23, r24
 4ce:	88 27       	eor	r24, r24
 4d0:	b8 5f       	subi	r27, 0xF8	; 248
 4d2:	39 f0       	breq	.+14     	; 0x4e2 <__fixunssfsi+0x4c>
 4d4:	b9 3f       	cpi	r27, 0xF9	; 249
 4d6:	cc f3       	brlt	.-14     	; 0x4ca <__fixunssfsi+0x34>
 4d8:	86 95       	lsr	r24
 4da:	77 95       	ror	r23
 4dc:	67 95       	ror	r22
 4de:	b3 95       	inc	r27
 4e0:	d9 f7       	brne	.-10     	; 0x4d8 <__fixunssfsi+0x42>
 4e2:	3e f4       	brtc	.+14     	; 0x4f2 <__fixunssfsi+0x5c>
 4e4:	90 95       	com	r25
 4e6:	80 95       	com	r24
 4e8:	70 95       	com	r23
 4ea:	61 95       	neg	r22
 4ec:	7f 4f       	sbci	r23, 0xFF	; 255
 4ee:	8f 4f       	sbci	r24, 0xFF	; 255
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	08 95       	ret

000004f4 <__fp_cmp>:
 4f4:	99 0f       	add	r25, r25
 4f6:	00 08       	sbc	r0, r0
 4f8:	55 0f       	add	r21, r21
 4fa:	aa 0b       	sbc	r26, r26
 4fc:	e0 e8       	ldi	r30, 0x80	; 128
 4fe:	fe ef       	ldi	r31, 0xFE	; 254
 500:	16 16       	cp	r1, r22
 502:	17 06       	cpc	r1, r23
 504:	e8 07       	cpc	r30, r24
 506:	f9 07       	cpc	r31, r25
 508:	c0 f0       	brcs	.+48     	; 0x53a <__fp_cmp+0x46>
 50a:	12 16       	cp	r1, r18
 50c:	13 06       	cpc	r1, r19
 50e:	e4 07       	cpc	r30, r20
 510:	f5 07       	cpc	r31, r21
 512:	98 f0       	brcs	.+38     	; 0x53a <__fp_cmp+0x46>
 514:	62 1b       	sub	r22, r18
 516:	73 0b       	sbc	r23, r19
 518:	84 0b       	sbc	r24, r20
 51a:	95 0b       	sbc	r25, r21
 51c:	39 f4       	brne	.+14     	; 0x52c <__fp_cmp+0x38>
 51e:	0a 26       	eor	r0, r26
 520:	61 f0       	breq	.+24     	; 0x53a <__fp_cmp+0x46>
 522:	23 2b       	or	r18, r19
 524:	24 2b       	or	r18, r20
 526:	25 2b       	or	r18, r21
 528:	21 f4       	brne	.+8      	; 0x532 <__fp_cmp+0x3e>
 52a:	08 95       	ret
 52c:	0a 26       	eor	r0, r26
 52e:	09 f4       	brne	.+2      	; 0x532 <__fp_cmp+0x3e>
 530:	a1 40       	sbci	r26, 0x01	; 1
 532:	a6 95       	lsr	r26
 534:	8f ef       	ldi	r24, 0xFF	; 255
 536:	81 1d       	adc	r24, r1
 538:	81 1d       	adc	r24, r1
 53a:	08 95       	ret

0000053c <__fp_inf>:
 53c:	97 f9       	bld	r25, 7
 53e:	9f 67       	ori	r25, 0x7F	; 127
 540:	80 e8       	ldi	r24, 0x80	; 128
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	08 95       	ret

00000548 <__fp_nan>:
 548:	9f ef       	ldi	r25, 0xFF	; 255
 54a:	80 ec       	ldi	r24, 0xC0	; 192
 54c:	08 95       	ret

0000054e <__fp_pscA>:
 54e:	00 24       	eor	r0, r0
 550:	0a 94       	dec	r0
 552:	16 16       	cp	r1, r22
 554:	17 06       	cpc	r1, r23
 556:	18 06       	cpc	r1, r24
 558:	09 06       	cpc	r0, r25
 55a:	08 95       	ret

0000055c <__fp_pscB>:
 55c:	00 24       	eor	r0, r0
 55e:	0a 94       	dec	r0
 560:	12 16       	cp	r1, r18
 562:	13 06       	cpc	r1, r19
 564:	14 06       	cpc	r1, r20
 566:	05 06       	cpc	r0, r21
 568:	08 95       	ret

0000056a <__fp_round>:
 56a:	09 2e       	mov	r0, r25
 56c:	03 94       	inc	r0
 56e:	00 0c       	add	r0, r0
 570:	11 f4       	brne	.+4      	; 0x576 <__fp_round+0xc>
 572:	88 23       	and	r24, r24
 574:	52 f0       	brmi	.+20     	; 0x58a <__fp_round+0x20>
 576:	bb 0f       	add	r27, r27
 578:	40 f4       	brcc	.+16     	; 0x58a <__fp_round+0x20>
 57a:	bf 2b       	or	r27, r31
 57c:	11 f4       	brne	.+4      	; 0x582 <__fp_round+0x18>
 57e:	60 ff       	sbrs	r22, 0
 580:	04 c0       	rjmp	.+8      	; 0x58a <__fp_round+0x20>
 582:	6f 5f       	subi	r22, 0xFF	; 255
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	8f 4f       	sbci	r24, 0xFF	; 255
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__fp_split3>:
 58c:	57 fd       	sbrc	r21, 7
 58e:	90 58       	subi	r25, 0x80	; 128
 590:	44 0f       	add	r20, r20
 592:	55 1f       	adc	r21, r21
 594:	59 f0       	breq	.+22     	; 0x5ac <__fp_splitA+0x10>
 596:	5f 3f       	cpi	r21, 0xFF	; 255
 598:	71 f0       	breq	.+28     	; 0x5b6 <__fp_splitA+0x1a>
 59a:	47 95       	ror	r20

0000059c <__fp_splitA>:
 59c:	88 0f       	add	r24, r24
 59e:	97 fb       	bst	r25, 7
 5a0:	99 1f       	adc	r25, r25
 5a2:	61 f0       	breq	.+24     	; 0x5bc <__fp_splitA+0x20>
 5a4:	9f 3f       	cpi	r25, 0xFF	; 255
 5a6:	79 f0       	breq	.+30     	; 0x5c6 <__fp_splitA+0x2a>
 5a8:	87 95       	ror	r24
 5aa:	08 95       	ret
 5ac:	12 16       	cp	r1, r18
 5ae:	13 06       	cpc	r1, r19
 5b0:	14 06       	cpc	r1, r20
 5b2:	55 1f       	adc	r21, r21
 5b4:	f2 cf       	rjmp	.-28     	; 0x59a <__fp_split3+0xe>
 5b6:	46 95       	lsr	r20
 5b8:	f1 df       	rcall	.-30     	; 0x59c <__fp_splitA>
 5ba:	08 c0       	rjmp	.+16     	; 0x5cc <__fp_splitA+0x30>
 5bc:	16 16       	cp	r1, r22
 5be:	17 06       	cpc	r1, r23
 5c0:	18 06       	cpc	r1, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	f1 cf       	rjmp	.-30     	; 0x5a8 <__fp_splitA+0xc>
 5c6:	86 95       	lsr	r24
 5c8:	71 05       	cpc	r23, r1
 5ca:	61 05       	cpc	r22, r1
 5cc:	08 94       	sec
 5ce:	08 95       	ret

000005d0 <__fp_zero>:
 5d0:	e8 94       	clt

000005d2 <__fp_szero>:
 5d2:	bb 27       	eor	r27, r27
 5d4:	66 27       	eor	r22, r22
 5d6:	77 27       	eor	r23, r23
 5d8:	cb 01       	movw	r24, r22
 5da:	97 f9       	bld	r25, 7
 5dc:	08 95       	ret

000005de <__mulsf3>:
 5de:	0e 94 02 03 	call	0x604	; 0x604 <__mulsf3x>
 5e2:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 5e6:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 5ea:	38 f0       	brcs	.+14     	; 0x5fa <__mulsf3+0x1c>
 5ec:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 5f0:	20 f0       	brcs	.+8      	; 0x5fa <__mulsf3+0x1c>
 5f2:	95 23       	and	r25, r21
 5f4:	11 f0       	breq	.+4      	; 0x5fa <__mulsf3+0x1c>
 5f6:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 5fa:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
 5fe:	11 24       	eor	r1, r1
 600:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>

00000604 <__mulsf3x>:
 604:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 608:	70 f3       	brcs	.-36     	; 0x5e6 <__mulsf3+0x8>

0000060a <__mulsf3_pse>:
 60a:	95 9f       	mul	r25, r21
 60c:	c1 f3       	breq	.-16     	; 0x5fe <__mulsf3+0x20>
 60e:	95 0f       	add	r25, r21
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	55 1f       	adc	r21, r21
 614:	62 9f       	mul	r22, r18
 616:	f0 01       	movw	r30, r0
 618:	72 9f       	mul	r23, r18
 61a:	bb 27       	eor	r27, r27
 61c:	f0 0d       	add	r31, r0
 61e:	b1 1d       	adc	r27, r1
 620:	63 9f       	mul	r22, r19
 622:	aa 27       	eor	r26, r26
 624:	f0 0d       	add	r31, r0
 626:	b1 1d       	adc	r27, r1
 628:	aa 1f       	adc	r26, r26
 62a:	64 9f       	mul	r22, r20
 62c:	66 27       	eor	r22, r22
 62e:	b0 0d       	add	r27, r0
 630:	a1 1d       	adc	r26, r1
 632:	66 1f       	adc	r22, r22
 634:	82 9f       	mul	r24, r18
 636:	22 27       	eor	r18, r18
 638:	b0 0d       	add	r27, r0
 63a:	a1 1d       	adc	r26, r1
 63c:	62 1f       	adc	r22, r18
 63e:	73 9f       	mul	r23, r19
 640:	b0 0d       	add	r27, r0
 642:	a1 1d       	adc	r26, r1
 644:	62 1f       	adc	r22, r18
 646:	83 9f       	mul	r24, r19
 648:	a0 0d       	add	r26, r0
 64a:	61 1d       	adc	r22, r1
 64c:	22 1f       	adc	r18, r18
 64e:	74 9f       	mul	r23, r20
 650:	33 27       	eor	r19, r19
 652:	a0 0d       	add	r26, r0
 654:	61 1d       	adc	r22, r1
 656:	23 1f       	adc	r18, r19
 658:	84 9f       	mul	r24, r20
 65a:	60 0d       	add	r22, r0
 65c:	21 1d       	adc	r18, r1
 65e:	82 2f       	mov	r24, r18
 660:	76 2f       	mov	r23, r22
 662:	6a 2f       	mov	r22, r26
 664:	11 24       	eor	r1, r1
 666:	9f 57       	subi	r25, 0x7F	; 127
 668:	50 40       	sbci	r21, 0x00	; 0
 66a:	9a f0       	brmi	.+38     	; 0x692 <__mulsf3_pse+0x88>
 66c:	f1 f0       	breq	.+60     	; 0x6aa <__mulsf3_pse+0xa0>
 66e:	88 23       	and	r24, r24
 670:	4a f0       	brmi	.+18     	; 0x684 <__mulsf3_pse+0x7a>
 672:	ee 0f       	add	r30, r30
 674:	ff 1f       	adc	r31, r31
 676:	bb 1f       	adc	r27, r27
 678:	66 1f       	adc	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	91 50       	subi	r25, 0x01	; 1
 680:	50 40       	sbci	r21, 0x00	; 0
 682:	a9 f7       	brne	.-22     	; 0x66e <__mulsf3_pse+0x64>
 684:	9e 3f       	cpi	r25, 0xFE	; 254
 686:	51 05       	cpc	r21, r1
 688:	80 f0       	brcs	.+32     	; 0x6aa <__mulsf3_pse+0xa0>
 68a:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 68e:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 692:	5f 3f       	cpi	r21, 0xFF	; 255
 694:	e4 f3       	brlt	.-8      	; 0x68e <__mulsf3_pse+0x84>
 696:	98 3e       	cpi	r25, 0xE8	; 232
 698:	d4 f3       	brlt	.-12     	; 0x68e <__mulsf3_pse+0x84>
 69a:	86 95       	lsr	r24
 69c:	77 95       	ror	r23
 69e:	67 95       	ror	r22
 6a0:	b7 95       	ror	r27
 6a2:	f7 95       	ror	r31
 6a4:	e7 95       	ror	r30
 6a6:	9f 5f       	subi	r25, 0xFF	; 255
 6a8:	c1 f7       	brne	.-16     	; 0x69a <__mulsf3_pse+0x90>
 6aa:	fe 2b       	or	r31, r30
 6ac:	88 0f       	add	r24, r24
 6ae:	91 1d       	adc	r25, r1
 6b0:	96 95       	lsr	r25
 6b2:	87 95       	ror	r24
 6b4:	97 f9       	bld	r25, 7
 6b6:	08 95       	ret

000006b8 <_exit>:
 6b8:	f8 94       	cli

000006ba <__stop_program>:
 6ba:	ff cf       	rjmp	.-2      	; 0x6ba <__stop_program>
